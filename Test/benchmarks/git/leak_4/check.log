../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_4/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_4/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_4/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘move_array’:
./benchmarks/git/leak_4/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_4/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_4/git_leak_4.c:9:
./benchmarks/git/leak_4/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_4/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: At top level:
./benchmarks/git/leak_4/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_4/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: implicit declaration of function ‘parse_commit’ [-Wimplicit-function-declaration]
   39 |                 parse_commit(array[i]);
      |                 ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: implicit declaration of function ‘paint_down_to_common’ [-Wimplicit-function-declaration]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: assignment to ‘struct commit_list *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: implicit declaration of function ‘clear_commit_marks’ [-Wimplicit-function-declaration]
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: implicit declaration of function ‘free_commit_list’ [-Wimplicit-function-declaration]
   60 |                 free_commit_list(common);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:121:33: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: implicit declaration of function ‘get_oid_hex’ [-Wimplicit-function-declaration]
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: implicit declaration of function ‘parse_object’ [-Wimplicit-function-declaration]
  139 |                 obj = parse_object(&oid);
      |                       ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: assignment to ‘struct object *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  139 |                 obj = parse_object(&oid);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: implicit declaration of function ‘peel_to_type’ [-Wimplicit-function-declaration]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:140:26: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                          ^
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: implicit declaration of function ‘add_merge_parent’; did you mean ‘find_merge_parents’? [-Wimplicit-function-declaration]
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^~~~~~~~~~~~~~~~
      |                 find_merge_parents
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: implicit declaration of function ‘lookup_commit’ [-Wimplicit-function-declaration]
  146 |         head_commit = lookup_commit(head);
      |                       ^~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: assignment to ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  146 |         head_commit = lookup_commit(head);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: implicit declaration of function ‘pop_commit’ [-Wimplicit-function-declaration]
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: initialization of ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: implicit declaration of function ‘oidcmp’ [-Wimplicit-function-declaration]
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: implicit declaration of function ‘commit_list_count’; did you mean ‘commit_list_insert’? [-Wimplicit-function-declaration]
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^~~~~~~~~~~~~~~~~
      |                        commit_list_insert

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 44%)
 phase parsing                      :   0.05 ( 71%)   0.01 (100%)   0.06 ( 75%)  1193k ( 40%)
 phase opt and generate             :   0.02 ( 29%)   0.00 (  0%)   0.02 ( 25%)   457k ( 15%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)     0  (  0%)
 callgraph ipa passes               :   0.01 ( 14%)   0.00 (  0%)   0.01 ( 12%)   219k (  7%)
 preprocessing                      :   0.02 ( 29%)   0.01 (100%)   0.01 ( 12%)   348k ( 12%)
 lexical analysis                   :   0.01 ( 14%)   0.00 (  0%)   0.02 ( 25%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)   609k ( 21%)
 parser function body               :   0.02 ( 29%)   0.00 (  0%)   0.02 ( 25%)    83k (  3%)
 tree gimplify                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 13%)   106k (  4%)
 dominance computation              :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 loop init                          :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    15k (  1%)
 TOTAL                              :   0.07          0.01          0.08         2960k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    73k (  3%)
 ipa lto decl in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    55k (  2%)
 TOTAL                              :   0.00          0.00          0.01         2233k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
node:= 5 
 	next_branch :=11
node:= 6 
 	next_branch :=7
	next_branch :=9
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=6
	next_branch :=12
node:= 12 
 	next_branch :=14
	next_branch :=13
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 node:= 15 
 	next_branch :=29
node:= 16 
 	next_branch :=17
	next_branch :=18
node:= 17 
 	next_branch :=19
node:= 18 
 	next_branch :=19
node:= 19 
 	next_branch :=23
	next_branch :=20
node:= 20 
 	next_branch :=23
	next_branch :=21
node:= 21 
 	next_branch :=23
	next_branch :=22
node:= 22 
 	next_branch :=23
	next_branch :=24
node:= 23 
 	next_branch :=27
node:= 24 
 	next_branch :=25
	next_branch :=26
node:= 25 
 	next_branch :=27
node:= 26 
 	next_branch :=28
node:= 27 
 	next_branch :=28
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=16
	next_branch :=30
node:= 30 
 	next_branch :=31
	next_branch :=32
node:= 31 
 	next_branch :=32
node:= 32 
 	next_branch :=38
node:= 33 
 	next_branch :=37
node:= 34 
 	next_branch :=35
	next_branch :=36
node:= 35 
 	next_branch :=36
node:= 36 
 	next_branch :=37
node:= 37 
 	next_branch :=34
	next_branch :=38
node:= 38 
 	next_branch :=33
	next_branch :=44
node:= 39 
 	next_branch :=40
	next_branch :=43
node:= 40 
 	next_branch :=41
	next_branch :=42
node:= 41 
 	next_branch :=42
node:= 42 
 	next_branch :=43
node:= 43 
 	next_branch :=44
node:= 44 
 	next_branch :=39
	next_branch :=45
=======node_fun:reduce_heads=========
node:= 2 
 	next_branch :=55
	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=5
	next_branch :=10
node:= 10 
 	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=11
	next_branch :=15
node:= 15 
 	next_branch :=17
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=16
	next_branch :=39
node:= 18 
 	next_branch :=20
	next_branch :=19
node:= 19 
 	next_branch :=26
node:= 20 
 	next_branch :=38
node:= 21 
 	next_branch :=23
	next_branch :=22
node:= 22 
 	next_branch :=23
	next_branch :=24
node:= 23 
 	next_branch :=25
node:= 24 
 	next_branch :=25
node:= 25 
 	next_branch :=26
node:= 26 
 	next_branch :=21
	next_branch :=27
node:= 27 
 	next_branch :=28
	next_branch :=32
node:= 28 
 	next_branch :=32
node:= 29 
 	next_branch :=30
	next_branch :=31
node:= 30 
 	next_branch :=31
node:= 31 
 	next_branch :=33
node:= 32 
 	next_branch :=33
node:= 33 
 	next_branch :=29
	next_branch :=34
node:= 34 
 	next_branch :=36
node:= 35 
 	next_branch :=36
node:= 36 
 	next_branch :=35
	next_branch :=37
node:= 37 
 	next_branch :=38
node:= 38 
 	next_branch :=39
node:= 39 
 	next_branch :=18
	next_branch :=40
node:= 40 
 	next_branch :=41
	next_branch :=42
node:= 41 
 	next_branch :=42
node:= 42 
 	next_branch :=46
node:= 43 
 	next_branch :=44
	next_branch :=45
node:= 44 
 	next_branch :=45
node:= 45 
 	next_branch :=46
node:= 46 
 	next_branch :=43
	next_branch :=50
node:= 47 
 	next_branch :=48
	next_branch :=49
node:= 48 
 	next_branch :=49
node:= 49 
 	next_branch :=50
node:= 50 
 	next_branch :=47
	next_branch :=51
node:= 51 
 	next_branch :=53
node:= 52 
 	next_branch :=53
node:= 53 
 	next_branch :=52
	next_branch :=54
node:= 54 
 	next_branch :=55
=======node_fun:commit_list_insert=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 25 
===============The second stage : Mapping stmt=================
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
# .MEM_136 = VDEF <.MEM_135>
orig_cnt_101 = commit_list_count (_100);
# .MEM_137 = VDEF <.MEM_136>
cnt_102 = commit_list_count (h_99);
# .MEM_138 = VDEF <.MEM_134>
free_commit_list (h_99);
# .MEM_20 = VDEF <.MEM_138>
free_commit_list (_3);
# VUSE <.MEM_125>
newline_32 = strchr (p_31, 10);
# VUSE <.MEM_125>
_35 = strlen (p_31);
# .MEM_150 = VDEF <.MEM_125>
_42 = get_oid_hex (p_31, &oid);
# .MEM_151 = VDEF <.MEM_150>
_45 = parse_object (&oid);
# .MEM_152 = VDEF <.MEM_151>
_48 = peel_to_type (0B, 0, obj_47, 1);
# .MEM_153 = VDEF <.MEM_152>
commit_list_insert (parent_50, &parents);
# .MEM_154 = VDEF <.MEM_153>
add_merge_parent (&result, _52, _51);
# .MEM_140 = VDEF <.MEM_125>
_55 = lookup_commit (&head);
# .MEM_141 = VDEF <.MEM_140>
commit_list_insert (head_commit_57, &parents);
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
# .MEM_147 = VDEF <.MEM_129>
_60 = pop_commit (&parents);
# .MEM_148 = VDEF <.MEM_128>
_70 = oidcmp (_69, _63);
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);
# .MEM_229 = VDEF <.MEM_195>
parse_commit (_97);
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
# .MEM_223 = VDEF <.MEM_200>
clear_commit_marks (_152, 983040);
# .MEM_225 = VDEF <.MEM_201>
clear_commit_marks (_157, 983040);
# .MEM_224 = VDEF <.MEM_201>
free_commit_list (common_126);
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);
# .MEM_214 = VDEF <.MEM_213>
memcpy (work_86, array_50, _194);
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
h_99 = reduce_heads (_98);
=============== *this point analyzable =================
orig_cnt_101 = commit_list_count (_100);
=============== *this point analyzable =================
cnt_102 = commit_list_count (h_99);
=============== *this point analyzable =================
newline_32 = strchr (p_31, 10);
=============== *this point analyzable =================
_35 = strlen (p_31);
=============== *this point analyzable =================
_42 = get_oid_hex (p_31, &oid);
=============== *this point analyzable =================
_45 = parse_object (&oid);
=============== *this point analyzable =================
_48 = peel_to_type (0B, 0, obj_47, 1);
=============== *this point analyzable =================
_55 = lookup_commit (&head);
=============== *this point analyzable =================
_59 = reduce_heads (_58);
=============== *this point analyzable =================
_60 = pop_commit (&parents);
=============== *this point analyzable =================
_70 = oidcmp (_69, _63);
=============== *this point analyzable =================
array_50 = calloc (_11, 8);
=============== *this point analyzable =================
work_86 = calloc (_85, 8);
=============== *this point analyzable =================
redundant_88 = calloc (_87, 1);
=============== *this point analyzable =================
_90 = st_mult (4, _89);
=============== *this point analyzable =================
filled_index_92 = malloc (_91);
=============== *this point analyzable =================
_124 = paint_down_to_common (_123, filled_107, work_86);
=============== *this point analyzable =================
_193 = st_mult (8, _160);
=============== *this point analyzable =================
_26 = commit_list_insert (_25, tail_30);
=============== *this point analyzable =================
new_list_4 = malloc (16);
=============== *this point analyzable =================
h_99 = reduce_heads (_98);
=============== *this point analyzable =================
orig_cnt_101 = commit_list_count (_100);
=============== *this point analyzable =================
free_commit_list (_3);
=============== *this point analyzable =================
newline_32 = strchr (p_31, 10);
=============== *this point analyzable =================
_48 = peel_to_type (0B, 0, obj_47, 1);
=============== *this point analyzable =================
commit_list_insert (parent_50, &parents);
=============== *this point analyzable =================
add_merge_parent (&result, _52, _51);
=============== *this point analyzable =================
add_merge_parent (&result, _52, _51);
=============== *this point analyzable =================
commit_list_insert (head_commit_57, &parents);
=============== *this point analyzable =================
_59 = reduce_heads (_58);
=============== *this point analyzable =================
_70 = oidcmp (_69, _63);
=============== *this point analyzable =================
_70 = oidcmp (_69, _63);
=============== *this point analyzable =================
array_50 = calloc (_11, 8);
=============== *this point analyzable =================
work_86 = calloc (_85, 8);
=============== *this point analyzable =================
redundant_88 = calloc (_87, 1);
=============== *this point analyzable =================
_90 = st_mult (4, _89);
=============== *this point analyzable =================
filled_index_92 = malloc (_91);
=============== *this point analyzable =================
parse_commit (_97);
=============== *this point analyzable =================
_124 = paint_down_to_common (_123, filled_107, work_86);
=============== *this point analyzable =================
_124 = paint_down_to_common (_123, filled_107, work_86);
=============== *this point analyzable =================
clear_commit_marks (_152, 983040);
=============== *this point analyzable =================
clear_commit_marks (_157, 983040);
=============== *this point analyzable =================
free_commit_list (common_126);
=============== *this point analyzable =================
_193 = st_mult (8, _160);
=============== *this point analyzable =================
memcpy (work_86, array_50, _194);
=============== *this point analyzable =================
_26 = commit_list_insert (_25, tail_30);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab56798
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4ee10 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f9b1ab32ee8>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = array_50 + _150;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = *_151;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = array_50 + _128;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = *_129;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = _130->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_132 = _131 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_132 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:20: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = array_50 + _121;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *_122;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = array_50 + _112;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *_96;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab56798
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4ee10 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f9b1ab32ee8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab5df78
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab54f30 work>
    def_stmt work_86 = calloc (_85, 8);
    version:86
    ptr-info 0x7f9b1ab32f78>
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);
work_86 = calloc (_85, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab5df78
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab54f30 work>
    def_stmt work_86 = calloc (_85, 8);
    version:86
    ptr-info 0x7f9b1ab32f78>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64048
    type <pointer_type 0x7f9b1ab267e0
        type <integer_type 0x7f9b1b019348 unsigned char public unsigned QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1b004cd8 0> max <integer_cst 0x7f9b1b004c78 255>
            pointer_to_this <pointer_type 0x7f9b1ab267e0>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63000 redundant>
    def_stmt redundant_88 = calloc (_87, 1);
    version:88
    ptr-info 0x7f9b1ab32f90>
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);
redundant_88 = calloc (_87, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64048
    type <pointer_type 0x7f9b1ab267e0
        type <integer_type 0x7f9b1b019348 unsigned char public unsigned QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1b004cd8 0> max <integer_cst 0x7f9b1b004c78 255>
            pointer_to_this <pointer_type 0x7f9b1ab267e0>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63000 redundant>
    def_stmt redundant_88 = calloc (_87, 1);
    version:88
    ptr-info 0x7f9b1ab32f90>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab640d8
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _90 = st_mult (4, _89);
    version:90>
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);
_90 = st_mult (4, _89);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_91 = (long unsigned int) _90;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab640d8
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _90 = st_mult (4, _89);
    version:90>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64168
    type <pointer_type 0x7f9b1b0209d8
        type <integer_type 0x7f9b1b0195e8 int public SI
            size <integer_cst 0x7f9b1b004df8 constant 32>
            unit-size <integer_cst 0x7f9b1b004e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
            pointer_to_this <pointer_type 0x7f9b1b0209d8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63090 filled_index>
    def_stmt filled_index_92 = malloc (_91);
    version:92
    ptr-info 0x7f9b1ab32fa8>
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64168
    type <pointer_type 0x7f9b1b0209d8
        type <integer_type 0x7f9b1b0195e8 int public SI
            size <integer_cst 0x7f9b1b004df8 constant 32>
            unit-size <integer_cst 0x7f9b1b004e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
            pointer_to_this <pointer_type 0x7f9b1b0209d8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63090 filled_index>
    def_stmt filled_index_92 = malloc (_91);
    version:92
    ptr-info 0x7f9b1ab32fa8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64a68
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _124 = paint_down_to_common (_123, filled_107, work_86);
    version:124>
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64a68
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _124 = paint_down_to_common (_123, filled_107, work_86);
    version:124>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab65f78
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _193 = st_mult (8, _160);
    version:193>
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);
_193 = st_mult (8, _160);
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_194 = (long unsigned int) _193;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (_160 != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab65f78
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _193 = st_mult (8, _160);
    version:193>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab563a8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7f9b1ab32e40>
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab563a8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7f9b1ab32e40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab51f30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = array_50 + _150;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = *_151;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = array_50 + _128;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = *_129;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = _130->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_132 = _131 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_132 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:20: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = array_50 + _121;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *_122;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = array_50 + _112;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *_96;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab51f30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab5df30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _85 = (long unsigned int) num_head_32;
    version:85>
_85 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);
work_86 = calloc (_85, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab5df30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _85 = (long unsigned int) num_head_32;
    version:85>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _87 = (long unsigned int) num_head_32;
    version:87>
_87 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);
redundant_88 = calloc (_87, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _87 = (long unsigned int) num_head_32;
    version:87>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64090
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _89 = num_head_32 + -1;
    version:89>
_89 = num_head_32 + -1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);
_90 = st_mult (4, _89);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_91 = (long unsigned int) _90;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64090
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _89 = num_head_32 + -1;
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64120
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _91 = (long unsigned int) _90;
    version:91>
_91 = (long unsigned int) _90;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64120
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _91 = (long unsigned int) _90;
    version:91>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab642d0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _97 = *_96;
    version:97
    ptr-info 0x7f9b1ab32fd8>
# VUSE <.MEM_195>
_97 = *_96;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_229 = VDEF <.MEM_195>
parse_commit (_97);
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_229 = VDEF <.MEM_195>
parse_commit (_97);
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab642d0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _97 = *_96;
    version:97
    ptr-info 0x7f9b1ab32fd8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64a20
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _123 = *_122;
    version:123
    ptr-info 0x7f9b1ab13ae0>
# VUSE <.MEM_197>
_123 = *_122;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64a20
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _123 = *_122;
    version:123
    ptr-info 0x7f9b1ab13ae0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab645a0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab63240 filled>
    def_stmt filled_107 = PHI <0(19), filled_189(25)>
    version:107>
filled_107 = PHI <0(19), filled_189(25)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab645a0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab63240 filled>
    def_stmt filled_107 = PHI <0(19), filled_189(25)>
    version:107>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab65288
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _152 = *_151;
    version:152
    ptr-info 0x7f9b1ab6f090>
# VUSE <.MEM_200>
_152 = *_151;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_223 = VDEF <.MEM_200>
clear_commit_marks (_152, 983040);
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_223 = VDEF <.MEM_200>
clear_commit_marks (_152, 983040);
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab65288
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _152 = *_151;
    version:152
    ptr-info 0x7f9b1ab6f090>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab653f0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _157 = *_156;
    version:157
    ptr-info 0x7f9b1ab6f0c0>
# VUSE <.MEM_201>
_157 = *_156;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_225 = VDEF <.MEM_201>
clear_commit_marks (_157, 983040);
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_225 = VDEF <.MEM_201>
clear_commit_marks (_157, 983040);
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab653f0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _157 = *_156;
    version:157
    ptr-info 0x7f9b1ab6f0c0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab632d0 common>
    def_stmt common_126 = (struct commit_list *) _125;
    version:126
    ptr-info 0x7f9b1ab13af8>
common_126 = (struct commit_list *) _125;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_224 = VDEF <.MEM_201>
free_commit_list (common_126);
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_224 = VDEF <.MEM_201>
free_commit_list (common_126);
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab632d0 common>
    def_stmt common_126 = (struct commit_list *) _125;
    version:126
    ptr-info 0x7f9b1ab13af8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab654c8
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _160 = (long unsigned int) num_head_32;
    version:160>
_160 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);
_193 = st_mult (8, _160);
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_194 = (long unsigned int) _193;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (_160 != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab654c8
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _160 = (long unsigned int) num_head_32;
    version:160>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6d000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _194 = (long unsigned int) _193;
    version:194>
_194 = (long unsigned int) _193;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_214 = VDEF <.MEM_213>
memcpy (work_86, array_50, _194);
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_214 = VDEF <.MEM_213>
memcpy (work_86, array_50, _194);
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6d000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _194 = (long unsigned int) _193;
    version:194>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab56360
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f9b1ab32e28>
# VUSE <.MEM_72>
_25 = *_24;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab56360
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f9b1ab32e28>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab564c8
    type <pointer_type 0x7f9b1ab265e8
        type <pointer_type 0x7f9b1ab23d20 type <record_type 0x7f9b1ab23c78 commit_list>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab265e8>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4eea0 tail>
    def_stmt tail_30 = PHI <&result(51), tail_56(52)>
    version:30
    ptr-info 0x7f9b1ab32ea0>
tail_30 = PHI <&result(51), tail_56(52)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab49af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab4e510 h>
    def_stmt h_99 = reduce_heads (_98);
    version:99
    ptr-info 0x7f9b1ab32c00>
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_104 = PHI <h_99(5), pn_121(10)>
lto1: warning: use location
this stmt have mutiple branch ---reduce_heads-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_121 = PHI <pn_108(8), pn_104(9)>
lto1: warning: use location
this stmt have mutiple branch ---reduce_heads-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_108 = pn_104->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = pn_104->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_104 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
free_commit_list (h_99);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
cnt_102 = commit_list_count (h_99);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_118 = cnt_102 + marked_115;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (cnt_102 != i_109)
./benchmarks/git/leak_4/git_leak_4.c:196:12: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab49af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab4e510 h>
    def_stmt h_99 = reduce_heads (_98);
    version:99
    ptr-info 0x7f9b1ab32c00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab49b88
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab4e7e0 orig_cnt>
    def_stmt orig_cnt_101 = commit_list_count (_100);
    version:101>
# .MEM_136 = VDEF <.MEM_135>
orig_cnt_101 = commit_list_count (_100);

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================
# .MEM_136 = VDEF <.MEM_135>
orig_cnt_101 = commit_list_count (_100);
orig_cnt_101 = commit_list_count (_100);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
if (orig_cnt_101 != _118)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
printf ("mark_redundant_parents %d", orig_cnt_101);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab49b88
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab4e7e0 orig_cnt>
    def_stmt orig_cnt_101 = commit_list_count (_100);
    version:101>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab49bd0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab4e870 cnt>
    def_stmt cnt_102 = commit_list_count (h_99);
    version:102>
# .MEM_137 = VDEF <.MEM_136>
cnt_102 = commit_list_count (h_99);

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_104 = PHI <h_99(5), pn_121(10)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_count-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_121 = PHI <pn_108(8), pn_104(9)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_count-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_108 = pn_104->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = pn_104->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_104 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
free_commit_list (h_99);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_137 = VDEF <.MEM_136>
cnt_102 = commit_list_count (h_99);
cnt_102 = commit_list_count (h_99);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_118 = cnt_102 + marked_115;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (cnt_102 != i_109)
./benchmarks/git/leak_4/git_leak_4.c:196:12: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab49bd0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab4e870 cnt>
    def_stmt cnt_102 = commit_list_count (h_99);
    version:102>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43090
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab423f0 newline>
    def_stmt newline_32 = strchr (p_31, 10);
    version:32
    ptr-info 0x7f9b1ab329d8>
# VUSE <.MEM_125>
newline_32 = strchr (p_31, 10);

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strchr
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = PHI <_34(17), _36(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = _38 + _39;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_41 = pos_29 + _40;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_96 = PHI <pos_41(26), pos_41(27)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_96(28)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 < _54)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = in.buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_125>
newline_32 = strchr (p_31, 10);
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = newline_32 - p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (int) _33;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43090
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab423f0 newline>
    def_stmt newline_32 = strchr (p_31, 10);
    version:32
    ptr-info 0x7f9b1ab329d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43168
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _35 = strlen (p_31);
    version:35
    ptr-info 0x7f9b1ab45960>
# VUSE <.MEM_125>
_35 = strlen (p_31);

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_125>
_35 = strlen (p_31);
_35 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = PHI <_34(17), _36(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = _38 + _39;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_41 = pos_29 + _40;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_96 = PHI <pos_41(26), pos_41(27)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_96(28)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 < _54)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = in.buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = newline_32 - p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (int) _33;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43168
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _35 = strlen (p_31);
    version:35
    ptr-info 0x7f9b1ab45960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43360
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _42 = get_oid_hex (p_31, &oid);
    version:42>
# .MEM_150 = VDEF <.MEM_125>
_42 = get_oid_hex (p_31, &oid);

 ================== pre trace ptable ================== 
trace fucntion name:get_oid_hex 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function get_oid_hex
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = newline_32 - p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (int) _33;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = PHI <_34(17), _36(18)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = _38 + _39;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_41 = pos_29 + _40;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_96 = PHI <pos_41(26), pos_41(27)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_96(28)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 < _54)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = in.buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_150 = VDEF <.MEM_125>
_42 = get_oid_hex (p_31, &oid);
_42 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
  139 |                 obj = parse_object(&oid);
      |                       ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43360
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _42 = get_oid_hex (p_31, &oid);
    version:42>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43438
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _45 = parse_object (&oid);
    version:45>
# .MEM_151 = VDEF <.MEM_150>
_45 = parse_object (&oid);

 ================== pre trace ptable ================== 
trace fucntion name:parse_object 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function parse_object
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_151 = VDEF <.MEM_150>
_45 = parse_object (&oid);
_45 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = (long int) _45;
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_47 = (struct object *) _46;
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: use location
  139 |                 obj = parse_object(&oid);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = &obj_47->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = peel_to_type (0B, 0, obj_47, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 0)
./benchmarks/git/leak_4/git_leak_4.c:141:20: warning: use location
  141 |                 if (!parent)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (long int) _48;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_50 = (struct commit *) _49;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = &parent_50->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_50, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43438
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _45 = parse_object (&oid);
    version:45>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43510
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _48 = peel_to_type (0B, 0, obj_47, 1);
    version:48>
# .MEM_152 = VDEF <.MEM_151>
_48 = peel_to_type (0B, 0, obj_47, 1);

 ================== pre trace ptable ================== 
trace fucntion name:peel_to_type 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function peel_to_type
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = &obj_47->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_152 = VDEF <.MEM_151>
_48 = peel_to_type (0B, 0, obj_47, 1);
_48 = peel_to_type (0B, 0, obj_47, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 0)
./benchmarks/git/leak_4/git_leak_4.c:141:20: warning: use location
  141 |                 if (!parent)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (long int) _48;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_50 = (struct commit *) _49;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = &parent_50->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_50, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43510
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _48 = peel_to_type (0B, 0, obj_47, 1);
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43708
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _55 = lookup_commit (&head);
    version:55>
# .MEM_140 = VDEF <.MEM_125>
_55 = lookup_commit (&head);

 ================== pre trace ptable ================== 
trace fucntion name:lookup_commit 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function lookup_commit
 
 Start check Pointer Collect  

======================================================================
# .MEM_140 = VDEF <.MEM_125>
_55 = lookup_commit (&head);
_55 = lookup_commit (&head);
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt call this function :lookup_commit
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 
if (_55 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
_56 = (long int) _55;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
head_commit_57 = (struct commit *) _56;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^
commit_list_insert (head_commit_57, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43708
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _55 = lookup_commit (&head);
    version:55>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43828
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _59 = reduce_heads (_58);
    version:59
    ptr-info 0x7f9b1ab32a80>
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
parents = _59;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_77 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43828
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _59 = reduce_heads (_58);
    version:59
    ptr-info 0x7f9b1ab32a80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43870
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _60 = pop_commit (&parents);
    version:60>
# .MEM_147 = VDEF <.MEM_129>
_60 = pop_commit (&parents);

 ================== pre trace ptable ================== 
trace fucntion name:pop_commit 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function pop_commit
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_147 = VDEF <.MEM_129>
_60 = pop_commit (&parents);
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_77 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43870
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _60 = pop_commit (&parents);
    version:60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43b40
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _70 = oidcmp (_69, _63);
    version:70>
# .MEM_148 = VDEF <.MEM_128>
_70 = oidcmp (_69, _63);

 ================== pre trace ptable ================== 
trace fucntion name:oidcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function oidcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_148 = VDEF <.MEM_128>
_70 = oidcmp (_69, _63);
_70 = oidcmp (_69, _63);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_70 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43b40
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _70 = oidcmp (_69, _63);
    version:70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab49ab0
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _98 = _2->parents;
    version:98
    ptr-info 0x7f9b1ab32be8>
# VUSE <.MEM_17>
_98 = _2->parents;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
[40;31m  find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
[40;31m  find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
[40;31m  find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_104 = PHI <h_99(5), pn_121(10)>
lto1: warning: use location
this stmt have mutiple branch ---reduce_heads-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_121 = PHI <pn_108(8), pn_104(9)>
lto1: warning: use location
this stmt have mutiple branch ---reduce_heads-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_108 = pn_104->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = pn_104->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_104 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
free_commit_list (h_99);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 
cnt_102 = commit_list_count (h_99);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 
_118 = cnt_102 + marked_115;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (cnt_102 != i_109)
./benchmarks/git/leak_4/git_leak_4.c:196:12: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab49ab0
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _98 = _2->parents;
    version:98
    ptr-info 0x7f9b1ab32be8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
pn_104 = PHI <h_99(5), pn_121(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
[40;35m target gimple type: ssa_name [0m
pn_121 = PHI <pn_108(8), pn_104(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_134>
pn_108 = pn_104->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_134>
_107 = pn_104->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
if (pn_104 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_138 = VDEF <.MEM_134>
free_commit_list (h_99);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_137 = VDEF <.MEM_136>
cnt_102 = commit_list_count (h_99);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
_118 = cnt_102 + marked_115;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_135 = VDEF <.MEM_17>
h_99 = reduce_heads (_98);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
[40;35m target gimple type: ssa_name [0m
if (cnt_102 != i_109)
./benchmarks/git/leak_4/git_leak_4.c:196:12: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab49b40
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _100 = _2->parents;
    version:100
    ptr-info 0x7f9b1ab32c18>
# VUSE <.MEM_135>
_100 = _2->parents;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_136 = VDEF <.MEM_135>
orig_cnt_101 = commit_list_count (_100);
orig_cnt_101 = commit_list_count (_100);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
if (orig_cnt_101 != _118)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
printf ("mark_redundant_parents %d", orig_cnt_101);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab49b40
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _100 = _2->parents;
    version:100
    ptr-info 0x7f9b1ab32c18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1b00c678
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7f9b1ab32990>
# VUSE <.MEM_138>
_3 = list;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_20 = VDEF <.MEM_138>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
  216 |     free_commit_list(list);
      |     ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_138>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1b00c678
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7f9b1ab32990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43048
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab42360 p>
    def_stmt p_31 = _28 + _30;
    version:31
    ptr-info 0x7f9b1ab329c0>
p_31 = _28 + _30;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = PHI <_34(17), _36(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = _38 + _39;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_41 = pos_29 + _40;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_96 = PHI <pos_41(26), pos_41(27)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_96(28)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 < _54)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_125>
newline_32 = strchr (p_31, 10);
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = newline_32 - p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (int) _33;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43048
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab42360 p>
    def_stmt p_31 = _28 + _30;
    version:31
    ptr-info 0x7f9b1ab329c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43048
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab42360 p>
    def_stmt p_31 = _28 + _30;
    version:31
    ptr-info 0x7f9b1ab329c0>
p_31 = _28 + _30;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_125>
_35 = strlen (p_31);
_35 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = PHI <_34(17), _36(18)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = _38 + _39;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_41 = pos_29 + _40;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_96 = PHI <pos_41(26), pos_41(27)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_96(28)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 < _54)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = newline_32 - p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (int) _33;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43048
    type <pointer_type 0x7f9b1ab23888
        type <integer_type 0x7f9b1ab235e8 char public QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1ab137e0 -128> max <integer_cst 0x7f9b1ab137c8 127>
            pointer_to_this <pointer_type 0x7f9b1ab23888>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f9b1ab42360 p>
    def_stmt p_31 = _28 + _30;
    version:31
    ptr-info 0x7f9b1ab329c0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab434c8
    type <pointer_type 0x7f9b1ab2a0a8
        type <record_type 0x7f9b1ab263f0 object BLK
            size <integer_cst 0x7f9b1b022078 constant 192>
            unit-size <integer_cst 0x7f9b1b022048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab263f0 fields <field_decl 0x7f9b1ab1f558 parsed> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a0a8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab425a0 obj>
    def_stmt obj_47 = (struct object *) _46;
    version:47
    ptr-info 0x7f9b1ab329f0>
obj_47 = (struct object *) _46;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = &obj_47->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_152 = VDEF <.MEM_151>
_48 = peel_to_type (0B, 0, obj_47, 1);
_48 = peel_to_type (0B, 0, obj_47, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_48 == 0)
./benchmarks/git/leak_4/git_leak_4.c:141:20: warning: use location
  141 |                 if (!parent)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = (long int) _48;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_50 = (struct commit *) _49;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = &parent_50->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_50, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab434c8
    type <pointer_type 0x7f9b1ab2a0a8
        type <record_type 0x7f9b1ab263f0 object BLK
            size <integer_cst 0x7f9b1b022078 constant 192>
            unit-size <integer_cst 0x7f9b1b022048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab263f0 fields <field_decl 0x7f9b1ab1f558 parsed> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a0a8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab425a0 obj>
    def_stmt obj_47 = (struct object *) _46;
    version:47
    ptr-info 0x7f9b1ab329f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab435a0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
    var <var_decl 0x7f9b1ab42510 parent>
    def_stmt parent_50 = (struct commit *) _49;
    version:50
    ptr-info 0x7f9b1ab32a08>
parent_50 = (struct commit *) _49;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = &parent_50->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_153 = VDEF <.MEM_152>
commit_list_insert (parent_50, &parents);
commit_list_insert (parent_50, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_153 = VDEF <.MEM_152>
commit_list_insert (parent_50, &parents);
commit_list_insert (parent_50, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab435a0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
    var <var_decl 0x7f9b1ab42510 parent>
    def_stmt parent_50 = (struct commit *) _49;
    version:50
    ptr-info 0x7f9b1ab32a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43630
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &obj_47->oid;
    version:52
    ptr-info 0x7f9b1ab32a38>
_52 = &obj_47->oid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_154 = VDEF <.MEM_153>
add_merge_parent (&result, _52, _51);
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_154 = VDEF <.MEM_153>
add_merge_parent (&result, _52, _51);
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43630
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &obj_47->oid;
    version:52
    ptr-info 0x7f9b1ab32a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab435e8
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &parent_50->object.oid;
    version:51
    ptr-info 0x7f9b1ab32a20>
_51 = &parent_50->object.oid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_154 = VDEF <.MEM_153>
add_merge_parent (&result, _52, _51);
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_154 = VDEF <.MEM_153>
add_merge_parent (&result, _52, _51);
add_merge_parent (&result, _52, _51);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab435e8
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &parent_50->object.oid;
    version:51
    ptr-info 0x7f9b1ab32a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43798
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
    var <var_decl 0x7f9b1ab42090 head_commit>
    def_stmt head_commit_57 = (struct commit *) _56;
    version:57
    ptr-info 0x7f9b1ab32a50>
head_commit_57 = (struct commit *) _56;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_141 = VDEF <.MEM_140>
commit_list_insert (head_commit_57, &parents);
commit_list_insert (head_commit_57, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_141 = VDEF <.MEM_140>
commit_list_insert (head_commit_57, &parents);
commit_list_insert (head_commit_57, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43798
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
    var <var_decl 0x7f9b1ab42090 head_commit>
    def_stmt head_commit_57 = (struct commit *) _56;
    version:57
    ptr-info 0x7f9b1ab32a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab437e0
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _58 = parents;
    version:58
    ptr-info 0x7f9b1ab32a68>
# VUSE <.MEM_126>
_58 = parents;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
[40;31m  find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
[40;31m  find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
[40;31m  find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
parents = _59;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_77 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab437e0
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _58 = parents;
    version:58
    ptr-info 0x7f9b1ab32a68>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^
[40;35m target gimple type: var_decl [0m
# .MEM_143 = VDEF <.MEM_142>
parents = _59;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^
[40;35m target gimple type: function_decl [0m
# .MEM_147 = VDEF <.MEM_129>
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^
[40;35m target gimple type: addr_expr [0m
# .MEM_147 = VDEF <.MEM_129>
_60 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_129>
_77 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_142 = VDEF <.MEM_126>
_59 = reduce_heads (_58);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^
[40;35m target gimple type: ssa_name [0m
if (_77 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43af8
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _69 = &_68->commit;
    version:69
    ptr-info 0x7f9b1ab32af8>
_69 = &_68->commit;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_148 = VDEF <.MEM_128>
_70 = oidcmp (_69, _63);
_70 = oidcmp (_69, _63);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_70 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43af8
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _69 = &_68->commit;
    version:69
    ptr-info 0x7f9b1ab32af8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab43948
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _63 = &cmit_62->object.oid;
    version:63
    ptr-info 0x7f9b1ab32ab0>
_63 = &cmit_62->object.oid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_148 = VDEF <.MEM_128>
_70 = oidcmp (_69, _63);
_70 = oidcmp (_69, _63);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_70 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab43948
    type <pointer_type 0x7f9b1ab2a000
        type <record_type 0x7f9b1ab26150 object_id BLK
            size <integer_cst 0x7f9b1ab13840 constant 160>
            unit-size <integer_cst 0x7f9b1ab13828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26150 fields <field_decl 0x7f9b1ab1f260 hash> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab2a000>>
        unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _63 = &cmit_62->object.oid;
    version:63
    ptr-info 0x7f9b1ab32ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:reduce_heads========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab56798
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4ee10 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f9b1ab32ee8>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = array_50 + _150;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = *_151;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = array_50 + _128;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = *_129;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = _130->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_132 = _131 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_132 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:20: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = array_50 + _121;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *_122;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = array_50 + _112;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *_96;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab56798
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4ee10 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f9b1ab32ee8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab5df78
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab54f30 work>
    def_stmt work_86 = calloc (_85, 8);
    version:86
    ptr-info 0x7f9b1ab32f78>
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);
work_86 = calloc (_85, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab5df78
    type <pointer_type 0x7f9b1ab26738
        type <pointer_type 0x7f9b1ab26540 type <record_type 0x7f9b1ab26498 commit>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab26738>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab54f30 work>
    def_stmt work_86 = calloc (_85, 8);
    version:86
    ptr-info 0x7f9b1ab32f78>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64048
    type <pointer_type 0x7f9b1ab267e0
        type <integer_type 0x7f9b1b019348 unsigned char public unsigned QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1b004cd8 0> max <integer_cst 0x7f9b1b004c78 255>
            pointer_to_this <pointer_type 0x7f9b1ab267e0>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63000 redundant>
    def_stmt redundant_88 = calloc (_87, 1);
    version:88
    ptr-info 0x7f9b1ab32f90>
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);
redundant_88 = calloc (_87, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64048
    type <pointer_type 0x7f9b1ab267e0
        type <integer_type 0x7f9b1b019348 unsigned char public unsigned QI
            size <integer_cst 0x7f9b1b004ca8 constant 8>
            unit-size <integer_cst 0x7f9b1b004cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0193f0 precision:8 min <integer_cst 0x7f9b1b004cd8 0> max <integer_cst 0x7f9b1b004c78 255>
            pointer_to_this <pointer_type 0x7f9b1ab267e0>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63000 redundant>
    def_stmt redundant_88 = calloc (_87, 1);
    version:88
    ptr-info 0x7f9b1ab32f90>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab640d8
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _90 = st_mult (4, _89);
    version:90>
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);
_90 = st_mult (4, _89);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_91 = (long unsigned int) _90;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab640d8
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _90 = st_mult (4, _89);
    version:90>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64168
    type <pointer_type 0x7f9b1b0209d8
        type <integer_type 0x7f9b1b0195e8 int public SI
            size <integer_cst 0x7f9b1b004df8 constant 32>
            unit-size <integer_cst 0x7f9b1b004e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
            pointer_to_this <pointer_type 0x7f9b1b0209d8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63090 filled_index>
    def_stmt filled_index_92 = malloc (_91);
    version:92
    ptr-info 0x7f9b1ab32fa8>
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64168
    type <pointer_type 0x7f9b1b0209d8
        type <integer_type 0x7f9b1b0195e8 int public SI
            size <integer_cst 0x7f9b1b004df8 constant 32>
            unit-size <integer_cst 0x7f9b1b004e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
            pointer_to_this <pointer_type 0x7f9b1b0209d8>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab63090 filled_index>
    def_stmt filled_index_92 = malloc (_91);
    version:92
    ptr-info 0x7f9b1ab32fa8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64a68
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _124 = paint_down_to_common (_123, filled_107, work_86);
    version:124>
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64a68
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _124 = paint_down_to_common (_123, filled_107, work_86);
    version:124>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab65f78
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _193 = st_mult (8, _160);
    version:193>
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);
_193 = st_mult (8, _160);
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_194 = (long unsigned int) _193;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (_160 != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab65f78
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _193 = st_mult (8, _160);
    version:193>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab563a8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7f9b1ab32e40>
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab563a8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7f9b1ab32e40>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab51f30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = array_50 + _150;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = *_151;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = array_50 + _128;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = *_129;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = _130->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_132 = _131 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_132 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:20: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = array_50 + _121;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_123 = *_122;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = array_50 + _112;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *_96;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab51f30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab5df30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _85 = (long unsigned int) num_head_32;
    version:85>
_85 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_209 = VDEF <.MEM_71>
work_86 = calloc (_85, 8);
work_86 = calloc (_85, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab5df30
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _85 = (long unsigned int) num_head_32;
    version:85>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _87 = (long unsigned int) num_head_32;
    version:87>
_87 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_210 = VDEF <.MEM_209>
redundant_88 = calloc (_87, 1);
redundant_88 = calloc (_87, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _87 = (long unsigned int) num_head_32;
    version:87>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64090
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _89 = num_head_32 + -1;
    version:89>
_89 = num_head_32 + -1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_211 = VDEF <.MEM_210>
_90 = st_mult (4, _89);
_90 = st_mult (4, _89);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_91 = (long unsigned int) _90;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64090
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
   
    def_stmt _89 = num_head_32 + -1;
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64120
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _91 = (long unsigned int) _90;
    version:91>
_91 = (long unsigned int) _90;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_212 = VDEF <.MEM_211>
filled_index_92 = malloc (_91);
filled_index_92 = malloc (_91);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_144 = filled_index_92 + _143;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = *_144;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = (sizetype) _145;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_105 = redundant_88 + _104;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = *_105;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_106 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64120
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _91 = (long unsigned int) _90;
    version:91>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab642d0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _97 = *_96;
    version:97
    ptr-info 0x7f9b1ab32fd8>
# VUSE <.MEM_195>
_97 = *_96;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_229 = VDEF <.MEM_195>
parse_commit (_97);
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_229 = VDEF <.MEM_195>
parse_commit (_97);
parse_commit (_97);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab642d0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _97 = *_96;
    version:97
    ptr-info 0x7f9b1ab32fd8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64a20
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _123 = *_122;
    version:123
    ptr-info 0x7f9b1ab13ae0>
# VUSE <.MEM_197>
_123 = *_122;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64a20
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _123 = *_122;
    version:123
    ptr-info 0x7f9b1ab13ae0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab645a0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab63240 filled>
    def_stmt filled_107 = PHI <0(19), filled_189(25)>
    version:107>
filled_107 = PHI <0(19), filled_189(25)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_153)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_107 > j_135)
./benchmarks/git/leak_4/git_leak_4.c:54:31: warning: use location
   54 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_221 = VDEF <.MEM_197>
_124 = paint_down_to_common (_123, filled_107, work_86);
_124 = paint_down_to_common (_123, filled_107, work_86);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_125 = (long int) _124;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_126 = (struct commit_list *) _125;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_181 = work_86 + _180;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_187 = *_181;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_186 = _187;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = work_86 + _166;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = *_167;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_172 = _173;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = *_156;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = work_86 + _137;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = *_138;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = _139->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = _140 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_117 = _118;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = (long unsigned int) filled_107;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = _108 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = filled_index_92 + _109;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_110 = j_103;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_119 = j_103 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = (long unsigned int) j_103;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_104 = (sizetype) j_103;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = redundant_88 + _176;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_178 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_178 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_163 = redundant_88 + _162;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_164 = *_163;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_147 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = redundant_88 + _133;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_134 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = redundant_88 + _100;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = *_101;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab645a0
    type <integer_type 0x7f9b1b0195e8 int public SI
        size <integer_cst 0x7f9b1b004df8 constant 32>
        unit-size <integer_cst 0x7f9b1b004e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b0195e8 precision:32 min <integer_cst 0x7f9b1b004db0 -2147483648> max <integer_cst 0x7f9b1b004dc8 2147483647>
        pointer_to_this <pointer_type 0x7f9b1b0209d8>>
    var <var_decl 0x7f9b1ab63240 filled>
    def_stmt filled_107 = PHI <0(19), filled_189(25)>
    version:107>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_189 = PHI <filled_107(23), filled_114(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
filled_107 = PHI <0(19), filled_189(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab65288
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _152 = *_151;
    version:152
    ptr-info 0x7f9b1ab6f090>
# VUSE <.MEM_200>
_152 = *_151;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_223 = VDEF <.MEM_200>
clear_commit_marks (_152, 983040);
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_223 = VDEF <.MEM_200>
clear_commit_marks (_152, 983040);
clear_commit_marks (_152, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab65288
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _152 = *_151;
    version:152
    ptr-info 0x7f9b1ab6f090>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab653f0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _157 = *_156;
    version:157
    ptr-info 0x7f9b1ab6f0c0>
# VUSE <.MEM_201>
_157 = *_156;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_225 = VDEF <.MEM_201>
clear_commit_marks (_157, 983040);
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_225 = VDEF <.MEM_201>
clear_commit_marks (_157, 983040);
clear_commit_marks (_157, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab653f0
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _157 = *_156;
    version:157
    ptr-info 0x7f9b1ab6f0c0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab64af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab632d0 common>
    def_stmt common_126 = (struct commit_list *) _125;
    version:126
    ptr-info 0x7f9b1ab13af8>
common_126 = (struct commit_list *) _125;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_224 = VDEF <.MEM_201>
free_commit_list (common_126);
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_224 = VDEF <.MEM_201>
free_commit_list (common_126);
free_commit_list (common_126);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab64af8
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab632d0 common>
    def_stmt common_126 = (struct commit_list *) _125;
    version:126
    ptr-info 0x7f9b1ab13af8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab654c8
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _160 = (long unsigned int) num_head_32;
    version:160>
_160 = (long unsigned int) num_head_32;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_213 = VDEF <.MEM_203>
_193 = st_mult (8, _160);
_193 = st_mult (8, _160);
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_194 = (long unsigned int) _193;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (_160 != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab654c8
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _160 = (long unsigned int) num_head_32;
    version:160>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6d000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _194 = (long unsigned int) _193;
    version:194>
_194 = (long unsigned int) _193;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_214 = VDEF <.MEM_213>
memcpy (work_86, array_50, _194);
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_214 = VDEF <.MEM_213>
memcpy (work_86, array_50, _194);
memcpy (work_86, array_50, _194);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6d000
    type <integer_type 0x7f9b1b0197e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1b019738 precision:64 min <integer_cst 0x7f9b1b004e88 0> max <integer_cst 0x7f9b1b005500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b1b0257e0>>
   
    def_stmt _194 = (long unsigned int) _193;
    version:194>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab56360
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f9b1ab32e28>
# VUSE <.MEM_72>
_25 = *_24;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab56360
    type <pointer_type 0x7f9b1ab26540
        type <record_type 0x7f9b1ab26498 commit BLK
            size <integer_cst 0x7f9b1b022000 constant 512>
            unit-size <integer_cst 0x7f9b1b0d9090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab26498 fields <field_decl 0x7f9b1ab1f8e8 object> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab26540>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab26738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f9b1ab32e28>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_215 = VDEF <.MEM_207>
free (work_86);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_216 = VDEF <.MEM_215>
free (redundant_88);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_216>
free (filled_index_92);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^
[40;35m target gimple type: ssa_name [0m
tail_30 = PHI <&result(51), tail_56(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab564c8
    type <pointer_type 0x7f9b1ab265e8
        type <pointer_type 0x7f9b1ab23d20 type <record_type 0x7f9b1ab23c78 commit_list>
            public unsigned DI
            size <integer_cst 0x7f9b1b004bb8 constant 64>
            unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f9b1ab265e8>>
        public unsigned DI size <integer_cst 0x7f9b1b004bb8 64> unit-size <integer_cst 0x7f9b1b004bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f9b1ab4eea0 tail>
    def_stmt tail_30 = PHI <&result(51), tail_56(52)>
    version:30
    ptr-info 0x7f9b1ab32ea0>
tail_30 = PHI <&result(51), tail_56(52)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;44m =======node_fun:commit_list_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b1ab6da68
    type <pointer_type 0x7f9b1ab23d20
        type <record_type 0x7f9b1ab23c78 commit_list TI
            size <integer_cst 0x7f9b1b004c00 constant 128>
            unit-size <integer_cst 0x7f9b1b004c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f9b1ab23c78 fields <field_decl 0x7f9b1ab1f1c8 item> context <translation_unit_decl 0x7f9b1b00f168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f9b1ab23d20>>
        public unsigned DI
        size <integer_cst 0x7f9b1b004bb8 constant 64>
        unit-size <integer_cst 0x7f9b1b004bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f9b1ab265e8>>
    var <var_decl 0x7f9b1ab63e10 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f9b1ab6f1b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 14609748]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 146113559]:
commit_list_insert (0B, &list);
i_16 = i_4 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 160723307]:
# i_4 = PHI <0(2), i_16(3)>
if (i_4 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 14609748]:
_1 = list;
_2 = _1->item;
_98 = _2->parents;
h_99 = reduce_heads (_98);
_100 = _2->parents;
orig_cnt_101 = commit_list_count (_100);
cnt_102 = commit_list_count (h_99);
po_103 = _2->parents;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 118206146]:
if (pn_104 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 82744302]:
_106 = po_105->item;
_107 = pn_104->item;
if (_106 == _107)
  goto <bb 8>; [30.00%]
else
  goto <bb 9>; [70.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 24823290]:
pn_108 = pn_104->next;
i_110 = i_109 + 1;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 93382855]:
_111 = po_105->item;
_112 = _111->object.flags;
_113 = po_105->item;
_114 = _112 | 16;
_113->object.flags = _114;
marked_116 = marked_115 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 118206146]:
# i_119 = PHI <i_110(8), i_109(9)>
# marked_120 = PHI <marked_115(8), marked_116(9)>
# pn_121 = PHI <pn_108(8), pn_104(9)>
po_117 = po_105->next;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 132815894]:
# i_109 = PHI <0(5), i_119(10)>
# marked_115 = PHI <0(5), marked_120(10)>
# po_105 = PHI <po_103(5), po_117(10)>
# pn_104 = PHI <h_99(5), pn_121(10)>
if (po_105 != 0B)
  goto <bb 6>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 14609748]:
if (cnt_102 != i_109)
  goto <bb 14>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 14603904]:
_118 = cnt_102 + marked_115;
if (orig_cnt_101 != _118)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 11685]:
printf ("mark_redundant_parents %d", orig_cnt_101);
exit (1);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 14598063]:
free_commit_list (h_99);
_3 = list;
free_commit_list (_3);
parents = 0B;
goto <bb 29>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 118111600]:
_28 = in.buf;
_30 = (sizetype) pos_29;
p_31 = _28 + _30;
newline_32 = strchr (p_31, 10);
if (newline_32 != 0B)
  goto <bb 17>; [70.00%]
else
  goto <bb 18>; [30.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 82678120]:
_33 = newline_32 - p_31;
_34 = (int) _33;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 35433480]:
_35 = strlen (p_31);
_36 = (int) _35;

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 118111600]:
# _39 = PHI <_34(17), _36(18)>
_37 = newline_32 != 0B;
_38 = (int) _37;
_40 = _38 + _39;
pos_41 = pos_29 + _40;
if (_39 <= 42)
  goto <bb 23>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 59055800]:
_42 = get_oid_hex (p_31, &oid);
if (_42 != 0)
  goto <bb 23>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 39567386]:
_43 = MEM[(char *)p_31 + 40B];
if (_43 != 9)
  goto <bb 23>; [48.88%]
else
  goto <bb 22>; [51.12%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 20226848]:
_44 = MEM[(char *)p_31 + 41B];
if (_44 != 9)
  goto <bb 23>; [66.00%]
else
  goto <bb 24>; [34.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 111234472]:
// predicted unlikely by continue predictor.
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 6877128]:
_45 = parse_object (&oid);
_46 = (long int) _45;
obj_47 = (struct object *) _46;
_48 = peel_to_type (0B, 0, obj_47, 1);
_49 = (long int) _48;
parent_50 = (struct commit *) _49;
if (_48 == 0)
  goto <bb 25>; [50.00%]
else
  goto <bb 26>; [50.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 3438564]:
// predicted unlikely by continue predictor.
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 3438564]:
commit_list_insert (parent_50, &parents);
_51 = &parent_50->object.oid;
_52 = &obj_47->oid;
add_merge_parent (&result, _52, _51);
oid ={v} {CLOBBER};
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 114673036]:
oid ={v} {CLOBBER};

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 118111600]:
# pos_96 = PHI <pos_41(26), pos_41(27)>

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 132709663]:
# pos_29 = PHI <0(15), pos_96(28)>
_53 = (long unsigned int) pos_29;
_54 = in.len;
if (_53 < _54)
  goto <bb 16>; [89.00%]
else
  goto <bb 30>; [11.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [local count: 14598063]:
_55 = lookup_commit (&head);
_56 = (long int) _55;
head_commit_57 = (struct commit *) _56;
if (_55 != 0)
  goto <bb 31>; [33.00%]
else
  goto <bb 32>; [67.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 4817361]:
commit_list_insert (head_commit_57, &parents);

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 14598063]:
_58 = parents;
_59 = reduce_heads (_58);
parents = _59;
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 118111600]:
_60 = pop_commit (&parents);
_61 = (long int) _60;
cmit_62 = (struct commit *) _61;
goto <bb 37>; [100.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 955630225]:
_63 = &cmit_62->object.oid;
_64 = result.item;
_66 = (long unsigned int) i_65;
_67 = _66 * 41;
_68 = _64 + _67;
_69 = &_68->commit;
_70 = oidcmp (_69, _63);
if (_70 == 0)
  goto <bb 35>; [50.00%]
else
  goto <bb 36>; [50.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 477815112]:
_71 = result.item;
_72 = (long unsigned int) i_65;
_73 = _72 * 41;
_74 = _71 + _73;
_74->used = 1;

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 955630225]:
i_75 = i_65 + 1;

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 1073741824]:
# i_65 = PHI <0(33), i_75(36)>
_76 = result.nr;
if (i_65 < _76)
  goto <bb 34>; [89.00%]
else
  goto <bb 38>; [11.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 132709663]:
_77 = parents;
if (_77 != 0B)
  goto <bb 33>; [89.00%]
else
  goto <bb 44>; [11.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 118111600]:
_78 = result.item;
_80 = (long unsigned int) i_79;
_81 = _80 * 41;
_82 = _78 + _81;
_83 = _82->used;
if (_83 != 0)
  goto <bb 40>; [50.00%]
else
  goto <bb 43>; [50.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 59055800]:
if (i_79 != j_84)
  goto <bb 41>; [66.00%]
else
  goto <bb 42>; [34.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 38976828]:
_85 = result.item;
_86 = (long unsigned int) i_79;
_87 = _86 * 41;
_88 = _85 + _87;
_89 = result.item;
_90 = (long unsigned int) j_84;
_91 = _90 * 41;
_92 = _89 + _91;
*_92 = *_88;

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 59055800]:
j_93 = j_84 + 1;

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 118111600]:
# j_97 = PHI <j_84(39), j_93(42)>
i_94 = i_79 + 1;

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 132709663]:
# i_79 = PHI <0(38), i_94(43)>
# j_84 = PHI <0(38), j_97(43)>
_95 = result.nr;
if (i_79 < _95)
  goto <bb 39>; [89.00%]
else
  goto <bb 45>; [11.00%]

=======is loop:0=========

 bb index 45 
<bb 45> [local count: 14598063]:
result.nr = j_84;
parents ={v} {CLOBBER};
result ={v} {CLOBBER};
in ={v} {CLOBBER};
head ={v} {CLOBBER};
list ={v} {CLOBBER};
return 0;

=======Mapping node_fun:reduce_heads=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 37104600]:
result = 0B;
if (heads_47(D) == 0B)
  goto <bb 55>; [8.27%]
else
  goto <bb 4>; [91.73%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 275382581]:
_1 = p_27->item;
_2 = _1->object.flags;
_3 = p_27->item;
_4 = _2 & 133955583;
_3->object.flags = _4;
p_66 = p_27->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 309418630]:
# p_27 = PHI <heads_47(D)(2), p_66(3)>
if (p_27 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 275382581]:
_5 = p_28->item;
_6 = _5->object.flags;
_48 = _6 & 262144;
if (_48 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 90876251]:
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 184506330]:
_7 = p_28->item;
_8 = _7->object.flags;
_9 = p_28->item;
_10 = _8 | 262144;
_9->object.flags = _10;
num_head_63 = num_head_32 + 1;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 275382581]:
# num_head_31 = PHI <num_head_32(6), num_head_63(7)>
p_64 = p_28->next;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 309418630]:
# p_28 = PHI <heads_47(D)(4), p_64(8)>
# num_head_32 = PHI <0(4), num_head_31(8)>
if (p_28 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 34036049]:
_11 = (long unsigned int) num_head_32;
array_50 = calloc (_11, 8);
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 275382581]:
_12 = p_29->item;
_13 = _12->object.flags;
_46 = _13 & 262144;
if (_46 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 137691291]:
i_58 = i_34 + 1;
_14 = (long unsigned int) i_34;
_15 = _14 * 8;
_16 = array_50 + _15;
_17 = p_29->item;
*_16 = _17;
_18 = p_29->item;
_19 = _18->object.flags;
_20 = p_29->item;
_21 = _19 & 133955583;
_20->object.flags = _21;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 275382581]:
# i_33 = PHI <i_34(11), i_58(12)>
p_61 = p_29->next;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 309418630]:
# p_29 = PHI <heads_47(D)(10), p_61(13)>
# i_34 = PHI <0(10), i_33(13)>
if (p_29 != 0B)
  goto <bb 11>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 34036049]:
_85 = (long unsigned int) num_head_32;
work_86 = calloc (_85, 8);
_87 = (long unsigned int) num_head_32;
redundant_88 = calloc (_87, 1);
_89 = num_head_32 + -1;
_90 = st_mult (4, _89);
_91 = (long unsigned int) _90;
filled_index_92 = malloc (_91);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 275382581]:
_94 = (long unsigned int) i_93;
_95 = _94 * 8;
_96 = array_50 + _95;
_97 = *_96;
parse_commit (_97);
i_98 = i_93 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 309418630]:
# i_93 = PHI <0(15), i_98(16)>
if (num_head_32 > i_93)
  goto <bb 16>; [89.00%]
else
  goto <bb 39>; [11.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 275382600]:
_100 = (sizetype) i_99;
_101 = redundant_88 + _100;
_102 = *_101;
if (_102 != 0)
  goto <bb 20>; [57.11%]
else
  goto <bb 19>; [42.89%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 118111598]:
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 157271002]:
// predicted unlikely by continue predictor.
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 955630225]:
if (i_99 == j_103)
  goto <bb 23>; [20.24%]
else
  goto <bb 22>; [79.76%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 762210669]:
_104 = (sizetype) j_103;
_105 = redundant_88 + _104;
_106 = *_105;
if (_106 != 0)
  goto <bb 23>; [33.00%]
else
  goto <bb 24>; [67.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 444949076]:
// predicted unlikely by continue predictor.
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 510681149]:
_108 = (long unsigned int) filled_107;
_109 = _108 * 4;
_110 = filled_index_92 + _109;
*_110 = j_103;
_111 = (long unsigned int) j_103;
_112 = _111 * 8;
_113 = array_50 + _112;
filled_114 = filled_107 + 1;
_115 = (long unsigned int) filled_107;
_116 = _115 * 8;
_117 = work_86 + _116;
_118 = *_113;
*_117 = _118;

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 955630226]:
# filled_189 = PHI <filled_107(23), filled_114(24)>
j_119 = j_103 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 1073741824]:
# j_103 = PHI <0(19), j_119(25)>
# filled_107 = PHI <0(19), filled_189(25)>
if (num_head_32 > j_103)
  goto <bb 21>; [89.00%]
else
  goto <bb 27>; [11.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 118111600]:
_120 = (long unsigned int) i_99;
_121 = _120 * 8;
_122 = array_50 + _121;
_123 = *_122;
_124 = paint_down_to_common (_123, filled_107, work_86);
_125 = (long int) _124;
common_126 = (struct commit_list *) _125;
_127 = (long unsigned int) i_99;
_128 = _127 * 8;
_129 = array_50 + _128;
_130 = *_129;
_131 = _130->object.flags;
_132 = _131 & 131072;
if (_132 != 0)
  goto <bb 28>; [50.00%]
else
  goto <bb 32>; [50.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 59055800]:
_133 = (sizetype) i_99;
_134 = redundant_88 + _133;
*_134 = 1;
goto <bb 32>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 955630225]:
_136 = (long unsigned int) j_135;
_137 = _136 * 8;
_138 = work_86 + _137;
_139 = *_138;
_140 = _139->object.flags;
_141 = _140 & 65536;
if (_141 != 0)
  goto <bb 30>; [50.00%]
else
  goto <bb 31>; [50.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 477815112]:
_142 = (long unsigned int) j_135;
_143 = _142 * 4;
_144 = filled_index_92 + _143;
_145 = *_144;
_146 = (sizetype) _145;
_147 = redundant_88 + _146;
*_147 = 1;

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 955630225]:
j_148 = j_135 + 1;
goto <bb 33>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 118111600]:
# j_190 = PHI <0(27), 0(28)>

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 1073741824]:
# j_135 = PHI <j_148(31), j_190(32)>
if (filled_107 > j_135)
  goto <bb 29>; [89.00%]
else
  goto <bb 34>; [11.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 118111600]:
_149 = (long unsigned int) i_99;
_150 = _149 * 8;
_151 = array_50 + _150;
_152 = *_151;
clear_commit_marks (_152, 983040);
goto <bb 36>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 955630225]:
_154 = (long unsigned int) j_153;
_155 = _154 * 8;
_156 = work_86 + _155;
_157 = *_156;
clear_commit_marks (_157, 983040);
j_158 = j_153 + 1;

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 1073741824]:
# j_153 = PHI <0(34), j_158(35)>
if (filled_107 > j_153)
  goto <bb 35>; [89.00%]
else
  goto <bb 37>; [11.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 118111600]:
free_commit_list (common_126);

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 275382602]:
i_159 = i_99 + 1;

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 309418651]:
# i_99 = PHI <0(17), i_159(38)>
if (num_head_32 > i_99)
  goto <bb 18>; [89.00%]
else
  goto <bb 40>; [11.00%]

=======is loop:0=========

 bb index 40 
<bb 40> [local count: 34036051]:
_160 = (long unsigned int) num_head_32;
if (_160 != 0)
  goto <bb 41>; [33.00%]
else
  goto <bb 42>; [67.00%]

=======is loop:0=========

 bb index 41 
<bb 41> [local count: 11231897]:
_193 = st_mult (8, _160);
_194 = (long unsigned int) _193;
memcpy (work_86, array_50, _194);

=======is loop:0=========

 bb index 42 
<bb 42> [local count: 34036052]:
goto <bb 46>; [100.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 275382600]:
_162 = (sizetype) i_161;
_163 = redundant_88 + _162;
_164 = *_163;
if (_164 == 0)
  goto <bb 44>; [50.00%]
else
  goto <bb 45>; [50.00%]

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 137691300]:
_165 = (long unsigned int) i_161;
_166 = _165 * 8;
_167 = work_86 + _166;
filled_169 = filled_168 + 1;
_170 = (long unsigned int) filled_168;
_171 = _170 * 8;
_172 = array_50 + _171;
_173 = *_167;
*_172 = _173;

=======is loop:1=========

 bb index 45 
<bb 45> [local count: 275382600]:
# filled_191 = PHI <filled_168(43), filled_169(44)>
i_174 = i_161 + 1;

=======is loop:1=========

 bb index 46 
<bb 46> [local count: 309418652]:
# i_161 = PHI <0(42), i_174(45)>
# filled_168 = PHI <0(42), filled_191(45)>
if (num_head_32 > i_161)
  goto <bb 43>; [89.00%]
else
  goto <bb 50>; [11.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 275382600]:
_176 = (sizetype) i_175;
_177 = redundant_88 + _176;
_178 = *_177;
if (_178 != 0)
  goto <bb 48>; [50.00%]
else
  goto <bb 49>; [50.00%]

=======is loop:1=========

 bb index 48 
<bb 48> [local count: 137691300]:
_179 = (long unsigned int) i_175;
_180 = _179 * 8;
_181 = work_86 + _180;
j_183 = j_182 + 1;
_184 = (long unsigned int) j_182;
_185 = _184 * 8;
_186 = array_50 + _185;
_187 = *_181;
*_186 = _187;

=======is loop:1=========

 bb index 49 
<bb 49> [local count: 275382600]:
# j_192 = PHI <j_182(47), j_183(48)>
i_188 = i_175 + 1;

=======is loop:1=========

 bb index 50 
<bb 50> [local count: 309418652]:
# i_175 = PHI <0(46), i_188(49)>
# j_182 = PHI <filled_168(46), j_192(49)>
if (num_head_32 > i_175)
  goto <bb 47>; [89.00%]
else
  goto <bb 51>; [11.00%]

=======is loop:0=========

 bb index 51 
<bb 51> [local count: 34036052]:
free (work_86);
free (redundant_88);
free (filled_index_92);
_218 = filled_168;
num_head_52 = _218;
goto <bb 53>; [100.00%]

=======is loop:1=========

 bb index 52 
<bb 52> [local count: 275382600]:
_22 = (long unsigned int) i_35;
_23 = _22 * 8;
_24 = array_50 + _23;
_25 = *_24;
_26 = commit_list_insert (_25, tail_30);
tail_56 = &_26->next;
i_57 = i_35 + 1;

=======is loop:1=========

 bb index 53 
<bb 53> [local count: 309418652]:
# tail_30 = PHI <&result(51), tail_56(52)>
# i_35 = PHI <0(51), i_57(52)>
if (i_35 < num_head_52)
  goto <bb 52>; [89.00%]
else
  goto <bb 54>; [11.00%]

=======is loop:0=========

 bb index 54 
<bb 54> [local count: 34036052]:
free (array_50);
_54 = result;

=======is loop:0=========

 bb index 55 
<bb 55> [local count: 37104602]:
# _36 = PHI <0B(2), _54(54)>
result ={v} {CLOBBER};
return _36;

=======Mapping node_fun:commit_list_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_list_4 = malloc (16);
new_list_4->item = item_5(D);
_1 = *list_p_7(D);
new_list_4->next = _1;
*list_p_7(D) = new_list_4;
return new_list_4;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 5 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    all ptable point : 53 [0m
[40;34m    analyzable ptable point : 47 [0m
[40;34m    used_stmt array stack totalsize of : 0.013784 mb[0m
[40;34m    collect time: : 0.003321 s [0m
[40;34m    algorithm time: 0.178026 s [0m
[40;34m    gimple stmt count : : 316 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:37 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  2157k ( 61%)
 phase opt and generate             :   0.09 (100%)   0.14 (100%)   0.23 ( 96%)  1311k ( 37%)
 callgraph functions expansion      :   0.04 ( 44%)   0.01 (  7%)   0.04 ( 17%)   909k ( 26%)
 tree operand scan                  :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    91k (  3%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)    63k (  2%)
 tree strlen optimization           :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    22k (  1%)
 expand                             :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)   126k (  4%)
 CSE                                :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  2064  (  0%)
 LRA reload inheritance             :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)   560  (  0%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  8440  (  0%)
 plugin execution                   :   0.04 ( 44%)   0.13 ( 93%)   0.19 ( 79%)  4536  (  0%)
 rest of compilation                :   0.02 ( 22%)   0.01 (  7%)   0.00 (  0%)    12k (  0%)
 TOTAL                              :   0.09          0.14          0.24         3537k
/usr/bin/ld: /tmp/ccccjWT4.ltrans0.ltrans.o: in function `reduce_heads':
<artificial>:(.text+0x128): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0x158): undefined reference to `parse_commit'
/usr/bin/ld: <artificial>:(.text+0x1b7): undefined reference to `paint_down_to_common'
/usr/bin/ld: <artificial>:(.text+0x233): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0x31b): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x341): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x35a): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x388): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x39e): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccccjWT4.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x41d): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x42c): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x495): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x4a4): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x4bc): undefined reference to `lookup_commit'
/usr/bin/ld: <artificial>:(.text+0x54c): undefined reference to `oidcmp'
/usr/bin/ld: <artificial>:(.text+0x577): undefined reference to `pop_commit'
collect2: error: ld returned 1 exit status
