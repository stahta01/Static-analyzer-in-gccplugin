../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_4/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_4/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_4/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘move_array’:
./benchmarks/git/leak_4/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_4/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_4/git_leak_4.c:9:
./benchmarks/git/leak_4/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_4/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: At top level:
./benchmarks/git/leak_4/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_4/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: implicit declaration of function ‘parse_commit’ [-Wimplicit-function-declaration]
   39 |                 parse_commit(array[i]);
      |                 ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: implicit declaration of function ‘paint_down_to_common’ [-Wimplicit-function-declaration]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: assignment to ‘struct commit_list *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: implicit declaration of function ‘clear_commit_marks’ [-Wimplicit-function-declaration]
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: implicit declaration of function ‘free_commit_list’ [-Wimplicit-function-declaration]
   60 |                 free_commit_list(common);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:121:33: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: implicit declaration of function ‘get_oid_hex’ [-Wimplicit-function-declaration]
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: implicit declaration of function ‘parse_object’ [-Wimplicit-function-declaration]
  139 |                 obj = parse_object(&oid);
      |                       ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: assignment to ‘struct object *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  139 |                 obj = parse_object(&oid);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: implicit declaration of function ‘peel_to_type’ [-Wimplicit-function-declaration]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:140:26: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                          ^
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: implicit declaration of function ‘add_merge_parent’; did you mean ‘find_merge_parents’? [-Wimplicit-function-declaration]
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^~~~~~~~~~~~~~~~
      |                 find_merge_parents
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: implicit declaration of function ‘lookup_commit’ [-Wimplicit-function-declaration]
  146 |         head_commit = lookup_commit(head);
      |                       ^~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: assignment to ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  146 |         head_commit = lookup_commit(head);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: implicit declaration of function ‘pop_commit’ [-Wimplicit-function-declaration]
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: initialization of ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: implicit declaration of function ‘oidcmp’ [-Wimplicit-function-declaration]
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: implicit declaration of function ‘commit_list_count’; did you mean ‘commit_list_insert’? [-Wimplicit-function-declaration]
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^~~~~~~~~~~~~~~~~
      |                        commit_list_insert

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 45%)
 phase parsing                      :   0.05 ( 83%)   0.01 (100%)   0.06 ( 86%)  1112k ( 39%)
 phase opt and generate             :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 14%)   456k ( 16%)
 callgraph ipa passes               :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 14%)   219k (  8%)
 preprocessing                      :   0.02 ( 33%)   0.00 (  0%)   0.01 ( 14%)   324k ( 11%)
 lexical analysis                   :   0.02 ( 33%)   0.01 (100%)   0.02 ( 29%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   568k ( 20%)
 parser function body               :   0.01 ( 17%)   0.00 (  0%)   0.02 ( 29%)   115k (  4%)
 tree CCP                           :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)  2120  (  0%)
 tree modref                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  2704  (  0%)
 TOTAL                              :   0.06          0.01          0.07         2877k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2233k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_insert--
node:= 4 
 	next_branch :=3
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------mark_redundant_parents--
addr_expraddr_expraddr_expraddr_expraddr_expr------free_commit_list--
addr_expraddr_expraddr_expraddr_expraddr_expr------find_merge_parents--
=======node_fun:mark_redundant_parents=========
node:= 2 
 	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------reduce_heads--
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_count--
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_count--
node:= 3 
 	next_branch :=4
	next_branch :=6
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=3
	next_branch :=9
node:= 9 
 	next_branch :=11
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
addr_expraddr_expraddr_expraddr_expraddr_expr------free_commit_list--
=======node_fun:find_merge_parents=========
node:= 2 
 	next_branch :=16
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------strchr--
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
node:= 6 
 	next_branch :=10
	next_branch :=7
node:= 7 
 	next_branch :=10
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------get_oid_hex--
node:= 8 
 	next_branch :=10
	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------parse_object--
addr_expraddr_expraddr_expraddr_expraddr_expr------peel_to_type--
node:= 12 
 	next_branch :=14
node:= 13 
 	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_insert--
addr_expraddr_expraddr_expraddr_expraddr_expr------add_merge_parent--
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=3
	next_branch :=17
node:= 17 
 	next_branch :=18
	next_branch :=19
addr_expraddr_expraddr_expraddr_expraddr_expr------lookup_commit--
node:= 18 
 	next_branch :=19
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_insert--
node:= 19 
 	next_branch :=25
addr_expraddr_expraddr_expraddr_expraddr_expr------reduce_heads--
node:= 20 
 	next_branch :=24
addr_expraddr_expraddr_expraddr_expraddr_expr------pop_commit--
node:= 21 
 	next_branch :=22
	next_branch :=23
addr_expraddr_expraddr_expraddr_expraddr_expr------oidcmp--
node:= 22 
 	next_branch :=23
node:= 23 
 	next_branch :=24
node:= 24 
 	next_branch :=21
	next_branch :=25
node:= 25 
 	next_branch :=20
	next_branch :=31
node:= 26 
 	next_branch :=27
	next_branch :=30
node:= 27 
 	next_branch :=28
	next_branch :=29
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=30
node:= 30 
 	next_branch :=31
node:= 31 
 	next_branch :=26
	next_branch :=32
=======node_fun:reduce_heads=========
node:= 2 
 	next_branch :=19
	next_branch :=21
node:= 21 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=20
node:= 20 
 	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=5
	next_branch :=10
node:= 10 
 	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=11
	next_branch :=15
node:= 15 
 	next_branch :=17
addr_expraddr_expraddr_expraddr_expraddr_expr------remove_redundant--
node:= 16 
 	next_branch :=17
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_insert--
node:= 17 
 	next_branch :=16
	next_branch :=18
node:= 18 
 	next_branch :=19
=======node_fun:remove_redundant=========
node:= 2 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------st_mult--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------parse_commit--
node:= 4 
 	next_branch :=3
	next_branch :=37
node:= 37 
 	next_branch :=25
node:= 5 
 	next_branch :=6
	next_branch :=38
node:= 38 
 	next_branch :=12
node:= 6 
 	next_branch :=24
node:= 7 
 	next_branch :=9
	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=11
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=12
node:= 12 
 	next_branch :=7
	next_branch :=13
node:= 13 
 	next_branch :=14
	next_branch :=18
addr_expraddr_expraddr_expraddr_expraddr_expr------paint_down_to_common--
node:= 14 
 	next_branch :=18
node:= 15 
 	next_branch :=16
	next_branch :=17
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=19
node:= 18 
 	next_branch :=19
node:= 19 
 	next_branch :=15
	next_branch :=20
node:= 20 
 	next_branch :=22
addr_expraddr_expraddr_expraddr_expraddr_expr------clear_commit_marks--
node:= 21 
 	next_branch :=22
addr_expraddr_expraddr_expraddr_expraddr_expr------clear_commit_marks--
node:= 22 
 	next_branch :=21
	next_branch :=23
node:= 23 
 	next_branch :=24
addr_expraddr_expraddr_expraddr_expraddr_expr------free_commit_list--
node:= 24 
 	next_branch :=25
node:= 25 
 	next_branch :=5
	next_branch :=26
node:= 26 
 	next_branch :=30
addr_expraddr_expraddr_expraddr_expraddr_expr------copy_array--
node:= 27 
 	next_branch :=28
	next_branch :=29
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=30
node:= 30 
 	next_branch :=27
	next_branch :=36
node:= 36 
 	next_branch :=34
node:= 31 
 	next_branch :=32
	next_branch :=33
node:= 32 
 	next_branch :=33
node:= 33 
 	next_branch :=34
node:= 34 
 	next_branch :=31
	next_branch :=35
=======node_fun:commit_list_insert=========
=======node_fun:copy_array=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------st_mult--
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 66 
===============The second stage : Mapping stmt=================
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
# .MEM_20 = VDEF <.MEM_19>
free_commit_list (_3);
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
# VUSE <.MEM_110>
_4 = strlen (p_90);
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
# .MEM_124 = VDEF <.MEM_123>
_13 = parse_object (&oid);
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
commit_list_insert (0B, &list);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
mark_redundant_parents (&revs, _2);
========================================================
=============== *this point analyzable =================
mark_redundant_parents (&revs, _2);
========================================================
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
=============== *this point analyzable =================
free_commit_list (_3);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_merge_parents (&result, &in, &head);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_merge_parents (&result, &in, &head);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_merge_parents (&result, &in, &head);
========================================================
=============== *this point analyzable =================
h_22 = reduce_heads (_1);
========================================================
=============== *this point analyzable =================
h_22 = reduce_heads (_1);
========================================================
=============== *this point analyzable =================
orig_cnt_24 = commit_list_count (_2);
========================================================
=============== *this point analyzable =================
orig_cnt_24 = commit_list_count (_2);
========================================================
=============== *this point analyzable =================
cnt_26 = commit_list_count (h_22);
========================================================
=============== *this point analyzable =================
newline_91 = strchr (p_90, 10);
========================================================
=============== *this point analyzable =================
newline_91 = strchr (p_90, 10);
========================================================
=============== *this point analyzable =================
_4 = strlen (p_90);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_8 = get_oid_hex (p_90, &oid);
========================================================
=============== *this point analyzable =================
_8 = get_oid_hex (p_90, &oid);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
_13 = parse_object (&oid);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
_15 = peel_to_type (0B, 0, obj_97, 1);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
_15 = peel_to_type (0B, 0, obj_97, 1);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
commit_list_insert (parent_99, &parents);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
commit_list_insert (parent_99, &parents);
========================================================
=============== *this point analyzable =================
add_merge_parent (result_79(D), _18, _17);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
add_merge_parent (result_79(D), _18, _17);
========================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
=============== *this point analyzable =================
add_merge_parent (result_79(D), _18, _17);
========================================================
=============== *this point analyzable =================
_21 = lookup_commit (head_73(D));
========================================================
=============== *this point analyzable =================
_21 = lookup_commit (head_73(D));
========================================================
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
=============== *this point analyzable =================
commit_list_insert (head_commit_75, &parents);
========================================================
=============== *this point analyzable =================
_24 = reduce_heads (_23);
========================================================
=============== *this point analyzable =================
_24 = reduce_heads (_23);
========================================================
=============== *this point analyzable =================
_25 = pop_commit (&parents);
========================================================
=============== *this point analyzable =================
_33 = oidcmp (_32, _27);
========================================================
=============== *this point analyzable =================
_33 = oidcmp (_32, _27);
========================================================
=============== *this point analyzable =================
_33 = oidcmp (_32, _27);
========================================================
=============== *this point analyzable =================
array_50 = calloc (_11, 8);
========================================================
=============== *this point analyzable =================
num_head_52 = remove_redundant (array_50, num_head_32);
========================================================
=============== *this point analyzable =================
num_head_52 = remove_redundant (array_50, num_head_32);
========================================================
=============== *this point analyzable =================
_26 = commit_list_insert (_25, tail_30);
========================================================
=============== *this point analyzable =================
_26 = commit_list_insert (_25, tail_30);
========================================================
=============== *this point analyzable =================
_26 = commit_list_insert (_25, tail_30);
========================================================
=============== *this point analyzable =================
work_108 = calloc (_1, 8);
========================================================
=============== *this point analyzable =================
redundant_110 = calloc (_2, 1);
========================================================
=============== *this point analyzable =================
_4 = st_mult (4, _3);
========================================================
=============== *this point analyzable =================
_4 = st_mult (4, _3);
========================================================
=============== *this point analyzable =================
filled_index_113 = malloc (_5);
========================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
=============== *this point analyzable =================
parse_commit (_9);
========================================================
=============== *this point analyzable =================
_30 = paint_down_to_common (_29, filled_89, work_108);
========================================================
=============== *this point analyzable =================
_30 = paint_down_to_common (_29, filled_89, work_108);
========================================================
=============== *this point analyzable =================
_30 = paint_down_to_common (_29, filled_89, work_108);
========================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
=============== *this point analyzable =================
clear_commit_marks (_53, 983040);
========================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
=============== *this point analyzable =================
clear_commit_marks (_57, 983040);
========================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
=============== *this point analyzable =================
free_commit_list (common_129);
========================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
=============== *this point analyzable =================
copy_array (work_108, array_116(D), _58, 8);
========================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
=============== *this point analyzable =================
copy_array (work_108, array_116(D), _58, 8);
========================================================
=============== *this point analyzable =================
new_list_4 = malloc (16);
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
_1 = st_mult (size_6(D), n_4(D));
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
_1 = st_mult (size_6(D), n_4(D));
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
_1 = st_mult (size_6(D), n_4(D));
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
memcpy (dst_8(D), src_9(D), _2);
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
memcpy (dst_8(D), src_9(D), _2);
========================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
=============== *this point analyzable =================
memcpy (dst_8(D), src_9(D), _2);
========================================================
=============== *this point analyzable =================
array_50 = calloc (_11, 8);
========================================================
=============== *this point analyzable =================
work_108 = calloc (_1, 8);
========================================================
=============== *this point analyzable =================
redundant_110 = calloc (_2, 1);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:find_merge_parents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_merge_parents  function_call count: 11 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================== pre trace ptable ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :888========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :889========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
is Other function remove_redundant
 
 Start check Pointer Collect  

======================================================================
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with tail ========= [0m
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:find_merge_parents========= [0m
[40;42m =======start_check_funciton:find_merge_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>
is Other function strchr
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
_4 = strlen (p_90);
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70a002e10 oid
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002d80 parent>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70a002e10 oid
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002d80 parent>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:get_oid_hex 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>
is Other function get_oid_hex
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
  139 |                 obj = parse_object(&oid);
      |                       ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:parse_object 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
is Other function parse_object
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_123>
_13 = parse_object (&oid);
_13 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (long int) _13;
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_97 = (struct object *) _14;
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: use location
  139 |                 obj = parse_object(&oid);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>

 ================== pre trace ptable ================== 
trace fucntion name:peel_to_type 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
is Other function peel_to_type
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parents ========= [0m
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parents ========= [0m
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
result_79(D)->nr = j_58;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
_21 = lookup_commit (head_73(D));
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt call this function :lookup_commit
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
_22 = (long int) _21;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
head_commit_75 = (struct commit *) _22;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>

 ================== pre trace ptable ================== 
trace fucntion name:lookup_commit 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
is Other function lookup_commit
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
_21 = lookup_commit (head_73(D));
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt call this function :lookup_commit
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
_22 = (long int) _21;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
head_commit_75 = (struct commit *) _22;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
_24 = reduce_heads (_23);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
parents = _24;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_116 = VDEF <.MEM_115>
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# VUSE <.MEM_106>
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
_24 = reduce_heads (_23);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
parents = _24;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>

 ================== pre trace ptable ================== 
trace fucntion name:pop_commit 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>
is Other function pop_commit
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:oidcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>
is Other function oidcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_merge_parents========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:mark_redundant_parents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path mark_redundant_parents  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================== pre trace ptable ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :888========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :889========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
is Other function remove_redundant
 
 Start check Pointer Collect  

======================================================================
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with tail ========= [0m
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre_check_funciton:mark_redundant_parents========= [0m
[40;42m =======start_check_funciton:mark_redundant_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
free_commit_list (h_22);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location

===== possiable asias =====
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_37>
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
h_22 = reduce_heads (_1);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free_commit_list (h_22);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
printf ("mark_redundant_parents %d", orig_cnt_24);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
printf ("mark_redundant_parents %d", orig_cnt_24);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:mark_redundant_parents========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7ff70ad78b40 list
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:210:25 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70ad78b40 list
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:210:25 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
commit_list_insert (0B, &list);
./benchmarks/git/leak_4/git_leak_4.c:213:9: warning: use location
  213 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70ad78b40 list
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:210:25 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
commit_list_insert (0B, &list);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:213:9: warning: use location
  213 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70ad78b40 list
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:210:25 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
mark_redundant_parents (&revs, _2);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |     ^
this stmt call this function :mark_redundant_parents
trace fucntion name:mark_redundant_parents 
[40;44m =======trace_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:mark_redundant_parents========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_1 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
_2 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
  183 |         po = commit->parents;
      |            ^
po_27 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
po_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                             ^
_3 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:pn========= [0m
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
pn_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
  190 |                         po->item->object.flags |= TMP_MARK;
      |                           ^
_5 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
  193 |                 po=po->next;
      |                   ^
po_35 = po_14->next;
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
po_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;46m =======add node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
mark_redundant_parents (&revs, _2);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |     ^
this stmt call this function :mark_redundant_parents
trace fucntion name:mark_redundant_parents 
[40;44m =======trace_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:mark_redundant_parents========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_1 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
_2 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
  183 |         po = commit->parents;
      |            ^
po_27 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
po_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                             ^
_3 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:pn========= [0m
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
pn_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
  190 |                         po->item->object.flags |= TMP_MARK;
      |                           ^
_5 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
  193 |                 po=po->next;
      |                   ^
po_35 = po_14->next;
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
po_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;46m =======add node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:revs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78bd0 revs
    type <record_type 0x7ff709ff6540 rev_info BLK
        size <integer_cst 0x7ff70a4d0c30 constant 0>
        unit-size <integer_cst 0x7ff70a4d0be8 constant 0>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff6540 context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff65e8>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7ff70a4d0c30 0> unit-size <integer_cst 0x7ff70a4d0be8 0>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78b40 list>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with revs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
mark_redundant_parents (&revs, _2);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |     ^
this stmt call this function :mark_redundant_parents
trace fucntion name:mark_redundant_parents 
[40;44m =======trace_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:mark_redundant_parents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_1 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
_2 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
  183 |         po = commit->parents;
      |            ^
po_27 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
po_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                             ^
_3 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:pn========= [0m
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
pn_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
  190 |                         po->item->object.flags |= TMP_MARK;
      |                           ^
_5 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
  193 |                 po=po->next;
      |                   ^
po_35 = po_14->next;
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
po_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;46m =======add node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
mark_redundant_parents (&revs, _2);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |     ^
this stmt call this function :mark_redundant_parents
trace fucntion name:mark_redundant_parents 
[40;44m =======trace_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:mark_redundant_parents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_1 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
_2 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
  183 |         po = commit->parents;
      |            ^
po_27 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
po_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                             ^
_3 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:pn========= [0m
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
pn_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
  190 |                         po->item->object.flags |= TMP_MARK;
      |                           ^
_5 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
  193 |                 po=po->next;
      |                   ^
po_35 = po_14->next;
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
po_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;46m =======add node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8630
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _2 = _1->item;
    version:2
    ptr-info 0x7ff709ffe888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_20 = VDEF <.MEM_19>
free_commit_list (_3);
free_commit_list (_3);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
  216 |     free_commit_list(list);
      |     ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
_3 = list;
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (0B, &list);
./benchmarks/git/leak_4/git_leak_4.c:213:9: warning: use location
  213 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (0B, &list);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:213:9: warning: use location
  213 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = list;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:215:39: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |                                       ^
_2 = _1->item;
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
  215 |     mark_redundant_parents(&revs, list->item);
      |     ^
mark_redundant_parents (&revs, _2);
./benchmarks/git/leak_4/git_leak_4.c:215:5: warning: use location
this stmt call this function :mark_redundant_parents
trace fucntion name:mark_redundant_parents 
[40;44m =======trace_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:mark_redundant_parents========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_1 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
_2 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
  183 |         po = commit->parents;
      |            ^
po_27 = commit_20(D)->parents;
./benchmarks/git/leak_4/git_leak_4.c:183:12: warning: use location
po_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                             ^
_3 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:186:29: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:pn========= [0m
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
pn_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
  190 |                         po->item->object.flags |= TMP_MARK;
      |                           ^
_5 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7 = po_14->item;
./benchmarks/git/leak_4/git_leak_4.c:190:27: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:po========= [0m
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
  193 |                 po=po->next;
      |                   ^
po_35 = po_14->next;
./benchmarks/git/leak_4/git_leak_4.c:193:19: warning: use location
po_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;46m =======add node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8678
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7ff709ffe8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with result ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with result ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78d80 result
    type <record_type 0x7ff709ff2d20 merge_parents TI
        size <integer_cst 0x7ff70a4d0c00 constant 128>
        unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20
        fields <field_decl 0x7ff709febab0 alloc type <integer_type 0x7ff70a4e55e8 int>
            SI ./benchmarks/git/leak_4/../git.h:376:6
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2d20 merge_parents> chain <field_decl 0x7ff709feba18 nr>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2dc8>>
    addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7ff70a4d0c00 128> unit-size <integer_cst 0x7ff70a4d0c18 16>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78cf0 in>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with result ========= [0m
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:result========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with in ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78cf0 in
    type <record_type 0x7ff709ff2e70 strbuf BLK
        size <integer_cst 0x7ff70a4ee078 constant 192>
        unit-size <integer_cst 0x7ff70a4ee048 constant 24>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2e70
        fields <field_decl 0x7ff709febc78 alloc type <integer_type 0x7ff709fe89d8 size_t>
            unsigned DI ./benchmarks/git/leak_4/../git.h:242:9
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2e70 strbuf> chain <field_decl 0x7ff709febbe0 len>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff2f18>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19 size <integer_cst 0x7ff70a4ee078 192> unit-size <integer_cst 0x7ff70a4ee048 24>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78c60 head>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with in ========= [0m
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:in========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:4 
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
find_merge_parents (&result, &in, &head);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:217:5: warning: use location
  217 |     find_merge_parents(&result, &in, &head);
      |     ^
this stmt call this function :find_merge_parents
trace fucntion name:find_merge_parents 
[40;44m =======trace_function_path find_merge_parents  function_call count: 11 level :0========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:find_merge_parents========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
p_90

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
_23 = parents;
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_27 = &cmit_86->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_27

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                             ^
_37 = _34 + _36;
./benchmarks/git/leak_4/git_leak_4.c:155:45: warning: use location
_37

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
_45

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                               ^
_48 = _45 + _47;
./benchmarks/git/leak_4/git_leak_4.c:161:63: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^
_52 = _49 + _51;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
*_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;46m =======add node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
reduce_heads this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object reduce_heads
[40;46m =======add node_fun stack:reduce_heads========= [0m
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :1========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :2========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :2========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :3========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
commit_list_insert this fucntion return value is heap-object 
find_merge_parents this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <var_decl 0x7ff70ad78c60 head
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:208:22 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709ff0000 main> chain <var_decl 0x7ff70ad78bd0 revs>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;46m =======add node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;46m =======add node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;46m =======add node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;46m =======add node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;46m =======add node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;46m =======add node_fun stack:strchr========= [0m

 ================== trace ================== 
trace fucntion free:8 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:mark_redundant_parents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘mark_redundant_parents’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘mark_redundant_parents’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================== pre trace ptable ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :888========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :889========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
is Other function remove_redundant
 
 Start check Pointer Collect  

======================================================================
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with tail ========= [0m
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre_check_funciton:mark_redundant_parents========= [0m
[40;42m =======start_check_funciton:mark_redundant_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
free_commit_list (h_22);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7ff709ffe8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location

===== possiable asias =====
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_37>
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: free in this location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^

===== possiable asias =====
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
h_22 = reduce_heads (_1);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:h========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free_commit_list (h_22);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8f30
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a0025a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7ff709ffe9a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
printf ("mark_redundant_parents %d", orig_cnt_24);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7ff709ffe8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
printf ("mark_redundant_parents %d", orig_cnt_24);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a4d8f78
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a0022d0 orig_cnt>
    def_stmt orig_cnt_24 = commit_list_count (_2);
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_count 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>
is Other function commit_list_count
 
 Start check Pointer Collect  

======================================================================
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt call this function :commit_list_count
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007000
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a002240 cnt>
    def_stmt cnt_26 = commit_list_count (h_22);
    version:26>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:mark_redundant_parents========= [0m
[40;44m =======node_fun:find_merge_parents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_merge_parents  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘find_merge_parents’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘find_merge_parents’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================== pre trace ptable ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :888========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :889========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
is Other function remove_redundant
 
 Start check Pointer Collect  

======================================================================
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with tail ========= [0m
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:find_merge_parents========= [0m
[40;42m =======start_check_funciton:find_merge_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f750
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7ff709ffec30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>
is Other function strchr
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f798
    type <pointer_type 0x7ff709fef888
        type <integer_type 0x7ff709fef5e8 char public QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff709fdf7e0 -128> max <integer_cst 0x7ff709fdf7c8 127>
            pointer_to_this <pointer_type 0x7ff709fef888>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7ff70a002ea0 newline>
    def_stmt newline_91 = strchr (p_90, 10);
    version:91
    ptr-info 0x7ff709ffec48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_110>
_4 = strlen (p_90);
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _4 = strlen (p_90);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70a002e10 oid
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002d80 parent>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70a002e10 oid
    type <record_type 0x7ff709ff2150 object_id BLK
        size <integer_cst 0x7ff709fdf840 constant 160>
        unit-size <integer_cst 0x7ff709fdf828 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150
        fields <field_decl 0x7ff709feb260 hash type <array_type 0x7ff709ff20a8>
            BLK ./benchmarks/git/leak_4/../git.h:256:16 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
            align:8 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7ff70a4d0be8 constant 0>
            bit-offset <integer_cst 0x7ff70a4d0c30 constant 0> context <record_type 0x7ff709ff2150 object_id>> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
        pointer_to_this <pointer_type 0x7ff709ff6000>>
    addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7ff709fdf840 160> unit-size <integer_cst 0x7ff709fdf828 20>
    align:8 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002d80 parent>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:get_oid_hex 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>
is Other function get_oid_hex
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch ---strlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = in_72(D)->buf;
./benchmarks/git/leak_4/git_leak_4.c:120:29: warning: use location
  120 |                 char *p = in->buf + pos;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt call this function :get_oid_hex
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
  139 |                 obj = parse_object(&oid);
      |                       ^
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007678
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _8 = get_oid_hex (p_90, &oid);
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:parse_object 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
is Other function parse_object
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_123>
_13 = parse_object (&oid);
_13 = parse_object (&oid);
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location
this stmt call this function :parse_object
trace fucntion name:parse_object 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = (long int) _13;
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_97 = (struct object *) _14;
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: use location
  139 |                 obj = parse_object(&oid);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007798
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _13 = parse_object (&oid);
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with obj ========= [0m
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:obj========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f8b8
    type <pointer_type 0x7ff709ff60a8
        type <record_type 0x7ff709ff23f0 object BLK
            size <integer_cst 0x7ff70a4ee078 constant 192>
            unit-size <integer_cst 0x7ff70a4ee048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff23f0 fields <field_decl 0x7ff709feb558 parsed> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff60a8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a002cf0 obj>
    def_stmt obj_97 = (struct object *) _14;
    version:97
    ptr-info 0x7ff709ffec60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>

 ================== pre trace ptable ================== 
trace fucntion name:peel_to_type 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
is Other function peel_to_type
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = &obj_97->oid;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
_15 = peel_to_type (0B, 0, obj_97, 1);
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^
this stmt call this function :peel_to_type
trace fucntion name:peel_to_type 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long int) _15;
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parent_99 = (struct commit *) _16;
./benchmarks/git/leak_4/git_leak_4.c:140:24: warning: use location
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007828
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _15 = peel_to_type (0B, 0, obj_97, 1);
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parent========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f900
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7ff709ffec78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parents ========= [0m
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7ff70a002c60 parents
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7ff709fe9e00 find_merge_parents> chain <var_decl 0x7ff70a002bd0 head_commit>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parents ========= [0m
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:parents========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
result_79(D)->nr = j_58;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f5e8
    type <pointer_type 0x7ff709ff2dc8
        type <record_type 0x7ff709ff2d20 merge_parents TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2d20 fields <field_decl 0x7ff709febab0 alloc> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2dc8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7ff709ffec00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007900
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _18 = &obj_97->oid;
    version:18
    ptr-info 0x7ff709ffea38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt call this function :add_merge_parent
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch ---add_merge_parent-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_52 = *_48;
./benchmarks/git/leak_4/git_leak_4.c:161:49: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37->used = 1;
./benchmarks/git/leak_4/git_leak_4.c:155:54: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0078b8
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = &parent_99->object.oid;
    version:17
    ptr-info 0x7ff709ffea20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
_21 = lookup_commit (head_73(D));
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt call this function :lookup_commit
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
_22 = (long int) _21;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
head_commit_75 = (struct commit *) _22;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate node_fun argument:head========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f558
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7ff709ffebd0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>

 ================== pre trace ptable ================== 
trace fucntion name:lookup_commit 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
is Other function lookup_commit
 
 Start check Pointer Collect  

======================================================================
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
_21 = lookup_commit (head_73(D));
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt call this function :lookup_commit
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
_22 = (long int) _21;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
head_commit_75 = (struct commit *) _22;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0079d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _21 = lookup_commit (head_73(D));
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:head_commit========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a00f5a0
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
    var <var_decl 0x7ff70a002bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7ff709ffebe8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
_24 = reduce_heads (_23);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                                                 ^
_24 = array_50 + _23;
./benchmarks/git/leak_4/git_leak_4.c:105:49: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
_11 = redundant_110 + _10;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^
_24 = work_108 + _23;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_41

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                          ^
_49 = redundant_110 + _48;
./benchmarks/git/leak_4/git_leak_4.c:56:42: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                                                ^
_56 = work_108 + _55;
./benchmarks/git/leak_4/git_leak_4.c:59:48: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
parents = _24;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007a68
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7ff709ffea50>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_116 = VDEF <.MEM_115>
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
# VUSE <.MEM_106>
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: free in this location
  149 |         parents = reduce_heads(parents);
      |                   ^

===== possiable asias =====
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>

 ================== pre trace ptable ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
is Other function reduce_heads
 
 Start check Pointer Collect  

======================================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
_24 = reduce_heads (_23);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt call this function :reduce_heads
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
   89 |                 p->item->object.flags &= ~STALE;
      |                  ^
_1 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3 = p_27->item;
./benchmarks/git/leak_4/git_leak_4.c:89:18: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                              ^
p_66 = p_27->next;
./benchmarks/git/leak_4/git_leak_4.c:88:30: warning: use location
p_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
   91 |                 if (p->item->object.flags & STALE)
      |                      ^
_5 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:91:22: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
   93 |                 p->item->object.flags |= STALE;
      |                  ^
_7 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9 = p_28->item;
./benchmarks/git/leak_4/git_leak_4.c:93:18: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                            ^
p_64 = p_28->next;
./benchmarks/git/leak_4/git_leak_4.c:90:44: warning: use location
p_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
*_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                     ^
p_61 = p_29->next;
./benchmarks/git/leak_4/git_leak_4.c:97:37: warning: use location
p_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:tail========= [0m
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
tail_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
  107 |         return result;
      |                ^
_54 = result;
./benchmarks/git/leak_4/git_leak_4.c:107:16: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
parents = _24;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007ab0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _24 = reduce_heads (_23);
    version:24
    ptr-info 0x7ff709ffea68>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>

 ================== pre trace ptable ================== 
trace fucntion name:pop_commit 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>
is Other function pop_commit
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007af8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _25 = pop_commit (&parents);
    version:25>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007cf0
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7ff709ffeac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007b88
    type <pointer_type 0x7ff709ff6000
        type <record_type 0x7ff709ff2150 object_id BLK
            size <integer_cst 0x7ff709fdf840 constant 160>
            unit-size <integer_cst 0x7ff709fdf828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2150 fields <field_decl 0x7ff709feb260 hash> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff6000>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _27 = &cmit_86->object.oid;
    version:27
    ptr-info 0x7ff709ffea80>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:oidcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>
is Other function oidcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt call this function :oidcmp
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a007d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _33 = oidcmp (_32, _27);
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_merge_parents========= [0m
[40;44m =======node_fun:reduce_heads========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘reduce_heads’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
   39 |                 parse_commit(array[i]);
      |                                   ^
_8 = array_116(D) + _7;
./benchmarks/git/leak_4/git_leak_4.c:39:35: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_21

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25 = *_21;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
*_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
_29 = *_28;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
*_38

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
_42

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
*_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
_53

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
_57

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
   67 |                         array[filled++] = work[i];
      |                              ^
_67 = array_116(D) + _66;
./benchmarks/git/leak_4/git_leak_4.c:67:30: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
_68

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
*_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
_78

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:array========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
*_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
In function ‘reduce_heads’:
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016cf0
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7ff709ffee58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016ab0
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_32 = PHI <0(20), num_head_31(8)>
    version:32>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================== pre trace ptable ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :888========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :889========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
is Other function remove_redundant
 
 Start check Pointer Collect  

======================================================================
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with num_head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016d38
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00e6c0 num_head>
    def_stmt num_head_52 = remove_redundant (array_50, num_head_32);
    version:52>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0168b8
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7ff709ffed98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with tail ========= [0m
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tail========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016a20
    type <pointer_type 0x7ff709ff25e8
        type <pointer_type 0x7ff709fefd20 type <record_type 0x7ff709fefc78 commit_list>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff25e8>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00e7e0 tail>
    def_stmt tail_30 = PHI <&result(15), tail_56(16)>
    version:30
    ptr-info 0x7ff709ffee10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================== pre trace ptable ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
is Other function commit_list_insert
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
_26 = commit_list_insert (_25, tail_30);
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
   16 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_4/git_leak_4.c:16:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a016900
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
   
    def_stmt _26 = commit_list_insert (_25, tail_30);
    version:26
    ptr-info 0x7ff709ffedb0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt call this function :calloc
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch ---commit_list_insert-----
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt call this function :remove_redundant
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch ---remove_redundant-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0164c8
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# VUSE <.MEM_72>
_25 = *_24;
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: free in this location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: free in this location
  106 |         free(array);
      |         ^

===== possiable asias =====
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;44m =======node_fun:remove_redundant========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
In function ‘remove_redundant’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025000
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ef30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7ff70a02d108>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025048
    type <pointer_type 0x7ff709ff27e0
        type <integer_type 0x7ff70a4e5348 unsigned char public unsigned QI
            size <integer_cst 0x7ff70a4d0ca8 constant 8>
            unit-size <integer_cst 0x7ff70a4d0cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e53f0 precision:8 min <integer_cst 0x7ff70a4d0cd8 0> max <integer_cst 0x7ff70a4d0c78 255>
            pointer_to_this <pointer_type 0x7ff709ff27e0>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00eea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7ff70a02d120>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5e8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _3 = cnt_105(D) + -1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
_4 = st_mult (4, _3);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_5 = (long unsigned int) _4;
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
this stmt call this function :malloc
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c630
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _4 = st_mult (4, _3);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025090
    type <pointer_type 0x7ff70a4ec9d8
        type <integer_type 0x7ff70a4e55e8 int public SI
            size <integer_cst 0x7ff70a4d0df8 constant 32>
            unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff70a00ee10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7ff70a02d138>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c798
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7ff709ffef00>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd38
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7ff709ffefc0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_85 < filled_89)
./benchmarks/git/leak_4/git_leak_4.c:58:31: warning: use location
   58 |                 for (j = 0; j < filled; j++)
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with filled ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---clear_commit_marks-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024e58
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
    var <var_decl 0x7ff70a00ec60 filled>
    def_stmt filled_89 = PHI <0(38), filled_88(11)>
    version:89>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================== pre trace ptable ================== 
trace fucntion name:paint_down_to_common 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
is Other function paint_down_to_common
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01cd80
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _30 = paint_down_to_common (_29, filled_89, work_108);
    version:30>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024438
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7ff70a02d000>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a024558
    type <pointer_type 0x7ff709ff2540
        type <record_type 0x7ff709ff2498 commit BLK
            size <integer_cst 0x7ff70a4ee000 constant 512>
            unit-size <integer_cst 0x7ff70a5a5090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709ff2498 fields <field_decl 0x7ff709feb8e8 object> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709ff2540>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff2738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7ff70a02d030>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0252d0
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7ff70a02d168>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = array_116(D) + _76;
./benchmarks/git/leak_4/git_leak_4.c:70:30: warning: use location
   70 |                         array[j++] = work[i];
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = array_116(D) + _51;
./benchmarks/git/leak_4/git_leak_4.c:57:41: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = *_52;
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = array_116(D) + _33;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = *_34;
./benchmarks/git/leak_4/git_leak_4.c:52:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = _35->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:37: warning: use location
   52 |                 if (array[i]->object.flags & PARENT2)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _36 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = array_116(D) + _27;
./benchmarks/git/leak_4/git_leak_4.c:51:52: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_116(D) + _20;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = *_8;
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
this stmt call this function :parse_commit
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025168
    type <pointer_type 0x7ff709ff2738
        type <pointer_type 0x7ff709ff2540 type <record_type 0x7ff709ff2498 commit>
            public unsigned DI
            size <integer_cst 0x7ff70a4d0bb8 constant 64>
            unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff709ff2738>>
        public unsigned DI size <integer_cst 0x7ff70a4d0bb8 64> unit-size <integer_cst 0x7ff70a4d0bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004300 array>
    def_stmt GIMPLE_NOP
    version:116
    ptr-info 0x7ff70a02d150>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a0245a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _58 = (long unsigned int) cnt_105(D);
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt call this function :calloc
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt call this function :copy_array
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = *_56;
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt call this function :clear_commit_marks
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt call this function :paint_down_to_common
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch ---free_commit_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location
   49 |                         work[filled++] = array[j];
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_24 = _25;
./benchmarks/git/leak_4/git_leak_4.c:49:40: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c558
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: free in this location
   71 |         free(work);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: free in this location
   72 |         free(redundant);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: free in this location
   73 |         free(filled_index);
      |         ^

===== possiable asias =====
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt call this function :calloc
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_49 = 1;
./benchmarks/git/leak_4/git_leak_4.c:56:60: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = *_11;
./benchmarks/git/leak_4/git_leak_4.c:43:30: warning: use location
   43 |                 if (redundant[i])
      |                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a01c5a0
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a01c678
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;44m =======node_fun:commit_list_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a025e58
    type <pointer_type 0x7ff709fefd20
        type <record_type 0x7ff709fefc78 commit_list TI
            size <integer_cst 0x7ff70a4d0c00 constant 128>
            unit-size <integer_cst 0x7ff70a4d0c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff709fefc78 fields <field_decl 0x7ff709feb1c8 item> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7ff709fefd20>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff709ff25e8>>
    var <var_decl 0x7ff70a01e750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7ff70a02d198>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;44m =======node_fun:copy_array========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
In function ‘copy_array’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1b0
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b168
    type <integer_type 0x7ff709fe89d8 size_t public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615> context <translation_unit_decl 0x7ff70a4db168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7ff70a004600 n>
    def_stmt GIMPLE_NOP
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b0d8
    type <integer_type 0x7ff70a4e55e8 int public SI
        size <integer_cst 0x7ff70a4d0df8 constant 32>
        unit-size <integer_cst 0x7ff70a4d0e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e55e8 precision:32 min <integer_cst 0x7ff70a4d0db0 -2147483648> max <integer_cst 0x7ff70a4d0dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff70a4ec9d8>>
   
    def_stmt _1 = st_mult (size_6(D), n_4(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b1f8
    type <pointer_type 0x7ff70a4ec000
        type <void_type 0x7ff70a4e5f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec000>>
        public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff70a4f19d8>>
    var <parm_decl 0x7ff70a004500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7ff70a02d1e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b240
    type <pointer_type 0x7ff70a4ec150
        type <void_type 0x7ff70a4ec0a8 readonly VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff70a4ec150>>
        unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff70a004580 src>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7ff70a02d1f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff70a02b120
    type <integer_type 0x7ff70a4e57e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff70a4d0bb8 constant 64>
        unit-size <integer_cst 0x7ff70a4d0bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff70a4e5738 precision:64 min <integer_cst 0x7ff70a4d0e88 0> max <integer_cst 0x7ff70a4d1500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff70a4f17e0>>
   
    def_stmt _2 = (long unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 97603128]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 976138697]:
commit_list_insert (0B, &list);
i_16 = i_4 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_4 = PHI <0(2), i_16(3)>
if (i_4 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 97603128]:
_1 = list;
_2 = _1->item;
mark_redundant_parents (&revs, _2);
_3 = list;
free_commit_list (_3);
find_merge_parents (&result, &in, &head);
result ={v} {CLOBBER};
in ={v} {CLOBBER};
head ={v} {CLOBBER};
revs ={v} {CLOBBER};
list ={v} {CLOBBER};
return 0;

=======Mapping node_fun:mark_redundant_parents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
_1 = commit_20(D)->parents;
h_22 = reduce_heads (_1);
_2 = commit_20(D)->parents;
orig_cnt_24 = commit_list_count (_2);
cnt_26 = commit_list_count (h_22);
po_27 = commit_20(D)->parents;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
if (pn_16 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_3 = po_14->item;
_4 = pn_16->item;
if (_3 == _4)
  goto <bb 5>; [30.00%]
else
  goto <bb 6>; [70.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 200682346]:
pn_31 = pn_16->next;
i_32 = i_11 + 1;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 754947880]:
_5 = po_14->item;
_6 = _5->object.flags;
_7 = po_14->item;
_8 = _6 | 16;
_7->object.flags = _8;
marked_34 = marked_13 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630225]:
# i_10 = PHI <i_32(5), i_11(6)>
# marked_12 = PHI <marked_13(5), marked_34(6)>
# pn_15 = PHI <pn_31(5), pn_16(6)>
po_35 = po_14->next;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# i_11 = PHI <0(2), i_10(7)>
# marked_13 = PHI <0(2), marked_12(7)>
# po_14 = PHI <po_27(2), po_35(7)>
# pn_16 = PHI <h_22(2), pn_15(7)>
if (po_14 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
if (i_11 != cnt_26)
  goto <bb 11>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118064356]:
_9 = marked_13 + cnt_26;
if (_9 != orig_cnt_24)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 94470]:
printf ("mark_redundant_parents %d", orig_cnt_24);
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118017130]:
free_commit_list (h_22);
return marked_13;

=======Mapping node_fun:find_merge_parents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 14598063]:
parents = 0B;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 118111600]:
_1 = in_72(D)->buf;
_2 = (sizetype) pos_54;
p_90 = _1 + _2;
newline_91 = strchr (p_90, 10);
if (newline_91 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 82678120]:
_3 = newline_91 - p_90;
_93 = (int) _3;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 35433480]:
_4 = strlen (p_90);
_92 = (int) _4;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 118111600]:
# _59 = PHI <_93(4), _92(5)>
_5 = newline_91 != 0B;
_6 = (int) _5;
_7 = _6 + _59;
pos_94 = _7 + pos_54;
if (_59 <= 42)
  goto <bb 10>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 59055800]:
_8 = get_oid_hex (p_90, &oid);
if (_8 != 0)
  goto <bb 10>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 39567386]:
_10 = MEM[(char *)p_90 + 40B];
if (_10 != 9)
  goto <bb 10>; [48.88%]
else
  goto <bb 9>; [51.12%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 20226848]:
_12 = MEM[(char *)p_90 + 41B];
if (_12 != 9)
  goto <bb 10>; [66.00%]
else
  goto <bb 11>; [34.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 111234472]:
// predicted unlikely by continue predictor.
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 6877128]:
_13 = parse_object (&oid);
_14 = (long int) _13;
obj_97 = (struct object *) _14;
_15 = peel_to_type (0B, 0, obj_97, 1);
_16 = (long int) _15;
parent_99 = (struct commit *) _16;
if (_15 == 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 3438564]:
// predicted unlikely by continue predictor.
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 3438564]:
commit_list_insert (parent_99, &parents);
_17 = &parent_99->object.oid;
_18 = &obj_97->oid;
add_merge_parent (result_79(D), _18, _17);
oid ={v} {CLOBBER};
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 114673036]:
oid ={v} {CLOBBER};

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 118111600]:
# pos_11 = PHI <pos_94(13), pos_94(14)>

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 132709663]:
# pos_54 = PHI <0(2), pos_11(15)>
_19 = (long unsigned int) pos_54;
_20 = in_72(D)->len;
if (_19 < _20)
  goto <bb 3>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 14598063]:
_21 = lookup_commit (head_73(D));
_22 = (long int) _21;
head_commit_75 = (struct commit *) _22;
if (_21 != 0)
  goto <bb 18>; [33.00%]
else
  goto <bb 19>; [67.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 4817361]:
commit_list_insert (head_commit_75, &parents);

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 14598063]:
_23 = parents;
_24 = reduce_heads (_23);
parents = _24;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 118111600]:
_25 = pop_commit (&parents);
_26 = (long int) _25;
cmit_86 = (struct commit *) _26;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 955630225]:
_27 = &cmit_86->object.oid;
_28 = result_79(D)->item;
_29 = (long unsigned int) i_55;
_30 = _29 * 41;
_31 = _28 + _30;
_32 = &_31->commit;
_33 = oidcmp (_32, _27);
if (_33 == 0)
  goto <bb 22>; [50.00%]
else
  goto <bb 23>; [50.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 477815112]:
_34 = result_79(D)->item;
_35 = (long unsigned int) i_55;
_36 = _35 * 41;
_37 = _34 + _36;
_37->used = 1;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 955630225]:
i_89 = i_55 + 1;

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 1073741824]:
# i_55 = PHI <0(20), i_89(23)>
_38 = result_79(D)->nr;
if (_38 > i_55)
  goto <bb 21>; [89.00%]
else
  goto <bb 25>; [11.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 132709663]:
_39 = parents;
if (_39 != 0B)
  goto <bb 20>; [89.00%]
else
  goto <bb 31>; [11.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 118111600]:
_40 = result_79(D)->item;
_41 = (long unsigned int) i_56;
_42 = _41 * 41;
_43 = _40 + _42;
_44 = _43->used;
if (_44 != 0)
  goto <bb 27>; [50.00%]
else
  goto <bb 30>; [50.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 59055800]:
if (i_56 != j_58)
  goto <bb 28>; [66.00%]
else
  goto <bb 29>; [34.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 38976828]:
_45 = result_79(D)->item;
_46 = (long unsigned int) i_56;
_47 = _46 * 41;
_48 = _45 + _47;
_49 = result_79(D)->item;
_50 = (long unsigned int) j_58;
_51 = _50 * 41;
_52 = _49 + _51;
*_52 = *_48;

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 59055800]:
j_83 = j_58 + 1;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 118111600]:
# j_57 = PHI <j_58(26), j_83(29)>
i_84 = i_56 + 1;

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 132709663]:
# i_56 = PHI <0(25), i_84(30)>
# j_58 = PHI <0(25), j_57(30)>
_53 = result_79(D)->nr;
if (_53 > i_56)
  goto <bb 26>; [89.00%]
else
  goto <bb 32>; [11.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 14598063]:
result_79(D)->nr = j_58;
parents ={v} {CLOBBER};
return;

=======Mapping node_fun:reduce_heads=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 128760057]:
result = 0B;
if (heads_47(D) == 0B)
  goto <bb 19>; [8.27%]
else
  goto <bb 21>; [91.73%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = p_27->item;
_2 = _1->object.flags;
_3 = p_27->item;
_4 = _2 & 133955583;
_3->object.flags = _4;
p_66 = p_27->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# p_27 = PHI <heads_47(D)(21), p_66(3)>
if (p_27 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 20>; [11.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 118111600]:
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
_5 = p_28->item;
_6 = _5->object.flags;
_48 = _6 & 262144;
if (_48 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 315357973]:
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 640272253]:
_7 = p_28->item;
_8 = _7->object.flags;
_9 = p_28->item;
_10 = _8 | 262144;
_9->object.flags = _10;
num_head_63 = num_head_32 + 1;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
# num_head_31 = PHI <num_head_32(6), num_head_63(7)>
p_64 = p_28->next;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# p_28 = PHI <heads_47(D)(20), p_64(8)>
# num_head_32 = PHI <0(20), num_head_31(8)>
if (p_28 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
_11 = (long unsigned int) num_head_32;
array_50 = calloc (_11, 8);
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630225]:
_12 = p_29->item;
_13 = _12->object.flags;
_46 = _13 & 262144;
if (_46 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 477815112]:
i_58 = i_34 + 1;
_14 = (long unsigned int) i_34;
_15 = _14 * 8;
_16 = array_50 + _15;
_17 = p_29->item;
*_16 = _17;
_18 = p_29->item;
_19 = _18->object.flags;
_20 = p_29->item;
_21 = _19 & 133955583;
_20->object.flags = _21;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 955630225]:
# i_33 = PHI <i_34(11), i_58(12)>
p_61 = p_29->next;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1073741824]:
# p_29 = PHI <heads_47(D)(10), p_61(13)>
# i_34 = PHI <0(10), i_33(13)>
if (p_29 != 0B)
  goto <bb 11>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
num_head_52 = remove_redundant (array_50, num_head_32);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 955630225]:
_22 = (long unsigned int) i_35;
_23 = _22 * 8;
_24 = array_50 + _23;
_25 = *_24;
_26 = commit_list_insert (_25, tail_30);
tail_56 = &_26->next;
i_57 = i_35 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 1073741824]:
# tail_30 = PHI <&result(15), tail_56(16)>
# i_35 = PHI <0(15), i_57(16)>
if (i_35 < num_head_52)
  goto <bb 16>; [89.00%]
else
  goto <bb 18>; [11.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 118111600]:
free (array_50);
_54 = result;

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 128760057]:
# _36 = PHI <0B(2), _54(18)>
result ={v} {CLOBBER};
return _36;

=======Mapping node_fun:remove_redundant=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 34036049]:
_1 = (long unsigned int) cnt_105(D);
work_108 = calloc (_1, 8);
_2 = (long unsigned int) cnt_105(D);
redundant_110 = calloc (_2, 1);
_3 = cnt_105(D) + -1;
_4 = st_mult (4, _3);
_5 = (long unsigned int) _4;
filled_index_113 = malloc (_5);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 275382582]:
_6 = (long unsigned int) i_79;
_7 = _6 * 8;
_8 = array_116(D) + _7;
_9 = *_8;
parse_commit (_9);
i_143 = i_79 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 309418631]:
# i_79 = PHI <0(2), i_143(3)>
if (i_79 < cnt_105(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 37>; [11.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 34036049]:
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 275382600]:
_10 = (sizetype) i_80;
_11 = redundant_110 + _10;
_12 = *_11;
if (_12 != 0)
  goto <bb 6>; [57.11%]
else
  goto <bb 38>; [42.89%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 118111598]:
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 157271002]:
// predicted unlikely by continue predictor.
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630226]:
if (i_80 == j_83)
  goto <bb 9>; [20.24%]
else
  goto <bb 8>; [79.76%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 762210670]:
_13 = (sizetype) j_83;
_14 = redundant_110 + _13;
_15 = *_14;
if (_15 != 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 444949076]:
// predicted unlikely by continue predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 510681150]:
_16 = (long unsigned int) filled_89;
_17 = _16 * 4;
_18 = filled_index_113 + _17;
*_18 = j_83;
_19 = (long unsigned int) j_83;
_20 = _19 * 8;
_21 = array_116(D) + _20;
filled_138 = filled_89 + 1;
_22 = (long unsigned int) filled_89;
_23 = _22 * 8;
_24 = work_108 + _23;
_25 = *_21;
*_24 = _25;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630227]:
# filled_88 = PHI <filled_89(9), filled_138(10)>
j_140 = j_83 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# j_83 = PHI <0(38), j_140(11)>
# filled_89 = PHI <0(38), filled_88(11)>
if (j_83 < cnt_105(D))
  goto <bb 7>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 118111600]:
_26 = (long unsigned int) i_80;
_27 = _26 * 8;
_28 = array_116(D) + _27;
_29 = *_28;
_30 = paint_down_to_common (_29, filled_89, work_108);
_31 = (long int) _30;
common_129 = (struct commit_list *) _31;
_32 = (long unsigned int) i_80;
_33 = _32 * 8;
_34 = array_116(D) + _33;
_35 = *_34;
_36 = _35->object.flags;
_114 = _36 & 131072;
if (_114 != 0)
  goto <bb 14>; [50.00%]
else
  goto <bb 18>; [50.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 59055800]:
_37 = (sizetype) i_80;
_38 = redundant_110 + _37;
*_38 = 1;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 955630225]:
_39 = (long unsigned int) j_84;
_40 = _39 * 8;
_41 = work_108 + _40;
_42 = *_41;
_43 = _42->object.flags;
_115 = _43 & 65536;
if (_115 != 0)
  goto <bb 16>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 477815112]:
_44 = (long unsigned int) j_84;
_45 = _44 * 4;
_46 = filled_index_113 + _45;
_47 = *_46;
_48 = (sizetype) _47;
_49 = redundant_110 + _48;
*_49 = 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 955630225]:
j_136 = j_84 + 1;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 118111600]:
# j_95 = PHI <0(13), 0(14)>

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 1073741824]:
# j_84 = PHI <j_136(17), j_95(18)>
if (j_84 < filled_89)
  goto <bb 15>; [89.00%]
else
  goto <bb 20>; [11.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 118111600]:
_50 = (long unsigned int) i_80;
_51 = _50 * 8;
_52 = array_116(D) + _51;
_53 = *_52;
clear_commit_marks (_53, 983040);
goto <bb 22>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 955630225]:
_54 = (long unsigned int) j_85;
_55 = _54 * 8;
_56 = work_108 + _55;
_57 = *_56;
clear_commit_marks (_57, 983040);
j_134 = j_85 + 1;

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 1073741824]:
# j_85 = PHI <0(20), j_134(21)>
if (j_85 < filled_89)
  goto <bb 21>; [89.00%]
else
  goto <bb 23>; [11.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 118111600]:
free_commit_list (common_129);

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 275382602]:
i_141 = i_80 + 1;

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 309418652]:
# i_80 = PHI <0(37), i_141(24)>
if (i_80 < cnt_105(D))
  goto <bb 5>; [89.00%]
else
  goto <bb 26>; [11.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 34036052]:
_58 = (long unsigned int) cnt_105(D);
copy_array (work_108, array_116(D), _58, 8);
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 275382600]:
_59 = (sizetype) i_81;
_60 = redundant_110 + _59;
_61 = *_60;
if (_61 == 0)
  goto <bb 28>; [50.00%]
else
  goto <bb 29>; [50.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 137691300]:
_62 = (long unsigned int) i_81;
_63 = _62 * 8;
_64 = work_108 + _63;
filled_125 = filled_91 + 1;
_65 = (long unsigned int) filled_91;
_66 = _65 * 8;
_67 = array_116(D) + _66;
_68 = *_64;
*_67 = _68;

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 275382600]:
# filled_90 = PHI <filled_91(27), filled_125(28)>
i_127 = i_81 + 1;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 309418652]:
# i_81 = PHI <0(26), i_127(29)>
# filled_91 = PHI <0(26), filled_90(29)>
if (i_81 < cnt_105(D))
  goto <bb 27>; [89.00%]
else
  goto <bb 36>; [11.00%]

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 34036052]:
goto <bb 34>; [100.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 275382600]:
_69 = (sizetype) i_82;
_70 = redundant_110 + _69;
_71 = *_70;
if (_71 != 0)
  goto <bb 32>; [50.00%]
else
  goto <bb 33>; [50.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 137691300]:
_72 = (long unsigned int) i_82;
_73 = _72 * 8;
_74 = work_108 + _73;
j_122 = j_87 + 1;
_75 = (long unsigned int) j_87;
_76 = _75 * 8;
_77 = array_116(D) + _76;
_78 = *_74;
*_77 = _78;

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 275382600]:
# j_86 = PHI <j_87(31), j_122(32)>
i_124 = i_82 + 1;

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 309418652]:
# i_82 = PHI <0(36), i_124(33)>
# j_87 = PHI <filled_91(36), j_86(33)>
if (i_82 < cnt_105(D))
  goto <bb 31>; [89.00%]
else
  goto <bb 35>; [11.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [local count: 34036052]:
free (work_108);
free (redundant_110);
free (filled_index_113);
return filled_91;

=======Mapping node_fun:commit_list_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_list_4 = malloc (16);
new_list_4->item = item_5(D);
_1 = *list_p_7(D);
new_list_4->next = _1;
*list_p_7(D) = new_list_4;
return new_list_4;

=======Mapping node_fun:copy_array=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (n_4(D) != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_1 = st_mult (size_6(D), n_4(D));
_2 = (long unsigned int) _1;
memcpy (dst_8(D), src_9(D), _2);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 5 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    all ptable point : 70 [0m
[40;34m    analyzable ptable point : 64 [0m
[40;34m    used_stmt array stack totalsize of : 0.017864 mb[0m
[40;34m    collect time: : 0.010783 s [0m
[40;34m    algorithm time: 0.631710 s [0m
[40;34m    gimple stmt count : : 323 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:58 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 61%)
 phase opt and generate             :   0.32 (100%)   0.38 (100%)   0.70 (100%)  1303k ( 37%)
 callgraph functions expansion      :   0.06 ( 19%)   0.00 (  0%)   0.06 (  9%)  1032k ( 29%)
 ipa points-to                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    11k (  0%)
 df reg dead/unused notes           :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)    18k (  1%)
 tree SSA incremental               :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    27k (  1%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    60k (  2%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)  1480  (  0%)
 tree loop invariant motion         :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)  1136  (  0%)
 out of ssa                         :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   984  (  0%)
 CSE                                :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)  2328  (  0%)
 loop init                          :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)   105k (  3%)
 integrated RA                      :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   254k (  7%)
 thread pro- & epilogue             :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)    20k (  1%)
 plugin execution                   :   0.26 ( 81%)   0.38 (100%)   0.63 ( 90%)  4936  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    12k (  0%)
 rest of compilation                :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)    25k (  1%)
 TOTAL                              :   0.32          0.38          0.70         3529k
/usr/bin/ld: /tmp/ccHNhRdf.ltrans0.ltrans.o: in function `copy_array':
<artificial>:(.text+0x1e): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccHNhRdf.ltrans0.ltrans.o: in function `remove_redundant':
<artificial>:(.text+0xac): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0xdb): undefined reference to `parse_commit'
/usr/bin/ld: <artificial>:(.text+0x13a): undefined reference to `paint_down_to_common'
/usr/bin/ld: <artificial>:(.text+0x216): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x23e): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x258): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x286): undefined reference to `clear_commit_marks'
/usr/bin/ld: /tmp/ccHNhRdf.ltrans0.ltrans.o: in function `find_merge_parents':
<artificial>:(.text+0x456): undefined reference to `get_oid_hex'
/usr/bin/ld: <artificial>:(.text+0x46e): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x48d): undefined reference to `peel_to_type'
/usr/bin/ld: <artificial>:(.text+0x4ba): undefined reference to `add_merge_parent'
/usr/bin/ld: <artificial>:(.text+0x4cc): undefined reference to `lookup_commit'
/usr/bin/ld: <artificial>:(.text+0x53a): undefined reference to `oidcmp'
/usr/bin/ld: <artificial>:(.text+0x561): undefined reference to `pop_commit'
/usr/bin/ld: /tmp/ccHNhRdf.ltrans0.ltrans.o: in function `mark_redundant_parents':
<artificial>:(.text+0x608): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x618): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x67d): undefined reference to `free_commit_list'
/usr/bin/ld: /tmp/ccHNhRdf.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x6df): undefined reference to `free_commit_list'
collect2: error: ld returned 1 exit status
