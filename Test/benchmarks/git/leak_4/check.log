In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_4/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_4/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_4/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_4/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘move_array’:
./benchmarks/git/leak_4/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_4/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_4/git_leak_4.c:9:
./benchmarks/git/leak_4/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_4/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:
./benchmarks/git/leak_4/../git.h: At top level:
./benchmarks/git/leak_4/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_4/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: implicit declaration of function ‘parse_commit’ [-Wimplicit-function-declaration]
   39 |                 parse_commit(array[i]);
      |                 ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: implicit declaration of function ‘paint_down_to_common’ [-Wimplicit-function-declaration]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: assignment to ‘struct commit_list *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: implicit declaration of function ‘clear_commit_marks’ [-Wimplicit-function-declaration]
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: implicit declaration of function ‘free_commit_list’ [-Wimplicit-function-declaration]
   60 |                 free_commit_list(common);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:121:33: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_4/git_leak_4.c:126:47: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: implicit declaration of function ‘get_oid_hex’ [-Wimplicit-function-declaration]
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:23: warning: implicit declaration of function ‘parse_object’ [-Wimplicit-function-declaration]
  139 |                 obj = parse_object(&oid);
      |                       ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:21: warning: assignment to ‘struct object *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  139 |                 obj = parse_object(&oid);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:140:43: warning: implicit declaration of function ‘peel_to_type’ [-Wimplicit-function-declaration]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                                           ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:140:26: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  140 |                 parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
      |                          ^
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: implicit declaration of function ‘add_merge_parent’; did you mean ‘find_merge_parents’? [-Wimplicit-function-declaration]
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^~~~~~~~~~~~~~~~
      |                 find_merge_parents
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: implicit declaration of function ‘lookup_commit’ [-Wimplicit-function-declaration]
  146 |         head_commit = lookup_commit(head);
      |                       ^~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: assignment to ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  146 |         head_commit = lookup_commit(head);
      |                     ^
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: implicit declaration of function ‘pop_commit’ [-Wimplicit-function-declaration]
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: initialization of ‘struct commit *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: implicit declaration of function ‘oidcmp’ [-Wimplicit-function-declaration]
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: implicit declaration of function ‘commit_list_count’; did you mean ‘commit_list_insert’? [-Wimplicit-function-declaration]
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^~~~~~~~~~~~~~~~~
      |                        commit_list_insert
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.3%|          |
nothrow                          |      |      |      |      |     -2.4%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.2%|          |
ethread                          |      |      |      |      |     -0.2%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 4
=======node_fun:mark_redundant_parents=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
succs:= 3
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 10
=======node_fun:find_merge_parents=========

--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 9
succs:= 10
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 11
succs:= 12
succs:= 10
succs:= 12
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 17
succs:= 17
--------GIMPLE Cond -------
succs:= 21
succs:= 21
--------GIMPLE Cond -------
succs:= 24
--------GIMPLE Cond -------
succs:= 25
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 26
succs:= 27
succs:= 27
succs:= 26
--------GIMPLE Cond -------
succs:= 31
=======node_fun:reduce_heads=========

--------GIMPLE Cond -------
succs:= 16
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 5
succs:= 6
succs:= 25
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 31
succs:= 14
--------GIMPLE Cond -------
succs:= 17
succs:= 2
=======node_fun:remove_redundant=========

--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 7
succs:= 8
succs:= 8
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 15
succs:= 15
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 22
succs:= 6
--------GIMPLE Cond -------
succs:= 25
--------GIMPLE Cond -------
succs:= 24
succs:= 14
succs:= 27
succs:= 27
--------GIMPLE Cond -------
succs:= 30
--------GIMPLE Cond -------
succs:= 17
succs:= 31
succs:= 31
--------GIMPLE Cond -------
succs:= 34
=======node_fun:commit_list_insert=========

=======node_fun:copy_array=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
# .MEM_19 = VDEF <.MEM_17>
mark_redundant_parents (&revs, _2);
# .MEM_20 = VDEF <.MEM_19>
free_commit_list (_3);
# .MEM_21 = VDEF <.MEM_20>
find_merge_parents (&result, &in, &head);
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
# .MEM_40 = VDEF <.MEM_39>
orig_cnt_24 = commit_list_count (_2);
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
# VUSE <.MEM_110>
_4 = strlen (p_90);
# .MEM_123 = VDEF <.MEM_110>
_8 = get_oid_hex (p_90, &oid);
# .MEM_124 = VDEF <.MEM_123>
_13 = parse_object (&oid);
# .MEM_125 = VDEF <.MEM_124>
_15 = peel_to_type (0B, 0, obj_97, 1);
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
# .MEM_79 = VDEF <.MEM_72>
_26 = commit_list_insert (_25, tail_30);
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);
# .MEM_160 = VDEF <.MEM_159>
_4 = st_mult (4, _3);
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
# .MEM_168 = VDEF <.MEM_146>
_30 = paint_down_to_common (_29, filled_89, work_108);
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
# .MEM_162 = VDEF <.MEM_152>
copy_array (work_108, array_116(D), _58, 8);
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:find_merge_parents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_merge_parents  function_call count: 11 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘main’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
# VUSE <.MEM_72>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:find_merge_parents========= [0m
[40;42m =======start_check_funciton:find_merge_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>
p_90 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^
if (_59 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
Cond in fucntion find_merge_parents basic block 6
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
if (_19 < _20)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
Cond in fucntion find_merge_parents basic block 16
 ================== possible direct basic block ================= 
from find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^
if (newline_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
Cond in fucntion find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 4
 ================== possible direct basic block ================= 
from find_merge_parents basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^
if (_12 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
Cond in fucntion find_merge_parents basic block 9
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
Cond in fucntion find_merge_parents basic block 7
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>
p_90 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^
if (_59 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
Cond in fucntion find_merge_parents basic block 6
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
if (_19 < _20)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
Cond in fucntion find_merge_parents basic block 16
 ================== possible direct basic block ================= 
from find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘find_merge_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^
if (newline_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
Cond in fucntion find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 4
 ================== possible direct basic block ================= 
from find_merge_parents basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^
if (_12 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
Cond in fucntion find_merge_parents basic block 9
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
Cond in fucntion find_merge_parents basic block 7
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fec0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f87478d6e10 oid type <record_type 0x7f87478c6150 object_id>
        addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7f87478b3840 160> unit-size <integer_cst 0x7f87478b3828 20>
        align:8 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents>
        chain <var_decl 0x7f87478d6d80 parent type <pointer_type 0x7f87478c6540>
            unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:123:18 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents> chain <var_decl 0x7f87478d6cf0 obj>>>
    ./benchmarks/git/leak_4/git_leak_4.c:139:9 start: ./benchmarks/git/leak_4/git_leak_4.c:139:9 finish: ./benchmarks/git/leak_4/git_leak_4.c:139:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f8747d93fc0 type <pointer_type 0x7f8747daf000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f87478e3900
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7f87478d2c78>
parent_99 = (struct commit *) _16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3900
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7f87478d2c78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e35e8
    type <pointer_type 0x7f87478c6dc8
        type <record_type 0x7f87478c6d20 merge_parents TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6d20 fields <field_decl 0x7f87478bfab0 alloc> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6dc8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7f87478d2c00>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_117 = VDEF <.MEM_109>
result_79(D)->nr = j_58;
bb index := 32
# VUSE <.MEM_165>
return filled_91;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 32 ,possiable got to succ := 35

======================================================================
result_79(D)->nr = j_58;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_117 = VDEF <.MEM_109>
result_79(D)->nr = j_58;
bb index := 32
# VUSE <.MEM_165>
return filled_91;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 32 ,possiable got to succ := 35

======================================================================
result_79(D)->nr = j_58;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
if (_53 > i_56)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
Cond in fucntion find_merge_parents basic block 31
 ================== possible direct basic block ================= 
from find_merge_parents basic block 26
 ================== possible direct basic block ================= 
from find_merge_parents basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_40 = result_79(D)->item;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_40 = result_79(D)->item;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = _40 + _42;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = _40 + _42;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_44 = _43->used;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_44 = _43->used;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_44 != 0)
bb index := 26
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_44 != 0)
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^
if (_44 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
Cond in fucntion find_merge_parents basic block 26
 ================== possible direct basic block ================= 
from find_merge_parents basic block 27
 ================== possible direct basic block ================= 
from find_merge_parents basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
if (_38 > i_55)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
Cond in fucntion find_merge_parents basic block 24
 ================== possible direct basic block ================= 
from find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt is child function---oidcmp-----

 ================== trace ================== 
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^
if (_33 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
Cond in fucntion find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 22
 ================== possible direct basic block ================= 
from find_merge_parents basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e35e8
    type <pointer_type 0x7f87478c6dc8
        type <record_type 0x7f87478c6d20 merge_parents TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6d20 fields <field_decl 0x7f87478bfab0 alloc> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6dc8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7f87478d2c00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e3558
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7f87478d2bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
_21 = lookup_commit (head_73(D));
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt is child function---lookup_commit-----

 ================== trace ================== 
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
if (_21 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
Cond in fucntion find_merge_parents basic block 17
 ================== possible direct basic block ================= 
from find_merge_parents basic block 18
 ================== possible direct basic block ================= 
from find_merge_parents basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
_22 = (long int) _21;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
head_commit_75 = (struct commit *) _22;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
commit_list_insert (head_commit_75, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate stmt argument:head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3558
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7f87478d2bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e35a0
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7f87478d2be8>
head_commit_75 = (struct commit *) _22;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e35a0
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7f87478d2be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478dba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7f87478d2a50>
# VUSE <.MEM_103>
_23 = parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt is child function---pop_commit-----

 ================== trace ================== 
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt is child function---pop_commit-----

 ================== trace ================== 
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
if (_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
Cond in fucntion find_merge_parents basic block 25
 ================== possible direct basic block ================= 
from find_merge_parents basic block 20
 ================== possible direct basic block ================= 
from find_merge_parents basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478dba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7f87478d2a50>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_116 = VDEF <.MEM_115>
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# VUSE <.MEM_106>
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f87478e7000
    type <pointer_type 0x7f87478c65e8
        type <pointer_type 0x7f87478c3d20 type <record_type 0x7f87478c3c78 commit_list>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c65e8>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f87478d6c60 parents type <pointer_type 0x7f87478c3d20>
        addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents>
        chain <var_decl 0x7f87478d6bd0 head_commit type <pointer_type 0x7f87478c6540>
            unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:114:17 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents> chain <var_decl 0x7f87478d6b40 pos>>>
    ./benchmarks/git/leak_4/git_leak_4.c:152:25 start: ./benchmarks/git/leak_4/git_leak_4.c:152:25 finish: ./benchmarks/git/leak_4/git_leak_4.c:152:25>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478dbcf0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7f87478d2ac8>
_32 = &_31->commit;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt is child function---oidcmp-----

 ================== trace ================== 
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_42>
return marked_13;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^
if (_33 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
Cond in fucntion find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 22
 ================== possible direct basic block ================= 
from find_merge_parents basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478dbcf0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7f87478d2ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_merge_parents========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:mark_redundant_parents========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path mark_redundant_parents  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘main’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
# VUSE <.MEM_72>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre_check_funciton:mark_redundant_parents========= [0m
[40;42m =======start_check_funciton:mark_redundant_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8747d9ba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7f87478d28b8>
# VUSE <.MEM_38(D)>
_1 = commit_20(D)->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_26>
return 0;
In function ‘mark_redundant_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘mark_redundant_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
if (pn_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
Cond in fucntion mark_redundant_parents basic block 3
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 4
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_42>
return marked_13;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
_9 = marked_13 + cnt_26;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_42>
return marked_13;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
if (_9 != orig_cnt_24)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
if (_9 != orig_cnt_24)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
Cond in fucntion mark_redundant_parents basic block 10
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 11
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9ba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7f87478d28b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
# VUSE <.MEM_37>
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# VUSE <.MEM_37>
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8747d9bab0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7f87478d28d0>
# VUSE <.MEM_39>
_2 = commit_20(D)->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_42>
return marked_13;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 32

======================================================================
printf ("mark_redundant_parents %d", orig_cnt_24);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9bab0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7f87478d28d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8747d9bf30
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478d65a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7f87478d29a8>
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);

 ================== trace ptable================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---reduce_heads-----
this other function ------reduce_heads-----
 
 Start check Pointer Collect  

======================================================================
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_26>
return 0;
In function ‘mark_redundant_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘mark_redundant_parents’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
if (pn_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
Cond in fucntion mark_redundant_parents basic block 3
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 4
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_42>
return marked_13;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
_9 = marked_13 + cnt_26;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_42>
return marked_13;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
if (_9 != orig_cnt_24)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
if (_9 != orig_cnt_24)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
Cond in fucntion mark_redundant_parents basic block 10
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 11
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9bf30
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478d65a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7f87478d29a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fd00
    type <pointer_type 0x7f87478ca888
        type <array_type 0x7f87478ca7e0 type <integer_type 0x7f87478c35e8 char>
            BLK
            size <integer_cst 0x7f87478b39d8 constant 208>
            unit-size <integer_cst 0x7f87478b39c0 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f87478ca738>
            pointer_to_this <pointer_type 0x7f87478ca888>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8747d91de0 type <array_type 0x7f87478ca7e0>
        readonly constant static "mark_redundant_parents %d\000">
    ./benchmarks/git/leak_4/git_leak_4.c:197:3 start: ./benchmarks/git/leak_4/git_leak_4.c:197:3 finish: ./benchmarks/git/leak_4/git_leak_4.c:197:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:mark_redundant_parents========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2408 type <pointer_type 0x7f87478c6540> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fb60
    type <pointer_type 0x7f87478ca5e8
        type <record_type 0x7f87478ca540 rev_info BLK
            size <integer_cst 0x7f8747d93c30 constant 0>
            unit-size <integer_cst 0x7f8747d93be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478ca540 context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca5e8>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f874863bbd0 revs type <record_type 0x7f87478ca540 rev_info>
        addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:209:21 size <integer_cst 0x7f8747d93c30 0> unit-size <integer_cst 0x7f8747d93be8 0>
        align:8 warn_if_not_align:0 context <function_decl 0x7f87478c4000 main>
        chain <var_decl 0x7f874863bb40 list type <pointer_type 0x7f87478c3d20>
            addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:210:25 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478c4000 main>>>
    ./benchmarks/git/leak_4/git_leak_4.c:215:5 start: ./benchmarks/git/leak_4/git_leak_4.c:215:5 finish: ./benchmarks/git/leak_4/git_leak_4.c:215:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8747d9b678
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7f87478d28a0>
# VUSE <.MEM_19>
_3 = list;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_20 = VDEF <.MEM_19>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
  216 |     free_commit_list(list);
      |     ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9b678
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _3 = list;
    version:3
    ptr-info 0x7f87478d28a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fbc0
    type <pointer_type 0x7f87478c6dc8
        type <record_type 0x7f87478c6d20 merge_parents TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6d20 fields <field_decl 0x7f87478bfab0 alloc> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6dc8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f874863bd80 result type <record_type 0x7f87478c6d20 merge_parents>
        addressable TI ./benchmarks/git/leak_4/git_leak_4.c:206:26 size <integer_cst 0x7f8747d93c00 128> unit-size <integer_cst 0x7f8747d93c18 16>
        align:64 warn_if_not_align:0 context <function_decl 0x7f87478c4000 main>
        chain <var_decl 0x7f874863bcf0 in type <record_type 0x7f87478c6e70 strbuf>
            addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:207:19
            size <integer_cst 0x7f8747db1078 constant 192>
            unit-size <integer_cst 0x7f8747db1048 constant 24>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478c4000 main> chain <var_decl 0x7f874863bc60 head>>>
    ./benchmarks/git/leak_4/git_leak_4.c:217:5 start: ./benchmarks/git/leak_4/git_leak_4.c:217:5 finish: ./benchmarks/git/leak_4/git_leak_4.c:217:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:mark_redundant_parents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path mark_redundant_parents  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
# VUSE <.MEM_72>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre_check_funciton:mark_redundant_parents========= [0m
[40;42m =======start_check_funciton:mark_redundant_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f8747d9ba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7f87478d28b8>
# VUSE <.MEM_38(D)>
_1 = commit_20(D)->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
if (pn_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
Cond in fucntion mark_redundant_parents basic block 3
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 4
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
if (_9 != orig_cnt_24)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
Cond in fucntion mark_redundant_parents basic block 10
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 11
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9ba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _1 = commit_20(D)->parents;
    version:1
    ptr-info 0x7f87478d28b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# .MEM_42 = VDEF <.MEM_37>
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
# VUSE <.MEM_37>
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# VUSE <.MEM_37>
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
# .MEM_41 = VDEF <.MEM_40>
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: Use after free error!: free location 
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8747d9bab0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7f87478d28d0>
# VUSE <.MEM_39>
_2 = commit_20(D)->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
orig_cnt_24 = commit_list_count (_2);
./benchmarks/git/leak_4/git_leak_4.c:175:24: warning: use location
  175 |         int orig_cnt = commit_list_count(commit->parents);
      |                        ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_37>
printf ("mark_redundant_parents %d", orig_cnt_24);
bb index := 11
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 32

======================================================================
printf ("mark_redundant_parents %d", orig_cnt_24);
./benchmarks/git/leak_4/git_leak_4.c:197:17: warning: use location
  197 |                 die("mark_redundant_parents %d", orig_cnt);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9bab0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _2 = commit_20(D)->parents;
    version:2
    ptr-info 0x7f87478d28d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f8747d9bf30
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478d65a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7f87478d29a8>
# .MEM_39 = VDEF <.MEM_38(D)>
h_22 = reduce_heads (_1);

 ================== trace ptable================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :888========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :889========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :890========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---reduce_heads-----
this other function ------reduce_heads-----
 
 Start check Pointer Collect  

======================================================================
h_22 = reduce_heads (_1);
./benchmarks/git/leak_4/git_leak_4.c:170:33: warning: use location
  170 |         struct commit_list *h = reduce_heads(commit->parents);
      |                                 ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free_commit_list (h_22);
./benchmarks/git/leak_4/git_leak_4.c:199:9: warning: use location
  199 |         free_commit_list(h);
      |         ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_16 = PHI <h_22(2), pn_15(7)>
bb index := 8
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_16 = PHI <h_22(2), pn_15(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_15 = PHI <pn_31(5), pn_16(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_31 = pn_16->next;
./benchmarks/git/leak_4/git_leak_4.c:187:28: warning: use location
  187 |                         pn = pn->next;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = pn_16->item;
./benchmarks/git/leak_4/git_leak_4.c:186:41: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_16 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_16 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
  186 |                 if (pn && po->item == pn->item) {
      |                    ^
if (pn_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:20: warning: use location
Cond in fucntion mark_redundant_parents basic block 3
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 4
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
cnt_26 = commit_list_count (h_22);
./benchmarks/git/leak_4/git_leak_4.c:176:19: warning: use location
  176 |         int cnt = commit_list_count(h);
      |                   ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = marked_13 + cnt_26;
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
_9 = marked_13 + cnt_26;
./benchmarks/git/leak_4/git_leak_4.c:196:28: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 != orig_cnt_24)
bb index := 10
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 32

======================================================================
if (_9 != orig_cnt_24)
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
  196 |         if (i != cnt || cnt+marked != orig_cnt)
      |                      ^
if (_9 != orig_cnt_24)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:22: warning: use location
Cond in fucntion mark_redundant_parents basic block 10
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 11
 ================== possible direct basic block ================= 
from mark_redundant_parents basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f8747d9bf30
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478d65a0 h>
    def_stmt h_22 = reduce_heads (_1);
    version:22
    ptr-info 0x7f87478d29a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fd00
    type <pointer_type 0x7f87478ca888
        type <array_type 0x7f87478ca7e0 type <integer_type 0x7f87478c35e8 char>
            BLK
            size <integer_cst 0x7f87478b39d8 constant 208>
            unit-size <integer_cst 0x7f87478b39c0 constant 26>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f87478ca738>
            pointer_to_this <pointer_type 0x7f87478ca888>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f8747d91de0 type <array_type 0x7f87478ca7e0>
        readonly constant static "mark_redundant_parents %d\000">
    ./benchmarks/git/leak_4/git_leak_4.c:197:3 start: ./benchmarks/git/leak_4/git_leak_4.c:197:3 finish: ./benchmarks/git/leak_4/git_leak_4.c:197:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:mark_redundant_parents========= [0m
[40;44m =======node_fun:find_merge_parents========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_merge_parents  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
# VUSE <.MEM_72>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:find_merge_parents========= [0m
[40;42m =======start_check_funciton:find_merge_parents========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>
p_90 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^
if (_59 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
Cond in fucntion find_merge_parents basic block 6
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
if (_19 < _20)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
Cond in fucntion find_merge_parents basic block 16
 ================== possible direct basic block ================= 
from find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^
if (newline_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
Cond in fucntion find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 4
 ================== possible direct basic block ================= 
from find_merge_parents basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^
if (_12 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
Cond in fucntion find_merge_parents basic block 9
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
Cond in fucntion find_merge_parents basic block 7
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>
p_90 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strlen (p_90);
./benchmarks/git/leak_4/git_leak_4.c:126:47: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (int) _4;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = PHI <_93(4), _92(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_59 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                    ^
if (_59 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:20: warning: use location
Cond in fucntion find_merge_parents basic block 6
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = _6 + _59;
./benchmarks/git/leak_4/git_leak_4.c:127:28: warning: use location
  127 |                 pos += len + !!newline;
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_94 = _7 + pos_54;
./benchmarks/git/leak_4/git_leak_4.c:127:21: warning: use location
  127 |                 pos += len + !!newline;
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_11 = PHI <pos_94(13), pos_94(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_54 = PHI <0(2), pos_11(15)>
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_54 = PHI <0(2), pos_11(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (long unsigned int) pos_54;
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_19 < _20)
bb index := 16
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 16 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
if (_19 < _20)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
Cond in fucntion find_merge_parents basic block 16
 ================== possible direct basic block ================= 
from find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (sizetype) pos_54;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = (sizetype) pos_54;
./benchmarks/git/leak_4/git_leak_4.c:120:35: warning: use location
  120 |                 char *p = in->buf + pos;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_90 = _1 + _2;
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_90 = _1 + _2;
./benchmarks/git/leak_4/git_leak_4.c:120:23: warning: use location
  120 |                 char *p = in->buf + pos;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
newline_91 = strchr (p_90, 10);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_91 = strchr (p_90, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:33: warning: use location
  121 |                 char *newline = strchr(p, '\n');
      |                                 ^
this stmt is child function---strchr-----

 ================== trace ================== 
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = newline_91 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:30: warning: use location
  127 |                 pos += len + !!newline;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = newline_91 - p_90;
./benchmarks/git/leak_4/git_leak_4.c:126:41: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (int) _3;
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_91 != 0B)
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_91 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
  126 |                 len = newline ? newline - p : strlen(p);
      |                     ^
if (newline_91 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:21: warning: use location
Cond in fucntion find_merge_parents basic block 3
 ================== possible direct basic block ================= 
from find_merge_parents basic block 4
 ================== possible direct basic block ================= 
from find_merge_parents basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = MEM[(char *)p_90 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:22: warning: use location
  132 |                     p[GIT_SHA1_HEXSZ + 1] != '\t')
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_12 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                                               ^
if (_12 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:47: warning: use location
Cond in fucntion find_merge_parents basic block 9
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = MEM[(char *)p_90 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:22: warning: use location
  131 |                     p[GIT_SHA1_HEXSZ] != '\t' ||
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_8 = get_oid_hex (p_90, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:21: warning: use location
  130 |                     get_oid_hex(p, &oid) ||
      |                     ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_8 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
  129 |                 if (len < GIT_SHA1_HEXSZ + 3 ||
      |                                              ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:46: warning: use location
Cond in fucntion find_merge_parents basic block 7
 ================== possible direct basic block ================= 
from find_merge_parents basic block 10
 ================== possible direct basic block ================= 
from find_merge_parents basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3750
    type <pointer_type 0x7f87478c3888
        type <integer_type 0x7f87478c35e8 char public QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f87478b37e0 -128> max <integer_cst 0x7f87478b37c8 127>
            pointer_to_this <pointer_type 0x7f87478c3888>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f87478d6f30 p>
    def_stmt p_90 = _1 + _2;
    version:90
    ptr-info 0x7f87478d2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f8747f8fec0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f87478d6e10 oid type <record_type 0x7f87478c6150 object_id>
        addressable BLK ./benchmarks/git/leak_4/git_leak_4.c:122:20 size <integer_cst 0x7f87478b3840 160> unit-size <integer_cst 0x7f87478b3828 20>
        align:8 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents>
        chain <var_decl 0x7f87478d6d80 parent type <pointer_type 0x7f87478c6540>
            unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:123:18 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents> chain <var_decl 0x7f87478d6cf0 obj>>>
    ./benchmarks/git/leak_4/git_leak_4.c:139:9 start: ./benchmarks/git/leak_4/git_leak_4.c:139:9 finish: ./benchmarks/git/leak_4/git_leak_4.c:139:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f8747d93fc0 type <pointer_type 0x7f8747daf000> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f87478e3900
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7f87478d2c78>
parent_99 = (struct commit *) _16;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = &parent_99->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
  143 |                 commit_list_insert(parent, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_126 = VDEF <.MEM_125>
commit_list_insert (parent_99, &parents);
commit_list_insert (parent_99, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:17: warning: use location
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3900
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6d80 parent>
    def_stmt parent_99 = (struct commit *) _16;
    version:99
    ptr-info 0x7f87478d2c78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e35e8
    type <pointer_type 0x7f87478c6dc8
        type <record_type 0x7f87478c6d20 merge_parents TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6d20 fields <field_decl 0x7f87478bfab0 alloc> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6dc8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7f87478d2c00>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_117 = VDEF <.MEM_109>
result_79(D)->nr = j_58;
bb index := 32
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 32 ,possiable got to succ := 35

======================================================================
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_117 = VDEF <.MEM_109>
result_79(D)->nr = j_58;
bb index := 32
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 32 ,possiable got to succ := 35

======================================================================
result_79(D)->nr = j_58;
./benchmarks/git/leak_4/git_leak_4.c:165:20: warning: use location
  165 |         result->nr = j;
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_57 = PHI <j_58(26), j_83(29)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = (long unsigned int) j_58;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _50 * 41;
./benchmarks/git/leak_4/git_leak_4.c:161:45: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_53 = result_79(D)->nr;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:158:35: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_53 > i_56)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
if (_53 > i_56)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
Cond in fucntion find_merge_parents basic block 31
 ================== possible direct basic block ================= 
from find_merge_parents basic block 26
 ================== possible direct basic block ================= 
from find_merge_parents basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:39: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:161:57: warning: use location
  161 |                                 result->item[j] = result->item[i];
      |                                                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_40 = result_79(D)->item;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_40 = result_79(D)->item;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:159:27: warning: use location
  159 |                 if (result->item[i].used) {
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = _40 + _42;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = _40 + _42;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _40 + _42;
./benchmarks/git/leak_4/git_leak_4.c:159:33: warning: use location
  159 |                 if (result->item[i].used) {
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_44 = _43->used;
bb index := 26
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_44 = _43->used;
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = _43->used;
./benchmarks/git/leak_4/git_leak_4.c:159:36: warning: use location
  159 |                 if (result->item[i].used) {
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_44 != 0)
bb index := 26
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_44 != 0)
bb index := 26
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 26 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
  159 |                 if (result->item[i].used) {
      |                    ^
if (_44 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:159:20: warning: use location
Cond in fucntion find_merge_parents basic block 26
 ================== possible direct basic block ================= 
from find_merge_parents basic block 27
 ================== possible direct basic block ================= 
from find_merge_parents basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_38 = result_79(D)->nr;
bb index := 24
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = result_79(D)->nr;
./benchmarks/git/leak_4/git_leak_4.c:153:39: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_38 > i_55)
bb index := 24
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 24 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
if (_38 > i_55)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
Cond in fucntion find_merge_parents basic block 24
 ================== possible direct basic block ================= 
from find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:155:39: warning: use location
  155 |                                 result->item[i].used = 1;
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_105>
_28 = result_79(D)->item;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = result_79(D)->item;
./benchmarks/git/leak_4/git_leak_4.c:154:44: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 + _30;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:154:50: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = &_31->commit;
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = &_31->commit;
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt is child function---oidcmp-----

 ================== trace ================== 
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^
if (_33 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
Cond in fucntion find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 22
 ================== possible direct basic block ================= 
from find_merge_parents basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
  144 |                 add_merge_parent(result, &obj->oid, &parent->object.oid);
      |                 ^
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_127 = VDEF <.MEM_126>
add_merge_parent (result_79(D), _18, _17);
add_merge_parent (result_79(D), _18, _17);
./benchmarks/git/leak_4/git_leak_4.c:144:17: warning: use location
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e35e8
    type <pointer_type 0x7f87478c6dc8
        type <record_type 0x7f87478c6d20 merge_parents TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6d20 fields <field_decl 0x7f87478bfab0 alloc> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6dc8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8100 result>
    def_stmt GIMPLE_NOP
    version:79
    ptr-info 0x7f87478d2c00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e3558
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7f87478d2bd0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_110>
_21 = lookup_commit (head_73(D));
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
_21 = lookup_commit (head_73(D));
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^
this stmt is child function---lookup_commit-----

 ================== trace ================== 
trace fucntion name:lookup_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 != 0)
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
if (_21 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
Cond in fucntion find_merge_parents basic block 17
 ================== possible direct basic block ================= 
from find_merge_parents basic block 18
 ================== possible direct basic block ================= 
from find_merge_parents basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = (long int) _21;
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
_22 = (long int) _21;
./benchmarks/git/leak_4/git_leak_4.c:146:23: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
head_commit_75 = (struct commit *) _22;
bb index := 17
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 17 ,possiable got to succ := 35

======================================================================
head_commit_75 = (struct commit *) _22;
./benchmarks/git/leak_4/git_leak_4.c:146:21: warning: use location
  146 |         head_commit = lookup_commit(head);
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head ========= [0m
[40;36m ======= relate stmt argument:head ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e3558
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f87478d8200 head>
    def_stmt GIMPLE_NOP
    version:73
    ptr-info 0x7f87478d2bd0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478e35a0
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7f87478d2be8>
head_commit_75 = (struct commit *) _22;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
bb index := 18
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 35

======================================================================
# .MEM_114 = VDEF <.MEM_113>
commit_list_insert (head_commit_75, &parents);
commit_list_insert (head_commit_75, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:17: warning: use location
  148 |                 commit_list_insert(head_commit, &parents);
      |                 ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478e35a0
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
    var <var_decl 0x7f87478d6bd0 head_commit>
    def_stmt head_commit_75 = (struct commit *) _22;
    version:75
    ptr-info 0x7f87478d2be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478dba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7f87478d2a50>
# VUSE <.MEM_103>
_23 = parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: use location
  149 |         parents = reduce_heads(parents);
      |                   ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 4 level :0========  [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
[40;31m  find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
remove_redundant this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object remove_redundant
[40;46m =======add node_fun stack:remove_redundant========= [0m
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :1========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt is child function---pop_commit-----

 ================== trace ================== 
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
bb index := 20
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 20 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^
this stmt is child function---pop_commit-----

 ================== trace ================== 
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_106>
_39 = parents;
bb index := 25
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_39 != 0B)
bb index := 25
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 25 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
if (_39 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
Cond in fucntion find_merge_parents basic block 25
 ================== possible direct basic block ================= 
from find_merge_parents basic block 20
 ================== possible direct basic block ================= 
from find_merge_parents basic block 31
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478dba68
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
   
    def_stmt _23 = parents;
    version:23
    ptr-info 0x7f87478d2a50>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_116 = VDEF <.MEM_115>
parents = _24;
./benchmarks/git/leak_4/git_leak_4.c:149:17: warning: use location
  149 |         parents = reduce_heads(parents);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# .MEM_120 = VDEF <.MEM_106>
_25 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:39: warning: use location
  152 |                 struct commit *cmit = pop_commit(&parents);
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
# VUSE <.MEM_106>
_39 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_115 = VDEF <.MEM_103>
_24 = reduce_heads (_23);
./benchmarks/git/leak_4/git_leak_4.c:149:19: warning: Use after free error!: free location 
  149 |         parents = reduce_heads(parents);
      |                   ^
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f87478e7000
    type <pointer_type 0x7f87478c65e8
        type <pointer_type 0x7f87478c3d20 type <record_type 0x7f87478c3c78 commit_list>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c65e8>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f87478d6c60 parents type <pointer_type 0x7f87478c3d20>
        addressable unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:113:22 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents>
        chain <var_decl 0x7f87478d6bd0 head_commit type <pointer_type 0x7f87478c6540>
            unsigned DI ./benchmarks/git/leak_4/git_leak_4.c:114:17 size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f87478bde00 find_merge_parents> chain <var_decl 0x7f87478d6b40 pos>>>
    ./benchmarks/git/leak_4/git_leak_4.c:152:25 start: ./benchmarks/git/leak_4/git_leak_4.c:152:25 finish: ./benchmarks/git/leak_4/git_leak_4.c:152:25>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478dbcf0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7f87478d2ac8>
_32 = &_31->commit;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_121 = VDEF <.MEM_105>
_33 = oidcmp (_32, _27);
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = oidcmp (_32, _27);
./benchmarks/git/leak_4/git_leak_4.c:154:30: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                              ^
this stmt is child function---oidcmp-----

 ================== trace ================== 
trace fucntion name:oidcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_33 == 0)
bb index := 21
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 21 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_33 == 0)
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
  154 |                         if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
      |                            ^
if (_33 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:154:28: warning: use location
Cond in fucntion find_merge_parents basic block 21
 ================== possible direct basic block ================= 
from find_merge_parents basic block 22
 ================== possible direct basic block ================= 
from find_merge_parents basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478dbcf0
    type <pointer_type 0x7f87478ca000
        type <record_type 0x7f87478c6150 object_id BLK
            size <integer_cst 0x7f87478b3840 constant 160>
            unit-size <integer_cst 0x7f87478b3828 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6150 fields <field_decl 0x7f87478bf260 hash> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478ca000>>
        unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _32 = &_31->commit;
    version:32
    ptr-info 0x7f87478d2ac8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_merge_parents========= [0m
[40;44m =======node_fun:reduce_heads========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:remove_redundant========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘reduce_heads’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘reduce_heads’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
In function ‘remove_redundant’:
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
# .MEM_76 = VDEF <.MEM_69>
array_50 = calloc (_11, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;36m ======= node_fun:remove_redundant========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_63 = num_head_32 + 1;
./benchmarks/git/leak_4/git_leak_4.c:94:25: warning: use location
   94 |                 num_head++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478eacf0
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2750 array>
    def_stmt array_50 = calloc (_11, 8);
    version:50
    ptr-info 0x7f87478d2e58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
_11 = (long unsigned int) num_head_32;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_50 = calloc (_11, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: use location
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
this stmt is child function---remove_redundant-----

 ================== trace ================== 
trace fucntion name:remove_redundant 
[40;44m =======trace_function_path remove_redundant  function_call count: 9 level :0========  [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
[40;31m  find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
[40;31m  find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
[40;31m  find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;46m =======add node_fun stack:copy_array========= [0m
[40;44m =======trace_function_path copy_array  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) num_head_32;
./benchmarks/git/leak_4/git_leak_4.c:96:17: warning: use location
   96 |         array = xcalloc(num_head, sizeof(*array));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = array_50 + _15;
./benchmarks/git/leak_4/git_leak_4.c:99:30: warning: use location
   99 |                         array[i++] = p->item;
      |                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location
   99 |                         array[i++] = p->item;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_16 = _17;
./benchmarks/git/leak_4/git_leak_4.c:99:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = _12->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:36: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = _13 & 262144;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
   98 |                 if (p->item->object.flags & STALE) {
      |                    ^
if (_46 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:98:20: warning: use location
Cond in fucntion reduce_heads basic block 11
 ================== possible direct basic block ================= 
from reduce_heads basic block 12
 ================== possible direct basic block ================= 
from reduce_heads basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _18->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = _19 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20->object.flags = _21;
./benchmarks/git/leak_4/git_leak_4.c:100:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
  100 |                         p->item->object.flags &= ~STALE;
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = p_29->item;
./benchmarks/git/leak_4/git_leak_4.c:99:39: warning: use location
   99 |                         array[i++] = p->item;
      |                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea4c8
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _11 = (long unsigned int) num_head_32;
    version:11>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_77 = VDEF <.MEM_71>
num_head_52 = remove_redundant (array_50, num_head_32);
./benchmarks/git/leak_4/git_leak_4.c:103:20: warning: Use after free error!: free location 
  103 |         num_head = remove_redundant(array, num_head);
      |                    ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 14
if (p_29 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:97:32: warning: use location
   97 |         for (p = heads, i = 0; p; p = p->next) {
      |                                ^
	relate logic:= 0
=succs:= 9
if (p_28 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:90:39: warning: use location
   90 |         for (p = heads, num_head = 0; p; p = p->next) {
      |                                       ^
	relate logic:= 0
=succs:= 4
if (p_27 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:88:25: warning: use location
   88 |         for (p = heads; p; p = p->next)
      |                         ^
	relate logic:= 0
=succs:= 2
if (heads_47(D) == 0B)
./benchmarks/git/leak_4/git_leak_4.c:84:12: warning: use location
   84 |         if (!heads)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
  106 |         free(array);
      |         ^
num_head_31 = PHI <num_head_32(6), num_head_63(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
# VUSE <.MEM_72>
_25 = *_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = commit_list_insert (_25, tail_30);
./benchmarks/git/leak_4/git_leak_4.c:105:25: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                         ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_56 = &_26->next;
./benchmarks/git/leak_4/git_leak_4.c:105:22: warning: use location
  105 |                 tail = &commit_list_insert(array[i], tail)->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ea8b8
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _25 = *_24;
    version:25
    ptr-info 0x7f87478d2d98>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: use location
  106 |         free(array);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_72>
free (array_50);
./benchmarks/git/leak_4/git_leak_4.c:106:9: warning: Use after free error!: free location 
tail_30 = PHI <&result(15), tail_56(16)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 17
if (i_35 < num_head_52)
./benchmarks/git/leak_4/git_leak_4.c:104:23: warning: use location
  104 |         for (i = 0; i < num_head; i++)
      |                       ^
	relate logic:= 0
=succs:= 31
if (_53 > i_56)
./benchmarks/git/leak_4/git_leak_4.c:158:27: warning: use location
  158 |         for (i = j = 0; i < result->nr; i++) {
      |                           ^
	relate logic:= 0
=succs:= 25
if (_39 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:16: warning: use location
  151 |         while (parents) {
      |                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;44m =======node_fun:remove_redundant========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remove_redundant  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:copy_array========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
In function ‘remove_redundant’:
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
In function ‘remove_redundant’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
In function ‘remove_redundant’:
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
In function ‘remove_redundant’:
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:remove_redundant========= [0m
[40;42m =======start_check_funciton:remove_redundant========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
# .MEM_158 = VDEF <.MEM_157(D)>
work_108 = calloc (_1, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with work ========= [0m
[40;36m ======= relate stmt argument:work ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9000
    type <pointer_type 0x7f87478c6738
        type <pointer_type 0x7f87478c6540 type <record_type 0x7f87478c6498 commit>
            public unsigned DI
            size <integer_cst 0x7f8747d93bb8 constant 64>
            unit-size <integer_cst 0x7f8747d93bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f87478c6738>>
        public unsigned DI size <integer_cst 0x7f8747d93bb8 64> unit-size <integer_cst 0x7f8747d93bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2f30 work>
    def_stmt work_108 = calloc (_1, 8);
    version:108
    ptr-info 0x7f8747901108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
# .MEM_159 = VDEF <.MEM_158>
redundant_110 = calloc (_2, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9048
    type <pointer_type 0x7f87478c67e0
        type <integer_type 0x7f8747da8348 unsigned char public unsigned QI
            size <integer_cst 0x7f8747d93ca8 constant 8>
            unit-size <integer_cst 0x7f8747d93cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da83f0 precision:8 min <integer_cst 0x7f8747d93cd8 0> max <integer_cst 0x7f8747d93c78 255>
            pointer_to_this <pointer_type 0x7f87478c67e0>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2ea0 redundant>
    def_stmt redundant_110 = calloc (_2, 1);
    version:110
    ptr-info 0x7f8747901120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
# .MEM_161 = VDEF <.MEM_160>
filled_index_113 = malloc (_5);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9090
    type <pointer_type 0x7f8747daf9d8
        type <integer_type 0x7f8747da85e8 int public SI
            size <integer_cst 0x7f8747d93df8 constant 32>
            unit-size <integer_cst 0x7f8747d93e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da85e8 precision:32 min <integer_cst 0x7f8747d93db0 -2147483648> max <integer_cst 0x7f8747d93dc8 2147483647>
            pointer_to_this <pointer_type 0x7f8747daf9d8>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f87478e2e10 filled_index>
    def_stmt filled_index_113 = malloc (_5);
    version:113
    ptr-info 0x7f8747901138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
_1 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
work_108 = calloc (_1, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:16: warning: use location
   34 |         work = xcalloc(cnt, sizeof(*work));
      |                ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0558
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _1 = (long unsigned int) cnt_105(D);
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
_2 = (long unsigned int) cnt_105(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
redundant_110 = calloc (_2, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:21: warning: use location
   35 |         redundant = xcalloc(cnt, 1);
      |                     ^
this stmt is child function---calloc-----

 ================== trace ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f05a0
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _2 = (long unsigned int) cnt_105(D);
    version:2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d2720 type <integer_type 0x7f8747da87e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
_5 = (long unsigned int) _4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
filled_index_113 = malloc (_5);
./benchmarks/git/leak_4/git_leak_4.c:36:9: warning: use location
   36 |         ALLOC_ARRAY(filled_index, cnt - 1);
      |         ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = filled_index_113 + _45;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location
   56 |                                 redundant[filled_index[j]] = 1;
      |                                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_47 = *_46;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_48 = (sizetype) _47;
./benchmarks/git/leak_4/git_leak_4.c:56:55: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = redundant_110 + _13;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = *_14;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_15 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                    ^
if (_15 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:36: warning: use location
Cond in fucntion remove_redundant basic block 8
 ================== possible direct basic block ================= 
from remove_redundant basic block 9
 ================== possible direct basic block ================= 
from remove_redundant basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0678
    type <integer_type 0x7f8747da87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f8747db47e0>>
   
    def_stmt _5 = (long unsigned int) _4;
    version:5>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
# VUSE <.MEM_144>
_9 = *_8;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
bb index := 3
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_176 = VDEF <.MEM_144>
parse_commit (_9);
parse_commit (_9);
./benchmarks/git/leak_4/git_leak_4.c:39:17: warning: use location
   39 |                 parse_commit(array[i]);
      |                 ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0798
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _9 = *_8;
    version:9
    ptr-info 0x7f87478d2f00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
# VUSE <.MEM_146>
_29 = *_28;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = paint_down_to_common (_29, filled_89, work_108);
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                          ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = (long int) _30;
./benchmarks/git/leak_4/git_leak_4.c:51:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_129 = (struct commit_list *) _31;
./benchmarks/git/leak_4/git_leak_4.c:51:24: warning: use location
   51 |                 common = paint_down_to_common(array[i], filled, work);
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:49:36: warning: use location
   49 |                         work[filled++] = array[j];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = _22 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:29: warning: use location
   49 |                         work[filled++] = array[j];
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (long unsigned int) filled_89;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location
   48 |                         filled_index[filled] = j;
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = _16 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = filled_index_113 + _17;
./benchmarks/git/leak_4/git_leak_4.c:48:37: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = j_83;
./benchmarks/git/leak_4/git_leak_4.c:48:46: warning: use location
   48 |                         filled_index[filled] = j;
      |                                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (j_83 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                        ^
if (j_83 < cnt_105(D))

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:45:40: warning: use location
Cond in fucntion remove_redundant basic block 12
 ================== possible direct basic block ================= 
from remove_redundant basic block 7
 ================== possible direct basic block ================= 
from remove_redundant basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_140 = j_83 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:48: warning: use location
   45 |                 for (j = filled = 0; j < cnt; j++) {
      |                                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = (long unsigned int) j_83;
./benchmarks/git/leak_4/git_leak_4.c:49:47: warning: use location
   49 |                         work[filled++] = array[j];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = (sizetype) j_83;
./benchmarks/git/leak_4/git_leak_4.c:46:48: warning: use location
   46 |                         if (i == j || redundant[j])
      |                                                ^
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_70 = redundant_110 + _69;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = redundant_110 + _69;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_156>
_71 = *_70;
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = *_70;
./benchmarks/git/leak_4/git_leak_4.c:69:30: warning: use location
   69 |                 if (redundant[i])
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_71 != 0)
bb index := 31
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 31 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_71 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
   69 |                 if (redundant[i])
      |                    ^
if (_71 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:20: warning: use location
Cond in fucntion remove_redundant basic block 31
 ================== possible direct basic block ================= 
from remove_redundant basic block 32
 ================== possible direct basic block ================= 
from remove_redundant basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_60 = redundant_110 + _59;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = redundant_110 + _59;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
  201 |         return marked;
      |                ^
beacuse in succ := 12 have return or exit
# VUSE <.MEM_42>
return marked_13;
./benchmarks/git/leak_4/git_leak_4.c:201:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 12

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
  166 | }
      | ^
beacuse in succ := 32 have return or exit
# VUSE <.MEM_118>
return;
./benchmarks/git/leak_4/git_leak_4.c:166:1: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 32

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_154>
_61 = *_60;
bb index := 27
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
   74 |         return filled;
      |                ^
beacuse in succ := 35 have return or exit
# VUSE <.MEM_165>
return filled_91;
./benchmarks/git/leak_4/git_leak_4.c:74:16: warning: use location
gimple stmt in succ := 27 ,possiable got to succ := 35

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = *_60;
./benchmarks/git/leak_4/git_leak_4.c:66:31: warning: use location
   66 |                 if (!redundant[i])
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = redundant_110 + _37;
./benchmarks/git/leak_4/git_leak_4.c:53:34: warning: use location
   53 |                         redundant[i] = 1;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_38 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:38: warning: use location
   53 |                         redundant[i] = 1;
      |                                      ^
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = work_108 + _73;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location
   70 |                         array[j++] = work[i];
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_78 = *_74;
./benchmarks/git/leak_4/git_leak_4.c:70:42: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_77 = _78;
./benchmarks/git/leak_4/git_leak_4.c:70:36: warning: use location
   70 |                         array[j++] = work[i];
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = work_108 + _63;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location
   67 |                         array[filled++] = work[i];
      |                                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = *_64;
./benchmarks/git/leak_4/git_leak_4.c:67:47: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_67 = _68;
./benchmarks/git/leak_4/git_leak_4.c:67:41: warning: use location
   67 |                         array[filled++] = work[i];
      |                                         ^
copy_array (work_108, array_116(D), _58, 8);
./benchmarks/git/leak_4/git_leak_4.c:64:9: warning: use location
   64 |         COPY_ARRAY(work, array, cnt);
      |         ^
this stmt is child function---copy_array-----

 ================== trace ================== 
trace fucntion name:copy_array 
[40;44m =======trace_function_path copy_array  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:copy_array========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = work_108 + _40;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *_41;
./benchmarks/git/leak_4/git_leak_4.c:55:33: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = _42->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:44: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = _43 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_115 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
   55 |                         if (work[j]->object.flags & PARENT1)
      |                            ^
if (_115 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:28: warning: use location
Cond in fucntion remove_redundant basic block 15
 ================== possible direct basic block ================= 
from remove_redundant basic block 16
 ================== possible direct basic block ================= 
from remove_redundant basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f0d38
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _29 = *_28;
    version:29
    ptr-info 0x7f87478d2fc0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: Use after free error!: free location 
   71 |         free(work);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: Use after free error!: free location 
   72 |         free(redundant);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: Use after free error!: free location 
   73 |         free(filled_index);
      |         ^
filled_88 = PHI <filled_89(9), filled_138(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 34
if (i_82 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:68:35: warning: use location
   68 |         for (j = filled, i = 0; i < cnt; i++)
      |                                   ^
	relate logic:= 0
=succs:= 30
if (i_81 < cnt_105(D))
./benchmarks/git/leak_4/git_leak_4.c:65:32: warning: use location
   65 |         for (i = filled = 0; i < cnt; i++)
      |                                ^
	relate logic:= 0
=succs:= 24
if (_38 > i_55)
./benchmarks/git/leak_4/git_leak_4.c:153:31: warning: use location
  153 |                 for (i = 0; i < result->nr; i++)
      |                               ^
	relate logic:= 0
=succs:= 17
if (_21 != 0)
./benchmarks/git/leak_4/git_leak_4.c:147:12: warning: use location
  147 |         if (head_commit)
      |            ^
	relate logic:= 0
=succs:= 16
if (_19 < _20)
./benchmarks/git/leak_4/git_leak_4.c:118:20: warning: use location
  118 |         while (pos < in->len) {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
# VUSE <.MEM_149>
_53 = *_52;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
   57 |                 clear_commit_marks(array[i], all_flags);
      |                 ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_170 = VDEF <.MEM_149>
clear_commit_marks (_53, 983040);
clear_commit_marks (_53, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:17: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8438
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _53 = *_52;
    version:53
    ptr-info 0x7f8747901000>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
# VUSE <.MEM_150>
_57 = *_56;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
   59 |                         clear_commit_marks(work[j], all_flags);
      |                         ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_172 = VDEF <.MEM_150>
clear_commit_marks (_57, 983040);
clear_commit_marks (_57, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:25: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f8558
    type <pointer_type 0x7f87478c6540
        type <record_type 0x7f87478c6498 commit BLK
            size <integer_cst 0x7f8747db1000 constant 512>
            unit-size <integer_cst 0x7f8747e68090 constant 64>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c6498 fields <field_decl 0x7f87478bf8e8 object> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c6540>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c6738>>
   
    def_stmt _57 = *_56;
    version:57
    ptr-info 0x7f8747901030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
common_129 = (struct commit_list *) _31;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
   60 |                 free_commit_list(common);
      |                 ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_171 = VDEF <.MEM_150>
free_commit_list (common_129);
free_commit_list (common_129);
./benchmarks/git/leak_4/git_leak_4.c:60:17: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f92d0
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2000 common>
    def_stmt common_129 = (struct commit_list *) _31;
    version:129
    ptr-info 0x7f8747901168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_163 = VDEF <.MEM_156>
free (work_108);
./benchmarks/git/leak_4/git_leak_4.c:71:9: warning: use location
   71 |         free(work);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_164 = VDEF <.MEM_163>
free (redundant_110);
./benchmarks/git/leak_4/git_leak_4.c:72:9: warning: use location
   72 |         free(redundant);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_165 = VDEF <.MEM_164>
free (filled_index_113);
./benchmarks/git/leak_4/git_leak_4.c:73:9: warning: use location
   73 |         free(filled_index);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:remove_redundant========= [0m
[40;44m =======node_fun:commit_list_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:18:16: warning: use location
   18 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:17: warning: use location
   17 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
   16 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
   15 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:24: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:40: warning: use location
   14 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478f9e58
    type <pointer_type 0x7f87478c3d20
        type <record_type 0x7f87478c3c78 commit_list TI
            size <integer_cst 0x7f8747d93c00 constant 128>
            unit-size <integer_cst 0x7f8747d93c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f87478c3c78 fields <field_decl 0x7f87478bf1c8 item> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f87478c3d20>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f87478c65e8>>
    var <var_decl 0x7f87478f2750 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7f8747901198>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f87478d27c8 type <integer_type 0x7f8747da87e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;44m =======node_fun:copy_array========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path copy_array  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre_check_funciton:copy_array========= [0m
[40;42m =======start_check_funciton:copy_array========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_84>
return _36;
In function ‘copy_array’:
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
_1 = st_mult (size_6(D), n_4(D));
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = st_mult (size_6(D), n_4(D));
./benchmarks/git/leak_4/../git.h:161:34: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^
this stmt is child function---st_mult-----

 ================== trace ================== 
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long unsigned int) _1;
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_2 = (long unsigned int) _1;
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
memcpy (dst_8(D), src_9(D), _2);
bb index := 3
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
memcpy (dst_8(D), src_9(D), _2);
./benchmarks/git/leak_4/../git.h:161:17: warning: use location
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
beacuse in succ := 19 have return or exit
# VUSE <.MEM_84>
return _36;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_4(D) != 0)
bb index := 2
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
  162 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/git/leak_4/../git.h:162:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (n_4(D) != 0)
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
  160 |         if (n)
      |            ^
if (n_4(D) != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/../git.h:160:12: warning: use location
Cond in fucntion copy_array basic block 2
 ================== possible direct basic block ================= 
from copy_array basic block 3
 ================== possible direct basic block ================= 
from copy_array basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f87478ff1b0
    type <integer_type 0x7f87478bc9d8 size_t public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f8747da8738 precision:64 min <integer_cst 0x7f8747d93e88 0> max <integer_cst 0x7f8747d94500 18446744073709551615> context <translation_unit_decl 0x7f8747d9e168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <parm_decl 0x7f87478d8680 size>
    def_stmt GIMPLE_NOP
    version:6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f87478ff1f8
    type <pointer_type 0x7f8747daf000
        type <void_type 0x7f8747da8f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f8747daf000>>
        public unsigned DI
        size <integer_cst 0x7f8747d93bb8 constant 64>
        unit-size <integer_cst 0x7f8747d93bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f8747db49d8>>
    var <parm_decl 0x7f87478d8500 dst>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f87479011e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:copy_array========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 97603128]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 976138697]:
commit_list_insert (0B, &list);
i_16 = i_4 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_4 = PHI <0(2), i_16(3)>
if (i_4 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 97603128]:
_1 = list;
_2 = _1->item;
mark_redundant_parents (&revs, _2);
_3 = list;
free_commit_list (_3);
find_merge_parents (&result, &in, &head);
result ={v} {CLOBBER};
in ={v} {CLOBBER};
head ={v} {CLOBBER};
revs ={v} {CLOBBER};
list ={v} {CLOBBER};
return 0;

=======Mapping node_fun:mark_redundant_parents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
_1 = commit_20(D)->parents;
h_22 = reduce_heads (_1);
_2 = commit_20(D)->parents;
orig_cnt_24 = commit_list_count (_2);
cnt_26 = commit_list_count (h_22);
po_27 = commit_20(D)->parents;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
if (pn_16 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_3 = po_14->item;
_4 = pn_16->item;
if (_3 == _4)
  goto <bb 5>; [30.00%]
else
  goto <bb 6>; [70.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 200682346]:
pn_31 = pn_16->next;
i_32 = i_11 + 1;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 754947880]:
_5 = po_14->item;
_6 = _5->object.flags;
_7 = po_14->item;
_8 = _6 | 16;
_7->object.flags = _8;
marked_34 = marked_13 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630225]:
# i_10 = PHI <i_32(5), i_11(6)>
# marked_12 = PHI <marked_13(5), marked_34(6)>
# pn_15 = PHI <pn_31(5), pn_16(6)>
po_35 = po_14->next;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# i_11 = PHI <0(2), i_10(7)>
# marked_13 = PHI <0(2), marked_12(7)>
# po_14 = PHI <po_27(2), po_35(7)>
# pn_16 = PHI <h_22(2), pn_15(7)>
if (po_14 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
if (i_11 != cnt_26)
  goto <bb 11>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118064356]:
_9 = marked_13 + cnt_26;
if (_9 != orig_cnt_24)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 94470]:
printf ("mark_redundant_parents %d", orig_cnt_24);
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118017130]:
free_commit_list (h_22);
return marked_13;

=======Mapping node_fun:find_merge_parents=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 14598063]:
parents = 0B;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 118111600]:
_1 = in_72(D)->buf;
_2 = (sizetype) pos_54;
p_90 = _1 + _2;
newline_91 = strchr (p_90, 10);
if (newline_91 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 82678120]:
_3 = newline_91 - p_90;
_93 = (int) _3;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 35433480]:
_4 = strlen (p_90);
_92 = (int) _4;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 118111600]:
# _59 = PHI <_93(4), _92(5)>
_5 = newline_91 != 0B;
_6 = (int) _5;
_7 = _6 + _59;
pos_94 = _7 + pos_54;
if (_59 <= 42)
  goto <bb 10>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 59055800]:
_8 = get_oid_hex (p_90, &oid);
if (_8 != 0)
  goto <bb 10>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 39567386]:
_10 = MEM[(char *)p_90 + 40B];
if (_10 != 9)
  goto <bb 10>; [48.88%]
else
  goto <bb 9>; [51.12%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 20226848]:
_12 = MEM[(char *)p_90 + 41B];
if (_12 != 9)
  goto <bb 10>; [66.00%]
else
  goto <bb 11>; [34.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 111234472]:
// predicted unlikely by continue predictor.
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 6877128]:
_13 = parse_object (&oid);
_14 = (long int) _13;
obj_97 = (struct object *) _14;
_15 = peel_to_type (0B, 0, obj_97, 1);
_16 = (long int) _15;
parent_99 = (struct commit *) _16;
if (_15 == 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 3438564]:
// predicted unlikely by continue predictor.
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 3438564]:
commit_list_insert (parent_99, &parents);
_17 = &parent_99->object.oid;
_18 = &obj_97->oid;
add_merge_parent (result_79(D), _18, _17);
oid ={v} {CLOBBER};
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 114673036]:
oid ={v} {CLOBBER};

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 118111600]:
# pos_11 = PHI <pos_94(13), pos_94(14)>

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 132709663]:
# pos_54 = PHI <0(2), pos_11(15)>
_19 = (long unsigned int) pos_54;
_20 = in_72(D)->len;
if (_19 < _20)
  goto <bb 3>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 14598063]:
_21 = lookup_commit (head_73(D));
_22 = (long int) _21;
head_commit_75 = (struct commit *) _22;
if (_21 != 0)
  goto <bb 18>; [33.00%]
else
  goto <bb 19>; [67.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 4817361]:
commit_list_insert (head_commit_75, &parents);

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 14598063]:
_23 = parents;
_24 = reduce_heads (_23);
parents = _24;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 118111600]:
_25 = pop_commit (&parents);
_26 = (long int) _25;
cmit_86 = (struct commit *) _26;
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 955630225]:
_27 = &cmit_86->object.oid;
_28 = result_79(D)->item;
_29 = (long unsigned int) i_55;
_30 = _29 * 41;
_31 = _28 + _30;
_32 = &_31->commit;
_33 = oidcmp (_32, _27);
if (_33 == 0)
  goto <bb 22>; [50.00%]
else
  goto <bb 23>; [50.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 477815112]:
_34 = result_79(D)->item;
_35 = (long unsigned int) i_55;
_36 = _35 * 41;
_37 = _34 + _36;
_37->used = 1;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 955630225]:
i_89 = i_55 + 1;

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 1073741824]:
# i_55 = PHI <0(20), i_89(23)>
_38 = result_79(D)->nr;
if (_38 > i_55)
  goto <bb 21>; [89.00%]
else
  goto <bb 25>; [11.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 132709663]:
_39 = parents;
if (_39 != 0B)
  goto <bb 20>; [89.00%]
else
  goto <bb 31>; [11.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 118111600]:
_40 = result_79(D)->item;
_41 = (long unsigned int) i_56;
_42 = _41 * 41;
_43 = _40 + _42;
_44 = _43->used;
if (_44 != 0)
  goto <bb 27>; [50.00%]
else
  goto <bb 30>; [50.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 59055800]:
if (i_56 != j_58)
  goto <bb 28>; [66.00%]
else
  goto <bb 29>; [34.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 38976828]:
_45 = result_79(D)->item;
_46 = (long unsigned int) i_56;
_47 = _46 * 41;
_48 = _45 + _47;
_49 = result_79(D)->item;
_50 = (long unsigned int) j_58;
_51 = _50 * 41;
_52 = _49 + _51;
*_52 = *_48;

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 59055800]:
j_83 = j_58 + 1;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 118111600]:
# j_57 = PHI <j_58(26), j_83(29)>
i_84 = i_56 + 1;

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 132709663]:
# i_56 = PHI <0(25), i_84(30)>
# j_58 = PHI <0(25), j_57(30)>
_53 = result_79(D)->nr;
if (_53 > i_56)
  goto <bb 26>; [89.00%]
else
  goto <bb 32>; [11.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 14598063]:
result_79(D)->nr = j_58;
parents ={v} {CLOBBER};
return;

=======Mapping node_fun:reduce_heads=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 128760057]:
result = 0B;
if (heads_47(D) == 0B)
  goto <bb 19>; [8.27%]
else
  goto <bb 21>; [91.73%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = p_27->item;
_2 = _1->object.flags;
_3 = p_27->item;
_4 = _2 & 133955583;
_3->object.flags = _4;
p_66 = p_27->next;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# p_27 = PHI <heads_47(D)(21), p_66(3)>
if (p_27 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 20>; [11.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 118111600]:
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
_5 = p_28->item;
_6 = _5->object.flags;
_48 = _6 & 262144;
if (_48 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 315357973]:
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 640272253]:
_7 = p_28->item;
_8 = _7->object.flags;
_9 = p_28->item;
_10 = _8 | 262144;
_9->object.flags = _10;
num_head_63 = num_head_32 + 1;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
# num_head_31 = PHI <num_head_32(6), num_head_63(7)>
p_64 = p_28->next;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# p_28 = PHI <heads_47(D)(20), p_64(8)>
# num_head_32 = PHI <0(20), num_head_31(8)>
if (p_28 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
_11 = (long unsigned int) num_head_32;
array_50 = calloc (_11, 8);
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630225]:
_12 = p_29->item;
_13 = _12->object.flags;
_46 = _13 & 262144;
if (_46 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 477815112]:
i_58 = i_34 + 1;
_14 = (long unsigned int) i_34;
_15 = _14 * 8;
_16 = array_50 + _15;
_17 = p_29->item;
*_16 = _17;
_18 = p_29->item;
_19 = _18->object.flags;
_20 = p_29->item;
_21 = _19 & 133955583;
_20->object.flags = _21;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 955630225]:
# i_33 = PHI <i_34(11), i_58(12)>
p_61 = p_29->next;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1073741824]:
# p_29 = PHI <heads_47(D)(10), p_61(13)>
# i_34 = PHI <0(10), i_33(13)>
if (p_29 != 0B)
  goto <bb 11>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
num_head_52 = remove_redundant (array_50, num_head_32);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 955630225]:
_22 = (long unsigned int) i_35;
_23 = _22 * 8;
_24 = array_50 + _23;
_25 = *_24;
_26 = commit_list_insert (_25, tail_30);
tail_56 = &_26->next;
i_57 = i_35 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 1073741824]:
# tail_30 = PHI <&result(15), tail_56(16)>
# i_35 = PHI <0(15), i_57(16)>
if (i_35 < num_head_52)
  goto <bb 16>; [89.00%]
else
  goto <bb 18>; [11.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 118111600]:
free (array_50);
_54 = result;

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 128760057]:
# _36 = PHI <0B(2), _54(18)>
result ={v} {CLOBBER};
return _36;

=======Mapping node_fun:remove_redundant=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 34036049]:
_1 = (long unsigned int) cnt_105(D);
work_108 = calloc (_1, 8);
_2 = (long unsigned int) cnt_105(D);
redundant_110 = calloc (_2, 1);
_3 = cnt_105(D) + -1;
_4 = st_mult (4, _3);
_5 = (long unsigned int) _4;
filled_index_113 = malloc (_5);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 275382582]:
_6 = (long unsigned int) i_79;
_7 = _6 * 8;
_8 = array_116(D) + _7;
_9 = *_8;
parse_commit (_9);
i_143 = i_79 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 309418631]:
# i_79 = PHI <0(2), i_143(3)>
if (i_79 < cnt_105(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 37>; [11.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 34036049]:
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 275382600]:
_10 = (sizetype) i_80;
_11 = redundant_110 + _10;
_12 = *_11;
if (_12 != 0)
  goto <bb 6>; [57.11%]
else
  goto <bb 38>; [42.89%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 118111598]:
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 157271002]:
// predicted unlikely by continue predictor.
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630226]:
if (i_80 == j_83)
  goto <bb 9>; [20.24%]
else
  goto <bb 8>; [79.76%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 762210670]:
_13 = (sizetype) j_83;
_14 = redundant_110 + _13;
_15 = *_14;
if (_15 != 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 444949076]:
// predicted unlikely by continue predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 510681150]:
_16 = (long unsigned int) filled_89;
_17 = _16 * 4;
_18 = filled_index_113 + _17;
*_18 = j_83;
_19 = (long unsigned int) j_83;
_20 = _19 * 8;
_21 = array_116(D) + _20;
filled_138 = filled_89 + 1;
_22 = (long unsigned int) filled_89;
_23 = _22 * 8;
_24 = work_108 + _23;
_25 = *_21;
*_24 = _25;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630227]:
# filled_88 = PHI <filled_89(9), filled_138(10)>
j_140 = j_83 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# j_83 = PHI <0(38), j_140(11)>
# filled_89 = PHI <0(38), filled_88(11)>
if (j_83 < cnt_105(D))
  goto <bb 7>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 118111600]:
_26 = (long unsigned int) i_80;
_27 = _26 * 8;
_28 = array_116(D) + _27;
_29 = *_28;
_30 = paint_down_to_common (_29, filled_89, work_108);
_31 = (long int) _30;
common_129 = (struct commit_list *) _31;
_32 = (long unsigned int) i_80;
_33 = _32 * 8;
_34 = array_116(D) + _33;
_35 = *_34;
_36 = _35->object.flags;
_114 = _36 & 131072;
if (_114 != 0)
  goto <bb 14>; [50.00%]
else
  goto <bb 18>; [50.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 59055800]:
_37 = (sizetype) i_80;
_38 = redundant_110 + _37;
*_38 = 1;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 955630225]:
_39 = (long unsigned int) j_84;
_40 = _39 * 8;
_41 = work_108 + _40;
_42 = *_41;
_43 = _42->object.flags;
_115 = _43 & 65536;
if (_115 != 0)
  goto <bb 16>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 477815112]:
_44 = (long unsigned int) j_84;
_45 = _44 * 4;
_46 = filled_index_113 + _45;
_47 = *_46;
_48 = (sizetype) _47;
_49 = redundant_110 + _48;
*_49 = 1;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 955630225]:
j_136 = j_84 + 1;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 118111600]:
# j_95 = PHI <0(13), 0(14)>

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 1073741824]:
# j_84 = PHI <j_136(17), j_95(18)>
if (j_84 < filled_89)
  goto <bb 15>; [89.00%]
else
  goto <bb 20>; [11.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 118111600]:
_50 = (long unsigned int) i_80;
_51 = _50 * 8;
_52 = array_116(D) + _51;
_53 = *_52;
clear_commit_marks (_53, 983040);
goto <bb 22>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 955630225]:
_54 = (long unsigned int) j_85;
_55 = _54 * 8;
_56 = work_108 + _55;
_57 = *_56;
clear_commit_marks (_57, 983040);
j_134 = j_85 + 1;

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 1073741824]:
# j_85 = PHI <0(20), j_134(21)>
if (j_85 < filled_89)
  goto <bb 21>; [89.00%]
else
  goto <bb 23>; [11.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 118111600]:
free_commit_list (common_129);

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 275382602]:
i_141 = i_80 + 1;

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 309418652]:
# i_80 = PHI <0(37), i_141(24)>
if (i_80 < cnt_105(D))
  goto <bb 5>; [89.00%]
else
  goto <bb 26>; [11.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 34036052]:
_58 = (long unsigned int) cnt_105(D);
copy_array (work_108, array_116(D), _58, 8);
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 275382600]:
_59 = (sizetype) i_81;
_60 = redundant_110 + _59;
_61 = *_60;
if (_61 == 0)
  goto <bb 28>; [50.00%]
else
  goto <bb 29>; [50.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 137691300]:
_62 = (long unsigned int) i_81;
_63 = _62 * 8;
_64 = work_108 + _63;
filled_125 = filled_91 + 1;
_65 = (long unsigned int) filled_91;
_66 = _65 * 8;
_67 = array_116(D) + _66;
_68 = *_64;
*_67 = _68;

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 275382600]:
# filled_90 = PHI <filled_91(27), filled_125(28)>
i_127 = i_81 + 1;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 309418652]:
# i_81 = PHI <0(26), i_127(29)>
# filled_91 = PHI <0(26), filled_90(29)>
if (i_81 < cnt_105(D))
  goto <bb 27>; [89.00%]
else
  goto <bb 36>; [11.00%]

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 34036052]:
goto <bb 34>; [100.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 275382600]:
_69 = (sizetype) i_82;
_70 = redundant_110 + _69;
_71 = *_70;
if (_71 != 0)
  goto <bb 32>; [50.00%]
else
  goto <bb 33>; [50.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 137691300]:
_72 = (long unsigned int) i_82;
_73 = _72 * 8;
_74 = work_108 + _73;
j_122 = j_87 + 1;
_75 = (long unsigned int) j_87;
_76 = _75 * 8;
_77 = array_116(D) + _76;
_78 = *_74;
*_77 = _78;

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 275382600]:
# j_86 = PHI <j_87(31), j_122(32)>
i_124 = i_82 + 1;

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 309418652]:
# i_82 = PHI <0(36), i_124(33)>
# j_87 = PHI <filled_91(36), j_86(33)>
if (i_82 < cnt_105(D))
  goto <bb 31>; [89.00%]
else
  goto <bb 35>; [11.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [local count: 34036052]:
free (work_108);
free (redundant_110);
free (filled_index_113);
return filled_91;

=======Mapping node_fun:commit_list_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_list_4 = malloc (16);
new_list_4->item = item_5(D);
_1 = *list_p_7(D);
new_list_4->next = _1;
*list_p_7(D) = new_list_4;
return new_list_4;

=======Mapping node_fun:copy_array=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (n_4(D) != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
_1 = st_mult (size_6(D), n_4(D));
_2 = (long unsigned int) _1;
memcpy (dst_8(D), src_9(D), _2);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 5 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    find Entry point : 27 [0m
[40;34m    used_stmt array stack totalsize of : 0.009480 mb[0m
[40;34m    collect time: : 0.000692 s [0m
[40;34m    algorithm time: 0.392373 s [0m
[40;34m    gimple stmt count : : 323 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +4.5%|     -0.0%|
cplxlower                        |      |    +1|      |      |     +4.3%|     -0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -3.1%|     -1.6%|
copyprop                         |      |    +3|      |      |     -3.2%|     -1.7%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |     -4.7%|    -15.2%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon                          |      |      |      |      |     +0.1%|     +0.3%|
copyprop                         |      |      |      |      |     +0.1%|     +0.3%|
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -0.1%|     -2.7%|
lim                              |      |      |      |      |     -0.1%|     -2.8%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |     +4.9%|    +18.8%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.0%|     -0.1%|
strlen                           |      |      |      |      |     -1.0%|     -0.1%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.3%|     -0.0%|
phiopt                           |      |      |      |      |     -0.3%|     -0.0%|
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +76.3%|    +63.8%|
into_cfglayout                   |      |      |      |      |     -0.8%|     -0.2%|
jump                             |      |      |      |      |     -1.0%|     -0.4%|
subreg1                          |      |      |      |      |     -0.2%|     -0.2%|
dfinit               ------------|      |      |      |      |          |          |
cse1                             |      |      |      |      |     -0.0%|          |
fwprop1                          |      |      |      |      |     -1.9%|     -2.3%|
ce1                              |      |      |      |      |     -1.9%|     -2.4%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |     +0.1%|     -0.4%|
loop2_done                       |      |      |      |      |     +0.1%|     -0.4%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.2%|     -0.0%|
init-regs                        |      |      |      |      |     -0.2%|     -0.0%|
combine                          |      |      |      |      |     -0.3%|     -1.4%|
ce2                              |      |      |      |      |     -0.3%|     -1.4%|
outof_cfglayout                  |      |      |      |      |     +0.9%|     +0.2%|
split1                           |      |      |      |      |     +0.9%|     +0.2%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.1%|     +0.0%|
reload                           |      |      |      |      |     -3.5%|     -3.2%|
postreload                       |      |      |      |      |     -3.5%|     -3.3%|
split2                           |      |      |      |      |     -0.1%|     -0.0%|
cmpelim                          |      |      |      |      |     -0.1%|     -0.0%|
pro_and_epilogue                 |      |      |      |      |     +6.2%|     +3.5%|
dse2                             |      |      |      |      |     +5.9%|     +3.3%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.1%|     -0.0%|
rtl_dce                          |      |      |      |      |     -0.1%|     -0.2%|
bbro                             |      |      |      |      |     +0.9%|     +0.4%|
split4                           |      |      |      |      |     +0.9%|     +0.6%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccAmCKok.ltrans0.ltrans.o: in function `copy_array':
<artificial>:(.text+0x1e): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccAmCKok.ltrans0.ltrans.o: in function `remove_redundant':
<artificial>:(.text+0xac): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0xdb): undefined reference to `parse_commit'
/usr/bin/ld: <artificial>:(.text+0x13a): undefined reference to `paint_down_to_common'
/usr/bin/ld: <artificial>:(.text+0x216): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x23e): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x258): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x286): undefined reference to `clear_commit_marks'
/usr/bin/ld: /tmp/ccAmCKok.ltrans0.ltrans.o: in function `find_merge_parents':
<artificial>:(.text+0x456): undefined reference to `get_oid_hex'
/usr/bin/ld: <artificial>:(.text+0x46e): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x48d): undefined reference to `peel_to_type'
/usr/bin/ld: <artificial>:(.text+0x4ba): undefined reference to `add_merge_parent'
/usr/bin/ld: <artificial>:(.text+0x4cc): undefined reference to `lookup_commit'
/usr/bin/ld: <artificial>:(.text+0x53a): undefined reference to `oidcmp'
/usr/bin/ld: <artificial>:(.text+0x561): undefined reference to `pop_commit'
/usr/bin/ld: /tmp/ccAmCKok.ltrans0.ltrans.o: in function `mark_redundant_parents':
<artificial>:(.text+0x608): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x618): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x67d): undefined reference to `free_commit_list'
/usr/bin/ld: /tmp/ccAmCKok.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x6df): undefined reference to `free_commit_list'
collect2: error: ld returned 1 exit status
