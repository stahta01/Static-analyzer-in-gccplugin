In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:0:
./benchmarks/git/leak_4/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_4/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/leak_4/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/leak_4/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_4/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/leak_4/../git.h: In function ‘move_array’:
./benchmarks/git/leak_4/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/leak_4/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/leak_4/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_4/git_leak_4.c:9:0:
./benchmarks/git/leak_4/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_4/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_4/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/leak_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_4/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/leak_4/git_leak_4.c:10:0:
./benchmarks/git/leak_4/../git.h: At top level:
./benchmarks/git/leak_4/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/leak_4/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_4/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_4/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_4/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_4/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘remove_redundant’:
./benchmarks/git/leak_4/git_leak_4.c:39:3: warning: implicit declaration of function ‘parse_commit’; did you mean ‘parse_timestamp’? [-Wimplicit-function-declaration]
   parse_commit(array[i]);
   ^~~~~~~~~~~~
   parse_timestamp
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: implicit declaration of function ‘paint_down_to_common’ [-Wimplicit-function-declaration]
   common = paint_down_to_common(array[i], filled, work);
            ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   common = paint_down_to_common(array[i], filled, work);
          ^
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: implicit declaration of function ‘clear_commit_marks’ [-Wimplicit-function-declaration]
   clear_commit_marks(array[i], all_flags);
   ^~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: implicit declaration of function ‘free_commit_list’ [-Wimplicit-function-declaration]
   free_commit_list(common);
   ^~~~~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘find_merge_parents’:
./benchmarks/git/leak_4/git_leak_4.c:121:19: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
   char *newline = strchr(p, '\n');
                   ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:121:19: warning: incompatible implicit declaration of built-in function ‘strchr’
./benchmarks/git/leak_4/git_leak_4.c:121:19: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/leak_4/git_leak_4.c:126:33: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   len = newline ? newline - p : strlen(p);
                                 ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c:126:33: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:126:33: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/leak_4/git_leak_4.c:130:7: warning: implicit declaration of function ‘get_oid_hex’ [-Wimplicit-function-declaration]
       get_oid_hex(p, &oid) ||
       ^~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:139:9: warning: implicit declaration of function ‘parse_object’; did you mean ‘pselect’? [-Wimplicit-function-declaration]
   obj = parse_object(&oid);
         ^~~~~~~~~~~~
         pselect
./benchmarks/git/leak_4/git_leak_4.c:139:7: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   obj = parse_object(&oid);
       ^
./benchmarks/git/leak_4/git_leak_4.c:140:29: warning: implicit declaration of function ‘peel_to_type’ [-Wimplicit-function-declaration]
   parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
                             ^~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:140:12: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   parent = (struct commit *)peel_to_type(NULL, 0, obj, OBJ_COMMIT);
            ^
./benchmarks/git/leak_4/git_leak_4.c:144:3: warning: implicit declaration of function ‘add_merge_parent’; did you mean ‘find_merge_parents’? [-Wimplicit-function-declaration]
   add_merge_parent(result, &obj->oid, &parent->object.oid);
   ^~~~~~~~~~~~~~~~
   find_merge_parents
./benchmarks/git/leak_4/git_leak_4.c:146:16: warning: implicit declaration of function ‘lookup_commit’ [-Wimplicit-function-declaration]
  head_commit = lookup_commit(head);
                ^~~~~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:146:14: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  head_commit = lookup_commit(head);
              ^
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: implicit declaration of function ‘pop_commit’ [-Wimplicit-function-declaration]
   struct commit *cmit = pop_commit(&parents);
                         ^~~~~~~~~~
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
./benchmarks/git/leak_4/git_leak_4.c:154:9: warning: implicit declaration of function ‘oidcmp’ [-Wimplicit-function-declaration]
    if (!oidcmp(&result->item[i].commit, &cmit->object.oid))
         ^~~~~~
./benchmarks/git/leak_4/git_leak_4.c: In function ‘mark_redundant_parents’:
./benchmarks/git/leak_4/git_leak_4.c:175:17: warning: implicit declaration of function ‘commit_list_count’; did you mean ‘commit_list_insert’? [-Wimplicit-function-declaration]
  int orig_cnt = commit_list_count(commit->parents);
                 ^~~~~~~~~~~~~~~~~
                 commit_list_insert
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 5
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 17
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 18
--------GIMPLE Cond -------
succs:= 18
succs:= 20
succs:= 21
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 21
succs:= 22
succs:= 22
succs:= 23
succs:= 23
--------GIMPLE Cond -------
succs:= 26
--------GIMPLE Cond -------
succs:= 27
succs:= 27
--------GIMPLE Cond -------
succs:= 30
succs:= 30
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
succs:= 36
succs:= 20
--------GIMPLE Cond -------
succs:= 39
--------GIMPLE Cond -------
succs:= 40
succs:= 40
--------GIMPLE Cond -------
succs:= 42
succs:= 42
--------GIMPLE Cond -------
succs:= 45
--------GIMPLE Cond -------
succs:= 47
succs:= 47
--------GIMPLE Cond -------
succs:= 50
--------GIMPLE Cond -------
succs:= 53
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 39
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 26
succs:= 6
succs:= 7
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 12
--------GIMPLE Cond -------
succs:= 12
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 20
--------GIMPLE Cond -------
succs:= 21
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 19
succs:= 20
succs:= 21
succs:= 22
succs:= 22
succs:= 23
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 24
succs:= 36
succs:= 24
succs:= 25
succs:= 23
succs:= 25
--------GIMPLE Cond -------
succs:= 29
--------GIMPLE Cond -------
succs:= 30
succs:= 30
--------GIMPLE Cond -------
succs:= 45
succs:= 34
succs:= 34
--------GIMPLE Cond -------
succs:= 37
--------GIMPLE Cond -------
succs:= 38
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 39
succs:= 50
succs:= 40
succs:= 40
succs:= 39
--------GIMPLE Cond -------
succs:= 44
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_12 = VDEF <.MEM_11(D)>
new_list_4 = malloc (16);
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
# .MEM_224 = VDEF <.MEM_223>
_95 = st_mult (4, _94);
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
# .MEM_234 = VDEF <.MEM_211>
_130 = paint_down_to_common (_129, filled_112, work_91);
# .MEM_236 = VDEF <.MEM_214>
clear_commit_marks (_162, 983040);
# .MEM_238 = VDEF <.MEM_215>
clear_commit_marks (_167, 983040);
# .MEM_237 = VDEF <.MEM_215>
free_commit_list (common_132);
# .MEM_226 = VDEF <.MEM_217>
_207 = st_mult (8, _170);
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
# .MEM_27 = VDEF <.MEM_17>
commit_list_insert (0B, &list);
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
# .MEM_140 = VDEF <.MEM_139>
orig_cnt_103 = commit_list_count (_102);
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
# .MEM_162 = VDEF <.MEM_127>
_121 = __printf_chk (1, "mark_redundant_parents %d", orig_cnt_103);
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
# VUSE <.MEM_131>
newline_32 = strchr (p_31, 10);
# VUSE <.MEM_131>
_37 = strlen (p_31);
# .MEM_155 = VDEF <.MEM_131>
_44 = get_oid_hex (p_31, &oid);
# .MEM_156 = VDEF <.MEM_155>
_47 = parse_object (&oid);
# .MEM_157 = VDEF <.MEM_156>
_50 = peel_to_type (0B, 0, obj_49, 1);
# .MEM_158 = VDEF <.MEM_157>
commit_list_insert (parent_52, &parents);
# .MEM_159 = VDEF <.MEM_158>
add_merge_parent (&result, _54, _53);
# .MEM_145 = VDEF <.MEM_131>
_57 = lookup_commit (&head);
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
# .MEM_152 = VDEF <.MEM_135>
_62 = pop_commit (&parents);
# .MEM_153 = VDEF <.MEM_134>
_72 = oidcmp (_71, _65);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:commit_list_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
# .MEM_12 = VDEF <.MEM_11(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘commit_list_insert’:
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
  return new_list;
         ^
_10 = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:10: warning: use location
  *list_p = new_list;
          ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
  new_list->next = *list_p;
                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
  new_list->item = item;
                 ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76de0 type <integer_type 0x7f042045d7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;44m =======node_fun:reduce_heads========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
# .MEM_12 = VDEF <.MEM_11(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘reduce_heads’:
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
  return new_list;
         ^
_10 = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:10: warning: use location
  *list_p = new_list;
          ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
  new_list->next = *list_p;
                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
  new_list->item = item;
                 ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76de0 type <integer_type 0x7f042045d7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================
array_55 = calloc (_13, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:8: warning: use location
  array = xcalloc(num_head, sizeof(*array));
        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_55 + _160;
./benchmarks/git/leak_4/git_leak_4.c:57:27: warning: use location
   clear_commit_marks(array[i], all_flags);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = *_161;
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = array_55 + _134;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location
   if (array[i]->object.flags & PARENT2)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *_135;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _136->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:23: warning: use location
   if (array[i]->object.flags & PARENT2)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = _137 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_139 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
   if (array[i]->object.flags & PARENT2)
      ^
if (_139 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
Cond in fucntion reduce_heads basic block 27
 ================== possible direct basic block ================= 
from reduce_heads basic block 28
 ================== possible direct basic block ================= 
from reduce_heads basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_4/git_leak_4.c:52:30: warning: use location
   if (array[i]->object.flags & PARENT2)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = array_55 + _127;
./benchmarks/git/leak_4/git_leak_4.c:51:38: warning: use location
   common = paint_down_to_common(array[i], filled, work);
                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = *_128;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = array_55 + _117;
./benchmarks/git/leak_4/git_leak_4.c:49:26: warning: use location
    work[filled++] = array[j];
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
bb index := 54
# VUSE <.MEM_89>
return _41;
lto1: warning: use location
beacuse in succ := 55 have return or exit
gimple stmt in succ := 54 ,possiable got to succ := 55

======================================================================
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_55 + _20;
./benchmarks/git/leak_4/git_leak_4.c:99:9: warning: use location
    array[i++] = p->item;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location
    array[i++] = p->item;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_14 = p_34->item;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:98:8: warning: use location
   if (p->item->object.flags & STALE) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_15 = _14->object.flags;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _14->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   if (p->item->object.flags & STALE) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_51 = _15 & 262144;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _15 & 262144;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = (unsigned int) _51;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) _51;
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location
   if (p->item->object.flags & STALE) {
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (unsigned int) _15;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (unsigned int) _15;
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
    p->item->object.flags &= ~STALE;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _24 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25->object.flags = _26;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:99:18: warning: use location
    array[i++] = p->item;
                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
work_91 = calloc (_90, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:7: warning: use location
  work = xcalloc(cnt, sizeof(*work));
       ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
redundant_93 = calloc (_92, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:12: warning: use location
  redundant = xcalloc(cnt, 1);
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = filled_index_97 + _153;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location
     redundant[filled_index[j]] = 1;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = *_154;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (sizetype) _155;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_111 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
    if (i == j || redundant[j])
               ^
if (_111 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
Cond in fucntion reduce_heads basic block 22
 ================== possible direct basic block ================= 
from reduce_heads basic block 23
 ================== possible direct basic block ================= 
from reduce_heads basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
filled_index_97 = malloc (_96);
./benchmarks/git/leak_4/git_leak_4.c:36:2: warning: use location
  ALLOC_ARRAY(filled_index, cnt - 1);
  ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
_13 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================
array_55 = calloc (_13, 8);
./benchmarks/git/leak_4/git_leak_4.c:96:8: warning: use location
  array = xcalloc(num_head, sizeof(*array));
        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_55 + _160;
./benchmarks/git/leak_4/git_leak_4.c:57:27: warning: use location
   clear_commit_marks(array[i], all_flags);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = *_161;
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = array_55 + _134;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location
   if (array[i]->object.flags & PARENT2)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *_135;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _136->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:23: warning: use location
   if (array[i]->object.flags & PARENT2)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = _137 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_139 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
   if (array[i]->object.flags & PARENT2)
      ^
if (_139 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
Cond in fucntion reduce_heads basic block 27
 ================== possible direct basic block ================= 
from reduce_heads basic block 28
 ================== possible direct basic block ================= 
from reduce_heads basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_4/git_leak_4.c:52:30: warning: use location
   if (array[i]->object.flags & PARENT2)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = array_55 + _127;
./benchmarks/git/leak_4/git_leak_4.c:51:38: warning: use location
   common = paint_down_to_common(array[i], filled, work);
                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = *_128;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = array_55 + _117;
./benchmarks/git/leak_4/git_leak_4.c:49:26: warning: use location
    work[filled++] = array[j];
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
bb index := 54
# VUSE <.MEM_89>
return _41;
lto1: warning: use location
beacuse in succ := 55 have return or exit
gimple stmt in succ := 54 ,possiable got to succ := 55

======================================================================
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_55 + _20;
./benchmarks/git/leak_4/git_leak_4.c:99:9: warning: use location
    array[i++] = p->item;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location
    array[i++] = p->item;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_14 = p_34->item;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:98:8: warning: use location
   if (p->item->object.flags & STALE) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_15 = _14->object.flags;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _14->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   if (p->item->object.flags & STALE) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_51 = _15 & 262144;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _15 & 262144;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = (unsigned int) _51;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) _51;
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location
   if (p->item->object.flags & STALE) {
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (unsigned int) _15;
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (unsigned int) _15;
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
    p->item->object.flags &= ~STALE;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _24 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25->object.flags = _26;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:99:18: warning: use location
    array[i++] = p->item;
                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
_90 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
work_91 = calloc (_90, 8);
./benchmarks/git/leak_4/git_leak_4.c:34:7: warning: use location
  work = xcalloc(cnt, sizeof(*work));
       ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
_92 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
redundant_93 = calloc (_92, 1);
./benchmarks/git/leak_4/git_leak_4.c:35:12: warning: use location
  redundant = xcalloc(cnt, 1);
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76f00 type <integer_type 0x7f042045d7e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
_96 = (long unsigned int) _95;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
filled_index_97 = malloc (_96);
./benchmarks/git/leak_4/git_leak_4.c:36:2: warning: use location
  ALLOC_ARRAY(filled_index, cnt - 1);
  ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = filled_index_97 + _153;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location
     redundant[filled_index[j]] = 1;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = *_154;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (sizetype) _155;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_111 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
    if (i == j || redundant[j])
               ^
if (_111 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
Cond in fucntion reduce_heads basic block 22
 ================== possible direct basic block ================= 
from reduce_heads basic block 23
 ================== possible direct basic block ================= 
from reduce_heads basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
# VUSE <.MEM_209>
_102 = *_101;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
parse_commit (_102);
./benchmarks/git/leak_4/git_leak_4.c:39:3: warning: use location
   parse_commit(array[i]);
   ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
parse_commit (_102);
./benchmarks/git/leak_4/git_leak_4.c:39:3: warning: use location
this stmt is child function---parse_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
# VUSE <.MEM_211>
_129 = *_128;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
# VUSE <.MEM_214>
_162 = *_161;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_236 = VDEF <.MEM_214>
clear_commit_marks (_162, 983040);
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_236 = VDEF <.MEM_214>
clear_commit_marks (_162, 983040);
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
# VUSE <.MEM_215>
_167 = *_166;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_238 = VDEF <.MEM_215>
clear_commit_marks (_167, 983040);
clear_commit_marks (_167, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:4: warning: use location
    clear_commit_marks(work[j], all_flags);
    ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_238 = VDEF <.MEM_215>
clear_commit_marks (_167, 983040);
clear_commit_marks (_167, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:4: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
common_132 = (struct commit_list *) _131;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_237 = VDEF <.MEM_215>
free_commit_list (common_132);
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_237 = VDEF <.MEM_215>
free_commit_list (common_132);
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76e88 type <integer_type 0x7f042045d7e0 long unsigned int> constant 8>

dot graph START

======================================================================
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
# VUSE <.MEM_77>
_30 = *_29;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:oidcmp========= [0m
[40;33m =======POP node_fun stack:oidcmp========= [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre add _ fucntion:reduce_heads========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path reduce_heads  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
# .MEM_12 = VDEF <.MEM_11(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
  return new_list;
         ^
_10 = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:10: warning: use location
  *list_p = new_list;
          ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
  new_list->next = *list_p;
                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
  new_list->item = item;
                 ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76de0 type <integer_type 0x7f042045d7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;33m =======POP node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;33m =======POP node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;33m =======POP node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre_check_funciton:reduce_heads========= [0m
[40;42m =======start_check_funciton:reduce_heads========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================
array_55 = calloc (_13, 8);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:96:8: warning: use location
  array = xcalloc(num_head, sizeof(*array));
        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_55 + _160;
./benchmarks/git/leak_4/git_leak_4.c:57:27: warning: use location
   clear_commit_marks(array[i], all_flags);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = *_161;
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = array_55 + _134;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location
   if (array[i]->object.flags & PARENT2)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *_135;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _136->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:23: warning: use location
   if (array[i]->object.flags & PARENT2)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = _137 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_139 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
   if (array[i]->object.flags & PARENT2)
      ^
if (_139 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
Cond in fucntion reduce_heads basic block 27
 ================== possible direct basic block ================= 
from reduce_heads basic block 28
 ================== possible direct basic block ================= 
from reduce_heads basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_4/git_leak_4.c:52:30: warning: use location
   if (array[i]->object.flags & PARENT2)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = array_55 + _127;
./benchmarks/git/leak_4/git_leak_4.c:51:38: warning: use location
   common = paint_down_to_common(array[i], filled, work);
                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = *_128;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = array_55 + _117;
./benchmarks/git/leak_4/git_leak_4.c:49:26: warning: use location
    work[filled++] = array[j];
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
bb index := 54
# VUSE <.MEM_89>
return _41;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 55 have return or exit
gimple stmt in succ := 54 ,possiable got to succ := 55

======================================================================
free (array_55);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_55 + _20;
./benchmarks/git/leak_4/git_leak_4.c:99:9: warning: use location
    array[i++] = p->item;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location
    array[i++] = p->item;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_14 = p_34->item;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = p_34->item;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:8: warning: use location
   if (p->item->object.flags & STALE) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_15 = _14->object.flags;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _14->object.flags;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   if (p->item->object.flags & STALE) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_51 = _15 & 262144;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _15 & 262144;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = (unsigned int) _51;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) _51;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location
   if (p->item->object.flags & STALE) {
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (unsigned int) _15;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (unsigned int) _15;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
    p->item->object.flags &= ~STALE;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _24 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25->object.flags = _26;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:99:18: warning: use location
    array[i++] = p->item;
                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff947e0
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f04211dfd80 array>
    def_stmt array_55 = calloc (_13, 8);
    version 55
    ptr-info 0x7f041ffb5528>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
work_91 = calloc (_90, 8);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:34:7: warning: use location
  work = xcalloc(cnt, sizeof(*work));
       ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9db88
    type <pointer_type 0x7f041ff7c690
        type <pointer_type 0x7f041ff7c150 type <record_type 0x7f041ff7c1f8 commit>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c690>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93ea0 work>
    def_stmt work_91 = calloc (_90, 8);
    version 91
    ptr-info 0x7f041ffb55b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
redundant_93 = calloc (_92, 1);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:35:12: warning: use location
  redundant = xcalloc(cnt, 1);
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dc18
    type <pointer_type 0x7f041ff80d20
        type <integer_type 0x7f042045d348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f0420449d08 0> max <integer_cst 0x7f0420449ca8 255>
            pointer_to_this <pointer_type 0x7f041ff80d20>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ff93f30 redundant>
    def_stmt redundant_93 = calloc (_92, 1);
    version 93
    ptr-info 0x7f041ffb55d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (filled_index_97);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = filled_index_97 + _153;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location
     redundant[filled_index[j]] = 1;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = *_154;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (sizetype) _155;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_111 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
    if (i == j || redundant[j])
               ^
if (_111 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
Cond in fucntion reduce_heads basic block 22
 ================== possible direct basic block ================= 
from reduce_heads basic block 23
 ================== possible direct basic block ================= 
from reduce_heads basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
filled_index_97 = malloc (_96);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:36:2: warning: use location
  ALLOC_ARRAY(filled_index, cnt - 1);
  ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dd38
    type <pointer_type 0x7f0420464a80
        type <integer_type 0x7f042045d5e8 int public SI
            size <integer_cst 0x7f0420449e28 constant 32>
            unit size <integer_cst 0x7f0420449e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f042045d5e8 precision 32 min <integer_cst 0x7f0420449de0 -2147483648> max <integer_cst 0x7f0420449df8 2147483647>
            pointer_to_this <pointer_type 0x7f0420464a80>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f041ffa6000 filled_index>
    def_stmt filled_index_97 = malloc (_96);
    version 97
    ptr-info 0x7f041ffb55e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
_13 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_74>
array_55 = calloc (_13, 8);
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================
array_55 = calloc (_13, 8);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:96:8: warning: use location
  array = xcalloc(num_head, sizeof(*array));
        ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_55 + _160;
./benchmarks/git/leak_4/git_leak_4.c:57:27: warning: use location
   clear_commit_marks(array[i], all_flags);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = *_161;
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = array_55 + _134;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location
   if (array[i]->object.flags & PARENT2)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_136 = *_135;
./benchmarks/git/leak_4/git_leak_4.c:52:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _136->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:52:23: warning: use location
   if (array[i]->object.flags & PARENT2)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_139 = _137 & 131072;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_139 != 0)
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
   if (array[i]->object.flags & PARENT2)
      ^
if (_139 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:52:6: warning: use location
Cond in fucntion reduce_heads basic block 27
 ================== possible direct basic block ================= 
from reduce_heads basic block 28
 ================== possible direct basic block ================= 
from reduce_heads basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_4/git_leak_4.c:52:30: warning: use location
   if (array[i]->object.flags & PARENT2)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_128 = array_55 + _127;
./benchmarks/git/leak_4/git_leak_4.c:51:38: warning: use location
   common = paint_down_to_common(array[i], filled, work);
                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_129 = *_128;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = array_55 + _117;
./benchmarks/git/leak_4/git_leak_4.c:49:26: warning: use location
    work[filled++] = array[j];
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
bb index := 54
# VUSE <.MEM_89>
return _41;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 55 have return or exit
gimple stmt in succ := 54 ,possiable got to succ := 55

======================================================================
free (array_55);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = array_55 + _20;
./benchmarks/git/leak_4/git_leak_4.c:99:9: warning: use location
    array[i++] = p->item;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location
    array[i++] = p->item;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_21 = _22;
./benchmarks/git/leak_4/git_leak_4.c:99:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_14 = p_34->item;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = p_34->item;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:8: warning: use location
   if (p->item->object.flags & STALE) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
_15 = _14->object.flags;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _14->object.flags;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:22: warning: use location
   if (p->item->object.flags & STALE) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_51 = _15 & 262144;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = _15 & 262144;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_17 = (unsigned int) _51;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) _51;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location
   if (p->item->object.flags & STALE) {
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = (unsigned int) _15;
bb index := 11
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = (unsigned int) _15;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:98:29: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location
    p->item->object.flags &= ~STALE;
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = _24 & 133955583;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25->object.flags = _26;
./benchmarks/git/leak_4/git_leak_4.c:100:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:100:5: warning: use location
    p->item->object.flags &= ~STALE;
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = p_34->item;
./benchmarks/git/leak_4/git_leak_4.c:99:18: warning: use location
    array[i++] = p->item;
                  ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451f30
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _13 = (long unsigned int) num_head_37;
    version 13>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
_90 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_222 = VDEF <.MEM_76>
work_91 = calloc (_90, 8);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
work_91 = calloc (_90, 8);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:34:7: warning: use location
  work = xcalloc(cnt, sizeof(*work));
       ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451798
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _90 = (long unsigned int) num_head_37;
    version 90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
_92 = (long unsigned int) num_head_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_223 = VDEF <.MEM_222>
redundant_93 = calloc (_92, 1);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
redundant_93 = calloc (_92, 1);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:35:12: warning: use location
  redundant = xcalloc(cnt, 1);
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dbd0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _92 = (long unsigned int) num_head_37;
    version 92>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76f00 type <integer_type 0x7f042045d7e0 long unsigned int> constant 4>

dot graph START

======================================================================
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
_96 = (long unsigned int) _95;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_225 = VDEF <.MEM_224>
filled_index_97 = malloc (_96);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
filled_index_97 = malloc (_96);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:36:2: warning: use location
  ALLOC_ARRAY(filled_index, cnt - 1);
  ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (filled_index_97);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = filled_index_97 + _153;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location
     redundant[filled_index[j]] = 1;
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = *_154;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = (sizetype) _155;
./benchmarks/git/leak_4/git_leak_4.c:56:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_110 = redundant_93 + _109;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_111 = *_110;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_111 != 0)
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
    if (i == j || redundant[j])
               ^
if (_111 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:46:15: warning: use location
Cond in fucntion reduce_heads basic block 22
 ================== possible direct basic block ================= 
from reduce_heads basic block 23
 ================== possible direct basic block ================= 
from reduce_heads basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dcf0
    type <integer_type 0x7f042045d7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f042045d738 precision 64 min <integer_cst 0x7f0420449eb8 0> max <integer_cst 0x7f042044b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f04204699d8>>
   
    def_stmt _96 = (long unsigned int) _95;
    version 96>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
# VUSE <.MEM_209>
_102 = *_101;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
parse_commit (_102);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:3: warning: use location
   parse_commit(array[i]);
   ^
this stmt is child function---parse_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_242 = VDEF <.MEM_209>
parse_commit (_102);
parse_commit (_102);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:39:3: warning: use location
this stmt is child function---parse_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
trace fucntion name:parse_commit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff9dea0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _102 = *_101;
    version 102
    ptr-info 0x7f041ffb5618>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
# VUSE <.MEM_211>
_129 = *_128;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_130 = paint_down_to_common (_129, filled_112, work_91);
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location
   common = paint_down_to_common(array[i], filled, work);
            ^
this stmt is child function---paint_down_to_common-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:paint_down_to_common 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = (long int) _130;
./benchmarks/git/leak_4/git_leak_4.c:51:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
common_132 = (struct commit_list *) _131;
./benchmarks/git/leak_4/git_leak_4.c:51:10: warning: use location
   common = paint_down_to_common(array[i], filled, work);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_163)
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_163)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:58:3: warning: use location
Cond in fucntion reduce_heads basic block 36
 ================== possible direct basic block ================= 
from reduce_heads basic block 35
 ================== possible direct basic block ================= 
from reduce_heads basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (filled_112 > j_143)
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
   for (j = 0; j < filled; j++)
   ^
if (filled_112 > j_143)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:54:3: warning: use location
Cond in fucntion reduce_heads basic block 33
 ================== possible direct basic block ================= 
from reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_122 = _121 * 8;
./benchmarks/git/leak_4/git_leak_4.c:49:8: warning: use location
    work[filled++] = array[j];
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = filled_112;
./benchmarks/git/leak_4/git_leak_4.c:49:15: warning: use location
    work[filled++] = array[j];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_113 = (long unsigned int) filled_112;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location
    filled_index[filled] = j;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _113 * 4;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = filled_index_97 + _114;
./benchmarks/git/leak_4/git_leak_4.c:48:16: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = j_108;
./benchmarks/git/leak_4/git_leak_4.c:48:25: warning: use location
    filled_index[filled] = j;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
j_125 = j_108 + 1;
./benchmarks/git/leak_4/git_leak_4.c:45:34: warning: use location
   for (j = filled = 0; j < cnt; j++) {
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = (sizetype) j_108;
./benchmarks/git/leak_4/git_leak_4.c:46:27: warning: use location
    if (i == j || redundant[j])
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (redundant_93);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_189 = redundant_93 + _188;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_189 = redundant_93 + _188;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_221>
_190 = *_189;
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_190 = *_189;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_190 != 0)
bb index := 47
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 47 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_190 != 0)
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
   if (redundant[i])
      ^
if (_190 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:69:6: warning: use location
Cond in fucntion reduce_heads basic block 47
 ================== possible direct basic block ================= 
from reduce_heads basic block 48
 ================== possible direct basic block ================= 
from reduce_heads basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_173 = redundant_93 + _172;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_173 = redundant_93 + _172;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location
   if (!redundant[i])
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_219>
_174 = *_173;
bb index := 42
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 42 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_174 = *_173;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:66:17: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = redundant_93 + _141;
./benchmarks/git/leak_4/git_leak_4.c:53:13: warning: use location
    redundant[i] = 1;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_142 = 1;
./benchmarks/git/leak_4/git_leak_4.c:53:17: warning: use location
    redundant[i] = 1;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = redundant_93 + _105;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_106 = redundant_93 + _105;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location
   if (redundant[i])
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_217>
_107 = *_106;
bb index := 18
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_107 = *_106;
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:43:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_227 = VDEF <.MEM_226>
memcpy (work_91, array_55, _208);
bb index := 41
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 41 ,possiable got to succ := 45

======================================================================
memcpy (work_91, array_55, _208);
In function ‘main’:
./benchmarks/git/leak_4/../git.h:161:3: warning: use location
   memcpy(dst, src, st_mult(size, n));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
bb index := 51
# VUSE <.MEM_26>
return 0;
In function ‘reduce_heads’:
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 51 ,possiable got to succ := 45

======================================================================
free (work_91);
In function ‘main’:
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_193 = work_91 + _192;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location
    array[j++] = work[i];
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_200 = *_193;
./benchmarks/git/leak_4/git_leak_4.c:70:21: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_199 = _200;
./benchmarks/git/leak_4/git_leak_4.c:70:15: warning: use location
    array[j++] = work[i];
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_177 = work_91 + _176;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location
    array[filled++] = work[i];
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_184 = *_177;
./benchmarks/git/leak_4/git_leak_4.c:67:26: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_183 = _184;
./benchmarks/git/leak_4/git_leak_4.c:67:20: warning: use location
    array[filled++] = work[i];
                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = work_91 + _145;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location
    if (work[j]->object.flags & PARENT1)
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = *_146;
./benchmarks/git/leak_4/git_leak_4.c:55:12: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_148 = _147->object.flags;
./benchmarks/git/leak_4/git_leak_4.c:55:23: warning: use location
    if (work[j]->object.flags & PARENT1)
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_150 = _148 & 65536;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_150 != 0)
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
    if (work[j]->object.flags & PARENT1)
       ^
if (_150 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:55:7: warning: use location
Cond in fucntion reduce_heads basic block 30
 ================== possible direct basic block ================= 
from reduce_heads basic block 31
 ================== possible direct basic block ================= 
from reduce_heads basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149 = (unsigned int) _148;
./benchmarks/git/leak_4/git_leak_4.c:55:30: warning: use location
    if (work[j]->object.flags & PARENT1)
                              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffa8678
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _129 = *_128;
    version 129
    ptr-info 0x7f041ffb56d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
filled_203 = PHI <filled_112(23), filled_120(24)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
# VUSE <.MEM_214>
_162 = *_161;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_236 = VDEF <.MEM_214>
clear_commit_marks (_162, 983040);
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
   clear_commit_marks(array[i], all_flags);
   ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_236 = VDEF <.MEM_214>
clear_commit_marks (_162, 983040);
clear_commit_marks (_162, 983040);
./benchmarks/git/leak_4/git_leak_4.c:57:3: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffab000
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _162 = *_161;
    version 162
    ptr-info 0x7f041ffb57c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
# VUSE <.MEM_215>
_167 = *_166;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_238 = VDEF <.MEM_215>
clear_commit_marks (_167, 983040);
clear_commit_marks (_167, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:4: warning: use location
    clear_commit_marks(work[j], all_flags);
    ^
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_238 = VDEF <.MEM_215>
clear_commit_marks (_167, 983040);
clear_commit_marks (_167, 983040);
./benchmarks/git/leak_4/git_leak_4.c:59:4: warning: use location
this stmt is child function---clear_commit_marks-----

 ================== trace ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
trace fucntion name:clear_commit_marks 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffab168
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _167 = *_166;
    version 167
    ptr-info 0x7f041ffb57f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
common_132 = (struct commit_list *) _131;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_237 = VDEF <.MEM_215>
free_commit_list (common_132);
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
   free_commit_list(common);
   ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_237 = VDEF <.MEM_215>
free_commit_list (common_132);
free_commit_list (common_132);
./benchmarks/git/leak_4/git_leak_4.c:60:3: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffa8750
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffa6240 common>
    def_stmt common_132 = (struct commit_list *) _131;
    version 132
    ptr-info 0x7f041ffb56f0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76e88 type <integer_type 0x7f042045d7e0 long unsigned int> constant 8>

dot graph START

======================================================================
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
# VUSE <.MEM_77>
_30 = *_29;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ff943a8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
   
    def_stmt _30 = *_29;
    version 30
    ptr-info 0x7f041ffb5468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
# .MEM_84 = VDEF <.MEM_77>
_31 = commit_list_insert (_30, tail_35);
./benchmarks/git/leak_4/git_leak_4.c:105:11: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
tail_61 = &_31->next;
./benchmarks/git/leak_4/git_leak_4.c:105:8: warning: use location
   tail = &commit_list_insert(array[i], tail)->next;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: Use after free error!: free location 
  free(work);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: Use after free error!: free location 
  free(redundant);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: Use after free error!: free location 
  free(filled_index);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: Use after free error!: free location 
  free(array);
  ^
tail_35 = PHI <&result(51), tail_61(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:reduce_heads========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
# .MEM_12 = VDEF <.MEM_11(D)>
new_list_4 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
  return new_list;
         ^
_10 = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:18:9: warning: use location
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_4/git_leak_4.c:17:10: warning: use location
  *list_p = new_list;
          ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
  new_list->next = *list_p;
                 ^
new_list_4->next = _1;
./benchmarks/git/leak_4/git_leak_4.c:16:17: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
  new_list->item = item;
                 ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_4/git_leak_4.c:15:17: warning: use location
new_list_4 = malloc (16);
./benchmarks/git/leak_4/git_leak_4.c:14:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451900
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f04211dfab0 new_list>
    def_stmt new_list_4 = malloc (16);
    version 4
    ptr-info 0x7f041ffb5300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76de0 type <integer_type 0x7f042045d7e0 long unsigned int> constant 16>
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre add _ fucntion:lookup_commit========= [0m
[40;33m =======POP node_fun stack:lookup_commit========= [0m
[40;42m =======pre add _ fucntion:add_merge_parent========= [0m
[40;33m =======POP node_fun stack:add_merge_parent========= [0m
[40;42m =======pre add _ fucntion:peel_to_type========= [0m
[40;33m =======POP node_fun stack:peel_to_type========= [0m
[40;42m =======pre add _ fucntion:parse_object========= [0m
[40;33m =======POP node_fun stack:parse_object========= [0m
[40;42m =======pre add _ fucntion:get_oid_hex========= [0m
[40;33m =======POP node_fun stack:get_oid_hex========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:commit_list_count========= [0m
[40;33m =======POP node_fun stack:commit_list_count========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f041ff76e40 type <pointer_type 0x7f041ff7c150> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f0420451708
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _100 = _2->parents;
    version 100
    ptr-info 0x7f041ffb5b58>
# VUSE <.MEM_17>
_100 = _2->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: use location
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
 <ssa_name 0x7f0420451708
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _100 = _2->parents;
    version 100
    ptr-info 0x7f041ffb5b58>
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
[40;31m  find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
[40;31m  find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
[40;31m  find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
[40;31m  find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_106 = PHI <h_101(5), pn_125(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_125 = PHI <pn_110(8), pn_106(9)>
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_125 = PHI <pn_110(8), pn_106(9)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_110 = pn_106->next;
./benchmarks/git/leak_4/git_leak_4.c:187:7: warning: use location
    pn = pn->next;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = pn_106->item;
./benchmarks/git/leak_4/git_leak_4.c:186:27: warning: use location
   if (pn && po->item == pn->item) {
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_106 != 0B)
bb index := 6
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_106 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:6: warning: use location
   if (pn && po->item == pn->item) {
      ^
if (pn_106 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
free_commit_list (h_101);
./benchmarks/git/leak_4/git_leak_4.c:199:2: warning: use location
  free_commit_list(h);
  ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0420451708
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _100 = _2->parents;
    version 100
    ptr-info 0x7f041ffb5b58>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================
cnt_104 = commit_list_count (h_101);
./benchmarks/git/leak_4/git_leak_4.c:176:6: warning: use location
  int cnt = commit_list_count(h);
      ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
 <ssa_name 0x7f0420451708
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _100 = _2->parents;
    version 100
    ptr-info 0x7f041ffb5b58>
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================
if (cnt_104 != i_111)
./benchmarks/git/leak_4/git_leak_4.c:196:5: warning: use location
  if (i != cnt || cnt+marked != orig_cnt)
     ^
if (cnt_104 != i_111)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0420451708
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _100 = _2->parents;
    version 100
    ptr-info 0x7f041ffb5b58>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
pn_106 = PHI <h_101(5), pn_125(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
pn_125 = PHI <pn_110(8), pn_106(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
# VUSE <.MEM_127>
pn_110 = pn_106->next;
./benchmarks/git/leak_4/git_leak_4.c:187:7: warning: use location
    pn = pn->next;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
# VUSE <.MEM_127>
_109 = pn_106->item;
./benchmarks/git/leak_4/git_leak_4.c:186:27: warning: use location
   if (pn && po->item == pn->item) {
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
if (pn_106 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:6: warning: use location
   if (pn && po->item == pn->item) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
./benchmarks/git/leak_4/git_leak_4.c:199:2: warning: use location
  free_commit_list(h);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
./benchmarks/git/leak_4/git_leak_4.c:176:6: warning: use location
  int cnt = commit_list_count(h);
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: Use after free error!: free location 
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
if (cnt_104 != i_111)
./benchmarks/git/leak_4/git_leak_4.c:196:5: warning: use location
  if (i != cnt || cnt+marked != orig_cnt)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffc8bd0
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _102 = _2->parents;
    version 102
    ptr-info 0x7f041ffb5b88>
# VUSE <.MEM_139>
_102 = _2->parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_140 = VDEF <.MEM_139>
orig_cnt_103 = commit_list_count (_102);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_140 = VDEF <.MEM_139>
orig_cnt_103 = commit_list_count (_102);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================
orig_cnt_103 = commit_list_count (_102);
./benchmarks/git/leak_4/git_leak_4.c:175:6: warning: use location
  int orig_cnt = commit_list_count(commit->parents);
      ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc8bd0
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _102 = _2->parents;
    version 102
    ptr-info 0x7f041ffb5b88>
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (orig_cnt_103 != _120)
bb index := 13
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (orig_cnt_103 != _120)
bb index := 13
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (orig_cnt_103 != _120)
bb index := 13
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 45

======================================================================
if (orig_cnt_103 != _120)
./benchmarks/git/leak_4/git_leak_4.c:196:15: warning: use location
  if (i != cnt || cnt+marked != orig_cnt)
               ^
if (orig_cnt_103 != _120)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:15: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_162 = VDEF <.MEM_127>
_121 = __printf_chk (1, "mark_redundant_parents %d", orig_cnt_103);
bb index := 14
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_162 = VDEF <.MEM_127>
_121 = __printf_chk (1, "mark_redundant_parents %d", orig_cnt_103);
bb index := 14
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 45

======================================================================
_121 = __printf_chk (1, "mark_redundant_parents %d", orig_cnt_103);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc8bd0
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _102 = _2->parents;
    version 102
    ptr-info 0x7f041ffb5b88>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffc8bd0
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _102 = _2->parents;
    version 102
    ptr-info 0x7f041ffb5b88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffc8b88
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffc9630 h>
    def_stmt h_101 = reduce_heads (_100);
    version 101
    ptr-info 0x7f041ffb5b70>
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);

 ================== trace ptable================== 
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---reduce_heads-----
this other function ------reduce_heads-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_139 = VDEF <.MEM_17>
h_101 = reduce_heads (_100);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================
h_101 = reduce_heads (_100);
./benchmarks/git/leak_4/git_leak_4.c:170:22: warning: use location
  struct commit_list *h = reduce_heads(commit->parents);
                      ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc8b88
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffc9630 h>
    def_stmt h_101 = reduce_heads (_100);
    version 101
    ptr-info 0x7f041ffb5b70>
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with h ========= [0m
[40;36m ======= relate stmt argument:h ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_106 = PHI <h_101(5), pn_125(10)>
bb index := 11
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_106 = PHI <h_101(5), pn_125(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
pn_125 = PHI <pn_110(8), pn_106(9)>
bb index := 10
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_125 = PHI <pn_110(8), pn_106(9)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pn_110 = pn_106->next;
./benchmarks/git/leak_4/git_leak_4.c:187:7: warning: use location
    pn = pn->next;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_109 = pn_106->item;
./benchmarks/git/leak_4/git_leak_4.c:186:27: warning: use location
   if (pn && po->item == pn->item) {
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (pn_106 != 0B)
bb index := 6
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (pn_106 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:186:6: warning: use location
   if (pn && po->item == pn->item) {
      ^
if (pn_106 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:186:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_142 = VDEF <.MEM_127>
free_commit_list (h_101);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
free_commit_list (h_101);
./benchmarks/git/leak_4/git_leak_4.c:199:2: warning: use location
  free_commit_list(h);
  ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc8b88
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffc9630 h>
    def_stmt h_101 = reduce_heads (_100);
    version 101
    ptr-info 0x7f041ffb5b70>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_141 = VDEF <.MEM_140>
cnt_104 = commit_list_count (h_101);
bb index := 5
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 45

======================================================================
cnt_104 = commit_list_count (h_101);
./benchmarks/git/leak_4/git_leak_4.c:176:6: warning: use location
  int cnt = commit_list_count(h);
      ^
this stmt is child function---commit_list_count-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc8b88
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffc9630 h>
    def_stmt h_101 = reduce_heads (_100);
    version 101
    ptr-info 0x7f041ffb5b70>
trace fucntion name:commit_list_count 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (cnt_104 != i_111)
bb index := 12
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 45

======================================================================
if (cnt_104 != i_111)
./benchmarks/git/leak_4/git_leak_4.c:196:5: warning: use location
  if (i != cnt || cnt+marked != orig_cnt)
     ^
if (cnt_104 != i_111)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:196:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffc8b88
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
    var <var_decl 0x7f041ffc9630 h>
    def_stmt h_101 = reduce_heads (_100);
    version 101
    ptr-info 0x7f041ffb5b70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0420449f90 type <integer_type 0x7f042045d5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f041ffb2a68
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _3 = list;
    version 3
    ptr-info 0x7f041ffb5900>
# VUSE <.MEM_142>
_3 = list;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
     free_commit_list(list);
     ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffb2a68
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _3 = list;
    version 3
    ptr-info 0x7f041ffb5900>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
bb index := 15
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 45

======================================================================
# .MEM_20 = VDEF <.MEM_142>
free_commit_list (_3);
free_commit_list (_3);
./benchmarks/git/leak_4/git_leak_4.c:216:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f041ffb2a68
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _3 = list;
    version 3
    ptr-info 0x7f041ffb5900>
trace fucntion name:free_commit_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffb2a68
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _3 = list;
    version 3
    ptr-info 0x7f041ffb5900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
p_31 = _28 + _30;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:33: warning: use location
   len = newline ? newline - p : strlen(p);
                                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (int) _37;
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
   len = newline ? newline - p : strlen(p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = PHI <_36(17), _38(18)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_41 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:6: warning: use location
   if (len < GIT_SHA1_HEXSZ + 3 ||
      ^
if (_41 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:6: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = _40 + _41;
./benchmarks/git/leak_4/git_leak_4.c:127:14: warning: use location
   pos += len + !!newline;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_43 = pos_29 + _42;
./benchmarks/git/leak_4/git_leak_4.c:127:7: warning: use location
   pos += len + !!newline;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_98 = PHI <pos_43(26), pos_43(27)>
bb index := 28
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_98 = PHI <pos_43(26), pos_43(27)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_98(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:13: warning: use location
  while (pos < in->len) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_55 < _56)
./benchmarks/git/leak_4/git_leak_4.c:118:8: warning: use location
  while (pos < in->len) {
        ^
if (_55 < _56)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:8: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (sizetype) pos_29;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:21: warning: use location
   char *p = in->buf + pos;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_31 = _28 + _30;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:120:9: warning: use location
   char *p = in->buf + pos;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_131>
newline_32 = strchr (p_31, 10);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:9: warning: use location
   char *newline = strchr(p, '\n');
         ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:16: warning: use location
   pos += len + !!newline;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = (long int) newline_32;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location
   len = newline ? newline - p : strlen(p);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = _33 - _34;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
   len = newline ? newline - p : strlen(p);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_32 != 0B)
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
if (newline_32 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:8: warning: use location
       p[GIT_SHA1_HEXSZ + 1] != '\t')
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:33: warning: use location
       p[GIT_SHA1_HEXSZ] != '\t' ||
                                 ^
if (_46 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:33: warning: use location
Cond in fucntion main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:8: warning: use location
       p[GIT_SHA1_HEXSZ] != '\t' ||
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:7: warning: use location
       get_oid_hex(p, &oid) ||
       ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:32: warning: use location
   if (len < GIT_SHA1_HEXSZ + 3 ||
                                ^
if (_44 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:32: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (long int) p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location
   len = newline ? newline - p : strlen(p);
                           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
p_31 = _28 + _30;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = strlen (p_31);
./benchmarks/git/leak_4/git_leak_4.c:126:33: warning: use location
   len = newline ? newline - p : strlen(p);
                                 ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = (int) _37;
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
   len = newline ? newline - p : strlen(p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_41 = PHI <_36(17), _38(18)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_41 <= 42)
./benchmarks/git/leak_4/git_leak_4.c:129:6: warning: use location
   if (len < GIT_SHA1_HEXSZ + 3 ||
      ^
if (_41 <= 42)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:6: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 20
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = _40 + _41;
./benchmarks/git/leak_4/git_leak_4.c:127:14: warning: use location
   pos += len + !!newline;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_43 = pos_29 + _42;
./benchmarks/git/leak_4/git_leak_4.c:127:7: warning: use location
   pos += len + !!newline;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_98 = PHI <pos_43(26), pos_43(27)>
bb index := 28
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_98 = PHI <pos_43(26), pos_43(27)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
pos_29 = PHI <0(15), pos_98(28)>
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pos_29 = PHI <0(15), pos_98(28)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_55 = (long unsigned int) pos_29;
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_55 = (long unsigned int) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:118:13: warning: use location
  while (pos < in->len) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 < _56)
bb index := 29
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_55 < _56)
./benchmarks/git/leak_4/git_leak_4.c:118:8: warning: use location
  while (pos < in->len) {
        ^
if (_55 < _56)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:118:8: warning: use location
Cond in fucntion main basic block 29
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = (sizetype) pos_29;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = (sizetype) pos_29;
./benchmarks/git/leak_4/git_leak_4.c:120:21: warning: use location
   char *p = in->buf + pos;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_31 = _28 + _30;
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_31 = _28 + _30;
./benchmarks/git/leak_4/git_leak_4.c:120:9: warning: use location
   char *p = in->buf + pos;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_131>
newline_32 = strchr (p_31, 10);
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newline_32 = strchr (p_31, 10);
./benchmarks/git/leak_4/git_leak_4.c:121:9: warning: use location
   char *newline = strchr(p, '\n');
         ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = newline_32 != 0B;
./benchmarks/git/leak_4/git_leak_4.c:127:16: warning: use location
   pos += len + !!newline;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = (long int) newline_32;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location
   len = newline ? newline - p : strlen(p);
                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = _33 - _34;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = (int) _35;
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
   len = newline ? newline - p : strlen(p);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newline_32 != 0B)
bb index := 16
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newline_32 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
if (newline_32 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:126:7: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = MEM[(char *)p_31 + 41B];
./benchmarks/git/leak_4/git_leak_4.c:132:8: warning: use location
       p[GIT_SHA1_HEXSZ + 1] != '\t')
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 9)
./benchmarks/git/leak_4/git_leak_4.c:131:33: warning: use location
       p[GIT_SHA1_HEXSZ] != '\t' ||
                                 ^
if (_46 != 9)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:131:33: warning: use location
Cond in fucntion main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = MEM[(char *)p_31 + 40B];
./benchmarks/git/leak_4/git_leak_4.c:131:8: warning: use location
       p[GIT_SHA1_HEXSZ] != '\t' ||
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = get_oid_hex (p_31, &oid);
./benchmarks/git/leak_4/git_leak_4.c:130:7: warning: use location
       get_oid_hex(p, &oid) ||
       ^
this stmt is child function---get_oid_hex-----

 ================== trace ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>
trace fucntion name:get_oid_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_44 != 0)
./benchmarks/git/leak_4/git_leak_4.c:129:32: warning: use location
   if (len < GIT_SHA1_HEXSZ + 3 ||
                                ^
if (_44 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:129:32: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = (long int) p_31;
./benchmarks/git/leak_4/git_leak_4.c:126:27: warning: use location
   len = newline ? newline - p : strlen(p);
                           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffbbca8
    type <pointer_type 0x7f041ff73bd0
        type <integer_type 0x7f041ff73b28 char public string-flag QI
            size <integer_cst 0x7f0420449cd8 constant 8>
            unit size <integer_cst 0x7f0420449cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f042045d3f0 precision 8 min <integer_cst 0x7f041ff761e0 -128> max <integer_cst 0x7f041ff761c8 127>
            pointer_to_this <pointer_type 0x7f041ff73bd0>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>>
    var <var_decl 0x7f041ffc0510 p>
    def_stmt p_31 = _28 + _30;
    version 31
    ptr-info 0x7f041ffb5930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f041ffacac0
    type <pointer_type 0x7f041ff73a80
        type <record_type 0x7f041ff739d8 object_id BLK
            size <integer_cst 0x7f041ff76198 constant 160>
            unit size <integer_cst 0x7f041ff76180 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f041ff739d8 fields <field_decl 0x7f041ff75130 hash> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff73a80> chain <type_decl 0x7f041ff751c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f041ffc0630 oid type <record_type 0x7f041ff739d8 object_id>
        addressable used BLK file ./benchmarks/git/leak_4/git_leak_4.c line 122 col 20 size <integer_cst 0x7f041ff76198 160> unit size <integer_cst 0x7f041ff76180 20>
        align 128 context <function_decl 0x7f041ff74b00 main> abstract_origin <var_decl 0x7f041ffb4750 oid>
        chain <var_decl 0x7f041ffc06c0 parent type <pointer_type 0x7f041ff7c150>
            used unsigned DI file ./benchmarks/git/leak_4/git_leak_4.c line 123 col 18 size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
            align 64 context <function_decl 0x7f041ff74b00 main> abstract_origin <var_decl 0x7f041ffb47e0 parent> chain <var_decl 0x7f041ffc0750 obj>>>
    ./benchmarks/git/leak_4/git_leak_4.c:139:9 start: ./benchmarks/git/leak_4/git_leak_4.c:139:9 finish: ./benchmarks/git/leak_4/git_leak_4.c:139:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0420465000 type <pointer_type 0x7f04204640a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f041ffc12d0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc06c0 parent>
    def_stmt parent_52 = (struct commit *) _51;
    version 52
    ptr-info 0x7f041ffb5978>
parent_52 = (struct commit *) _51;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = &parent_52->object.oid;
./benchmarks/git/leak_4/git_leak_4.c:144:3: warning: use location
   add_merge_parent(result, &obj->oid, &parent->object.oid);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_merge_parent (&result, _54, _53);
./benchmarks/git/leak_4/git_leak_4.c:144:3: warning: use location
this stmt is child function---add_merge_parent-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc12d0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc06c0 parent>
    def_stmt parent_52 = (struct commit *) _51;
    version 52
    ptr-info 0x7f041ffb5978>
trace fucntion name:add_merge_parent 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_158 = VDEF <.MEM_157>
commit_list_insert (parent_52, &parents);
commit_list_insert (parent_52, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:3: warning: use location
   commit_list_insert(parent, &parents);
   ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc12d0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc06c0 parent>
    def_stmt parent_52 = (struct commit *) _51;
    version 52
    ptr-info 0x7f041ffb5978>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_158 = VDEF <.MEM_157>
commit_list_insert (parent_52, &parents);
commit_list_insert (parent_52, &parents);
./benchmarks/git/leak_4/git_leak_4.c:143:3: warning: use location
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc12d0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc06c0 parent>
    def_stmt parent_52 = (struct commit *) _51;
    version 52
    ptr-info 0x7f041ffb5978>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with parent ========= [0m
[40;36m ======= relate stmt argument:parent ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffc12d0
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc06c0 parent>
    def_stmt parent_52 = (struct commit *) _51;
    version 52
    ptr-info 0x7f041ffb5978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f041ffacc60
    type <pointer_type 0x7f041ff731f8
        type <record_type 0x7f041ff730a8 merge_parents TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff730a8 fields <field_decl 0x7f041ff75980 alloc> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff731f8> chain <type_decl 0x7f041ff75a18 D.4001>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f041ffb4000 result type <record_type 0x7f041ff730a8 merge_parents>
        addressable TI file ./benchmarks/git/leak_4/git_leak_4.c line 206 col 26 size <integer_cst 0x7f0420449c30 128> unit size <integer_cst 0x7f0420449c48 16>
        align 128 context <function_decl 0x7f041ff74b00 main>
        chain <var_decl 0x7f041ffa6f30 in type <record_type 0x7f041ff73d20 strbuf>
            BLK file ./benchmarks/git/leak_4/git_leak_4.c line 207 col 19
            size <integer_cst 0x7f04204650a8 constant 192>
            unit size <integer_cst 0x7f0420465078 constant 24>
            align 128 context <function_decl 0x7f041ff74b00 main> chain <var_decl 0x7f041ffa6ea0 head>>>
    ./benchmarks/git/leak_4/git_leak_4.c:217:5 start: ./benchmarks/git/leak_4/git_leak_4.c:217:5 finish: ./benchmarks/git/leak_4/git_leak_4.c:217:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f041ffacce0
    type <pointer_type 0x7f041ff73a80
        type <record_type 0x7f041ff739d8 object_id BLK
            size <integer_cst 0x7f041ff76198 constant 160>
            unit size <integer_cst 0x7f041ff76180 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f041ff739d8 fields <field_decl 0x7f041ff75130 hash> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff73a80> chain <type_decl 0x7f041ff751c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f041ffa6ea0 head type <record_type 0x7f041ff739d8 object_id>
        addressable BLK file ./benchmarks/git/leak_4/git_leak_4.c line 208 col 22 size <integer_cst 0x7f041ff76198 160> unit size <integer_cst 0x7f041ff76180 20>
        align 128 context <function_decl 0x7f041ff74b00 main>
        chain <var_decl 0x7f041ffa6d80 list type <pointer_type 0x7f041ff7c2a0>
            addressable unsigned DI file ./benchmarks/git/leak_4/git_leak_4.c line 210 col 25 size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
            align 64 context <function_decl 0x7f041ff74b00 main> chain <function_decl 0x7f041ffb3200 free_commit_list>>>
    ./benchmarks/git/leak_4/git_leak_4.c:217:5 start: ./benchmarks/git/leak_4/git_leak_4.c:217:5 finish: ./benchmarks/git/leak_4/git_leak_4.c:217:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffc14c8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc0240 head_commit>
    def_stmt head_commit_59 = (struct commit *) _58;
    version 59
    ptr-info 0x7f041ffb59c0>
head_commit_59 = (struct commit *) _58;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
bb index := 31
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
bb index := 31
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 45

======================================================================
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
commit_list_insert (head_commit_59, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:3: warning: use location
   commit_list_insert(head_commit, &parents);
   ^
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc14c8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc0240 head_commit>
    def_stmt head_commit_59 = (struct commit *) _58;
    version 59
    ptr-info 0x7f041ffb59c0>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
bb index := 31
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
bb index := 31
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 45

======================================================================
# .MEM_146 = VDEF <.MEM_145>
commit_list_insert (head_commit_59, &parents);
commit_list_insert (head_commit_59, &parents);
./benchmarks/git/leak_4/git_leak_4.c:148:3: warning: use location
this stmt is child function---commit_list_insert-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc14c8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc0240 head_commit>
    def_stmt head_commit_59 = (struct commit *) _58;
    version 59
    ptr-info 0x7f041ffb59c0>
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with head_commit ========= [0m
[40;36m ======= relate stmt argument:head_commit ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffc14c8
    type <pointer_type 0x7f041ff7c150
        type <record_type 0x7f041ff7c1f8 commit BLK
            size <integer_cst 0x7f0420465030 constant 512>
            unit size <integer_cst 0x7f0420502c18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c1f8 fields <field_decl 0x7f041ff7b720 object> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c150> chain <type_decl 0x7f041ff7b7b8 D.4024>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c690>>
    var <var_decl 0x7f041ffc0240 head_commit>
    def_stmt head_commit_59 = (struct commit *) _58;
    version 59
    ptr-info 0x7f041ffb59c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffc1510
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _60 = parents;
    version 60
    ptr-info 0x7f041ffb59d8>
# VUSE <.MEM_132>
_60 = parents;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: use location
  parents = reduce_heads(parents);
            ^
this stmt is child function---reduce_heads-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc1510
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _60 = parents;
    version 60
    ptr-info 0x7f041ffb59d8>
trace fucntion name:reduce_heads 
[40;44m =======trace_function_path reduce_heads  function_call count: 10 level :0========  [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
[40;31m  find free stmt free same pointer [0m
# .MEM_228 = VDEF <.MEM_221>
free (work_91);
./benchmarks/git/leak_4/git_leak_4.c:71:2: warning: use location
  free(work);
  ^
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
[40;31m  find free stmt free same pointer [0m
# .MEM_229 = VDEF <.MEM_228>
free (redundant_93);
./benchmarks/git/leak_4/git_leak_4.c:72:2: warning: use location
  free(redundant);
  ^
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
[40;31m  find free stmt free same pointer [0m
# .MEM_230 = VDEF <.MEM_229>
free (filled_index_97);
./benchmarks/git/leak_4/git_leak_4.c:73:2: warning: use location
  free(filled_index);
  ^
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
[40;31m  find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_77>
free (array_55);
./benchmarks/git/leak_4/git_leak_4.c:106:2: warning: use location
  free(array);
  ^
[40;36m ======= node_fun:reduce_heads========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
commit_list_insert this fucntion return value is heap-object 
reduce_heads this fucntion return value is heap-object commit_list_insert
[40;46m =======add node_fun stack:commit_list_insert========= [0m
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;46m =======add node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:clear_commit_marks========= [0m
[40;46m =======add node_fun stack:clear_commit_marks========= [0m
[40;42m =======pre add _ fucntion:paint_down_to_common========= [0m
[40;46m =======add node_fun stack:paint_down_to_common========= [0m
[40;42m =======pre add _ fucntion:parse_commit========= [0m
[40;46m =======add node_fun stack:parse_commit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_148 = VDEF <.MEM_147>
parents = _61;
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_148 = VDEF <.MEM_147>
parents = _61;
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_148 = VDEF <.MEM_147>
parents = _61;
bb index := 32
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 45

======================================================================
parents = _61;
./benchmarks/git/leak_4/git_leak_4.c:149:10: warning: use location
  parents = reduce_heads(parents);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_152 = VDEF <.MEM_135>
_62 = pop_commit (&parents);
bb index := 33
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: use location
   struct commit *cmit = pop_commit(&parents);
                         ^
this stmt is child function---pop_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc1510
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _60 = parents;
    version 60
    ptr-info 0x7f041ffb59d8>
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_152 = VDEF <.MEM_135>
_62 = pop_commit (&parents);
bb index := 33
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: use location
this stmt is child function---pop_commit-----

 ================== trace ================== 
 <ssa_name 0x7f041ffc1510
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _60 = parents;
    version 60
    ptr-info 0x7f041ffb59d8>
trace fucntion name:pop_commit 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_135>
_79 = parents;
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_135>
_79 = parents;
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_135>
_79 = parents;
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_135>
_79 = parents;
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:9: warning: use location
  while (parents) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_79 != 0B)
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_79 != 0B)
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_79 != 0B)
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_79 != 0B)
bb index := 38
# VUSE <.MEM_26>
return 0;
lto1: warning: use location
beacuse in succ := 45 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 45

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_79 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:8: warning: use location
  while (parents) {
        ^
if (_79 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_4/git_leak_4.c:151:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 33
 ================== possible direct basic block ================= 
from main basic block 44
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f041ffc1510
    type <pointer_type 0x7f041ff7c2a0
        type <record_type 0x7f041ff7c348 commit_list TI
            size <integer_cst 0x7f0420449c30 constant 128>
            unit size <integer_cst 0x7f0420449c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f041ff7c348 fields <field_decl 0x7f041ff7b428 item> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff7c2a0> chain <type_decl 0x7f041ff7b4c0 D.4019>>
        public unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f041ff7c888>>
   
    def_stmt _60 = parents;
    version 60
    ptr-info 0x7f041ffb59d8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: Use after free error!: free location 
  parents = reduce_heads(parents);
            ^
# .MEM_148 = VDEF <.MEM_147>
parents = _61;
./benchmarks/git/leak_4/git_leak_4.c:149:10: warning: use location
  parents = reduce_heads(parents);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: Use after free error!: free location 
  parents = reduce_heads(parents);
            ^
# .MEM_152 = VDEF <.MEM_135>
_62 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: use location
   struct commit *cmit = pop_commit(&parents);
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: Use after free error!: free location 
  parents = reduce_heads(parents);
            ^
# .MEM_152 = VDEF <.MEM_135>
_62 = pop_commit (&parents);
./benchmarks/git/leak_4/git_leak_4.c:152:25: warning: use location
   struct commit *cmit = pop_commit(&parents);
                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: Use after free error!: free location 
  parents = reduce_heads(parents);
            ^
# VUSE <.MEM_135>
_79 = parents;
./benchmarks/git/leak_4/git_leak_4.c:151:9: warning: use location
  while (parents) {
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_147 = VDEF <.MEM_132>
_61 = reduce_heads (_60);
./benchmarks/git/leak_4/git_leak_4.c:149:12: warning: Use after free error!: free location 
  parents = reduce_heads(parents);
            ^
if (_79 != 0B)
./benchmarks/git/leak_4/git_leak_4.c:151:8: warning: use location
  while (parents) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f041fface20
    type <pointer_type 0x7f041ff7c888
        type <pointer_type 0x7f041ff7c2a0 type <record_type 0x7f041ff7c348 commit_list>
            public unsigned DI
            size <integer_cst 0x7f0420449be8 constant 64>
            unit size <integer_cst 0x7f0420449c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f041ff7c888>>
        public unsigned DI size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f041ffc01b0 parents type <pointer_type 0x7f041ff7c2a0>
        addressable used unsigned DI file ./benchmarks/git/leak_4/git_leak_4.c line 113 col 22 size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
        align 64 context <function_decl 0x7f041ff74b00 main> abstract_origin <var_decl 0x7f041ffb45a0 parents>
        chain <var_decl 0x7f041ffc0240 head_commit type <pointer_type 0x7f041ff7c150>
            used unsigned DI file ./benchmarks/git/leak_4/git_leak_4.c line 114 col 17 size <integer_cst 0x7f0420449be8 64> unit size <integer_cst 0x7f0420449c00 8>
            align 64 context <function_decl 0x7f041ff74b00 main> abstract_origin <var_decl 0x7f041ffb4510 head_commit> chain <var_decl 0x7f041ffc02d0 pos>>>
    ./benchmarks/git/leak_4/git_leak_4.c:152:25 start: ./benchmarks/git/leak_4/git_leak_4.c:152:25 finish: ./benchmarks/git/leak_4/git_leak_4.c:152:25>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f041ffc1828
    type <pointer_type 0x7f041ff73a80
        type <record_type 0x7f041ff739d8 object_id BLK
            size <integer_cst 0x7f041ff76198 constant 160>
            unit size <integer_cst 0x7f041ff76180 constant 20>
            align 8 symtab 0 alias set -1 canonical type 0x7f041ff739d8 fields <field_decl 0x7f041ff75130 hash> context <translation_unit_decl 0x7f0420454168 ./benchmarks/git/leak_4/git_leak_4.c>
            pointer_to_this <pointer_type 0x7f041ff73a80> chain <type_decl 0x7f041ff751c8 D.3987>>
        unsigned DI
        size <integer_cst 0x7f0420449be8 constant 64>
        unit size <integer_cst 0x7f0420449c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _71 = &_70->commit;
    version 71
    ptr-info 0x7f041ffb5a68>
_71 = &_70->commit;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:commit_list_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
new_list_4 = malloc (16);
new_list_4->item = item_5(D);
_1 = *list_p_7(D);
new_list_4->next = _1;
*list_p_7(D) = new_list_4;
_10 = new_list_4;
return new_list_4;

=======Mapping node_fun:reduce_heads=========
=======is loop:0=========

 bb index 2 
<bb 2> [5.40%]:
result = 0B;
if (heads_52(D) == 0B)
  goto <bb 55>; [4.07%]
else
  goto <bb 4>; [95.93%]

=======is loop:1=========

 bb index 3 
<bb 3> [29.34%]:
_1 = p_32->item;
_2 = _1->object.flags;
_3 = p_32->item;
_4 = _2 & 133955583;
_3->object.flags = _4;
p_71 = p_32->next;

=======is loop:1=========

 bb index 4 
<bb 4> [34.52%]:
# p_32 = PHI <heads_52(D)(2), p_71(3)>
if (p_32 != 0B)
  goto <bb 3>; [85.00%]
else
  goto <bb 9>; [15.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [29.34%]:
_5 = p_33->item;
_6 = _5->object.flags;
_7 = (unsigned int) _6;
_53 = _6 & 262144;
_8 = (unsigned int) _53;
if (_53 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [9.68%]:
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [19.66%]:
_9 = p_33->item;
_10 = _9->object.flags;
_11 = p_33->item;
_12 = _10 | 262144;
_11->object.flags = _12;
num_head_68 = num_head_37 + 1;

=======is loop:1=========

 bb index 8 
<bb 8> [29.34%]:
# num_head_36 = PHI <num_head_37(6), num_head_68(7)>
p_69 = p_33->next;

=======is loop:1=========

 bb index 9 
<bb 9> [34.52%]:
# p_33 = PHI <heads_52(D)(4), p_69(8)>
# num_head_37 = PHI <0(4), num_head_36(8)>
if (p_33 != 0B)
  goto <bb 5>; [85.00%]
else
  goto <bb 10>; [15.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [5.18%]:
_13 = (long unsigned int) num_head_37;
array_55 = calloc (_13, 8);
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [29.34%]:
_14 = p_34->item;
_15 = _14->object.flags;
_16 = (unsigned int) _15;
_51 = _15 & 262144;
_17 = (unsigned int) _51;
if (_51 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [14.67%]:
_18 = i_39;
i_63 = i_39 + 1;
_19 = (long unsigned int) i_39;
_20 = _19 * 8;
_21 = array_55 + _20;
_22 = p_34->item;
*_21 = _22;
_23 = p_34->item;
_24 = _23->object.flags;
_25 = p_34->item;
_26 = _24 & 133955583;
_25->object.flags = _26;

=======is loop:1=========

 bb index 13 
<bb 13> [29.34%]:
# i_38 = PHI <i_39(11), i_63(12)>
p_66 = p_34->next;

=======is loop:1=========

 bb index 14 
<bb 14> [34.52%]:
# p_34 = PHI <heads_52(D)(10), p_66(13)>
# i_39 = PHI <0(10), i_38(13)>
if (p_34 != 0B)
  goto <bb 11>; [85.00%]
else
  goto <bb 15>; [15.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [5.18%]:
_90 = (long unsigned int) num_head_37;
work_91 = calloc (_90, 8);
_92 = (long unsigned int) num_head_37;
redundant_93 = calloc (_92, 1);
_94 = num_head_37 + -1;
_95 = st_mult (4, _94);
_96 = (long unsigned int) _95;
filled_index_97 = malloc (_96);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [29.34%]:
_99 = (long unsigned int) i_98;
_100 = _99 * 8;
_101 = array_55 + _100;
_102 = *_101;
parse_commit (_102);
i_103 = i_98 + 1;

=======is loop:1=========

 bb index 17 
<bb 17> [34.52%]:
# i_98 = PHI <0(15), i_103(16)>
if (num_head_37 > i_98)
  goto <bb 16>; [85.00%]
else
  goto <bb 39>; [15.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [29.34%]:
_105 = (sizetype) i_104;
_106 = redundant_93 + _105;
_107 = *_106;
if (_107 != 0)
  goto <bb 20>; [48.88%]
else
  goto <bb 19>; [51.12%]

=======is loop:1=========

 bb index 19 
<bb 19> [15.00%]:
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [14.34%]:
// predicted unlikely by continue predictor.
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [85.00%]:
if (i_104 == j_108)
  goto <bb 23>; [20.24%]
else
  goto <bb 22>; [79.76%]

=======is loop:1=========

 bb index 22 
<bb 22> [67.80%]:
_109 = (sizetype) j_108;
_110 = redundant_93 + _109;
_111 = *_110;
if (_111 != 0)
  goto <bb 23>; [33.00%]
else
  goto <bb 24>; [67.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [39.58%]:
// predicted unlikely by continue predictor.
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [45.42%]:
_113 = (long unsigned int) filled_112;
_114 = _113 * 4;
_115 = filled_index_97 + _114;
*_115 = j_108;
_116 = (long unsigned int) j_108;
_117 = _116 * 8;
_118 = array_55 + _117;
_119 = filled_112;
filled_120 = filled_112 + 1;
_121 = (long unsigned int) filled_112;
_122 = _121 * 8;
_123 = work_91 + _122;
_124 = *_118;
*_123 = _124;

=======is loop:1=========

 bb index 25 
<bb 25> [85.00%]:
# filled_203 = PHI <filled_112(23), filled_120(24)>
j_125 = j_108 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [100.00%]:
# j_108 = PHI <0(19), j_125(25)>
# filled_112 = PHI <0(19), filled_203(25)>
if (num_head_37 > j_108)
  goto <bb 21>; [85.00%]
else
  goto <bb 27>; [15.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [15.00%]:
_126 = (long unsigned int) i_104;
_127 = _126 * 8;
_128 = array_55 + _127;
_129 = *_128;
_130 = paint_down_to_common (_129, filled_112, work_91);
_131 = (long int) _130;
common_132 = (struct commit_list *) _131;
_133 = (long unsigned int) i_104;
_134 = _133 * 8;
_135 = array_55 + _134;
_136 = *_135;
_137 = _136->object.flags;
_138 = (unsigned int) _137;
_139 = _137 & 131072;
_140 = (unsigned int) _139;
if (_139 != 0)
  goto <bb 28>; [50.00%]
else
  goto <bb 29>; [50.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [7.50%]:
_141 = (sizetype) i_104;
_142 = redundant_93 + _141;
*_142 = 1;

=======is loop:1=========

 bb index 29 
<bb 29> [15.00%]:
# j_204 = PHI <0(27), 0(28)>
goto <bb 33>; [100.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [85.00%]:
_144 = (long unsigned int) j_143;
_145 = _144 * 8;
_146 = work_91 + _145;
_147 = *_146;
_148 = _147->object.flags;
_149 = (unsigned int) _148;
_150 = _148 & 65536;
_151 = (unsigned int) _150;
if (_150 != 0)
  goto <bb 31>; [50.00%]
else
  goto <bb 32>; [50.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [42.50%]:
_152 = (long unsigned int) j_143;
_153 = _152 * 4;
_154 = filled_index_97 + _153;
_155 = *_154;
_156 = (sizetype) _155;
_157 = redundant_93 + _156;
*_157 = 1;

=======is loop:1=========

 bb index 32 
<bb 32> [85.00%]:
j_158 = j_143 + 1;

=======is loop:1=========

 bb index 33 
<bb 33> [100.00%]:
# j_143 = PHI <j_204(29), j_158(32)>
if (filled_112 > j_143)
  goto <bb 30>; [85.00%]
else
  goto <bb 34>; [15.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [15.00%]:
_159 = (long unsigned int) i_104;
_160 = _159 * 8;
_161 = array_55 + _160;
_162 = *_161;
clear_commit_marks (_162, 983040);
goto <bb 36>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [85.00%]:
_164 = (long unsigned int) j_163;
_165 = _164 * 8;
_166 = work_91 + _165;
_167 = *_166;
clear_commit_marks (_167, 983040);
j_168 = j_163 + 1;

=======is loop:1=========

 bb index 36 
<bb 36> [100.00%]:
# j_163 = PHI <0(34), j_168(35)>
if (filled_112 > j_163)
  goto <bb 35>; [85.00%]
else
  goto <bb 37>; [15.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [15.00%]:
free_commit_list (common_132);

=======is loop:1=========

 bb index 38 
<bb 38> [29.34%]:
i_169 = i_104 + 1;

=======is loop:1=========

 bb index 39 
<bb 39> [34.52%]:
# i_104 = PHI <0(17), i_169(38)>
if (num_head_37 > i_104)
  goto <bb 18>; [85.00%]
else
  goto <bb 40>; [15.00%]

=======is loop:0=========

 bb index 40 
<bb 40> [5.18%]:
_170 = (long unsigned int) num_head_37;
if (_170 != 0)
  goto <bb 41>; [36.64%]
else
  goto <bb 45>; [63.36%]

=======is loop:0=========

 bb index 41 
<bb 41> [1.90%]:
_207 = st_mult (8, _170);
_208 = (long unsigned int) _207;
memcpy (work_91, array_55, _208);
goto <bb 45>; [100.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [29.34%]:
_172 = (sizetype) i_171;
_173 = redundant_93 + _172;
_174 = *_173;
if (_174 == 0)
  goto <bb 43>; [50.00%]
else
  goto <bb 44>; [50.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [14.67%]:
_175 = (long unsigned int) i_171;
_176 = _175 * 8;
_177 = work_91 + _176;
_179 = filled_178;
filled_180 = filled_178 + 1;
_181 = (long unsigned int) filled_178;
_182 = _181 * 8;
_183 = array_55 + _182;
_184 = *_177;
*_183 = _184;

=======is loop:1=========

 bb index 44 
<bb 44> [29.34%]:
# filled_205 = PHI <filled_178(42), filled_180(43)>
i_185 = i_171 + 1;

=======is loop:1=========

 bb index 45 
<bb 45> [34.52%]:
# i_171 = PHI <0(41), i_185(44), 0(40)>
# filled_178 = PHI <0(41), filled_205(44), 0(40)>
if (num_head_37 > i_171)
  goto <bb 42>; [85.00%]
else
  goto <bb 46>; [15.00%]

=======is loop:0=========

 bb index 46 
<bb 46> [5.18%]:
j_186 = filled_178;
goto <bb 50>; [100.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [29.34%]:
_188 = (sizetype) i_187;
_189 = redundant_93 + _188;
_190 = *_189;
if (_190 != 0)
  goto <bb 48>; [50.00%]
else
  goto <bb 49>; [50.00%]

=======is loop:1=========

 bb index 48 
<bb 48> [14.67%]:
_191 = (long unsigned int) i_187;
_192 = _191 * 8;
_193 = work_91 + _192;
_195 = j_194;
j_196 = j_194 + 1;
_197 = (long unsigned int) j_194;
_198 = _197 * 8;
_199 = array_55 + _198;
_200 = *_193;
*_199 = _200;

=======is loop:1=========

 bb index 49 
<bb 49> [29.34%]:
# j_206 = PHI <j_194(47), j_196(48)>
i_201 = i_187 + 1;

=======is loop:1=========

 bb index 50 
<bb 50> [34.52%]:
# i_187 = PHI <0(46), i_201(49)>
# j_194 = PHI <filled_178(46), j_206(49)>
if (num_head_37 > i_187)
  goto <bb 47>; [85.00%]
else
  goto <bb 51>; [15.00%]

=======is loop:0=========

 bb index 51 
<bb 51> [5.18%]:
free (work_91);
free (redundant_93);
free (filled_index_97);
_202 = filled_178;
_231 = filled_178;
num_head_57 = _231;
goto <bb 53>; [100.00%]

=======is loop:1=========

 bb index 52 
<bb 52> [29.34%]:
_27 = (long unsigned int) i_40;
_28 = _27 * 8;
_29 = array_55 + _28;
_30 = *_29;
_31 = commit_list_insert (_30, tail_35);
tail_61 = &_31->next;
i_62 = i_40 + 1;

=======is loop:1=========

 bb index 53 
<bb 53> [34.52%]:
# tail_35 = PHI <&result(51), tail_61(52)>
# i_40 = PHI <0(51), i_62(52)>
if (i_40 < num_head_57)
  goto <bb 52>; [85.00%]
else
  goto <bb 54>; [15.00%]

=======is loop:0=========

 bb index 54 
<bb 54> [5.18%]:
free (array_55);
_59 = result;

=======is loop:0=========

 bb index 55 
<bb 55> [5.40%]:
# _41 = PHI <0B(2), _59(54)>
result ={v} {CLOBBER};
return _41;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [2.65%]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [26.49%]:
commit_list_insert (0B, &list);
i_16 = i_4 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [29.14%]:
# i_4 = PHI <0(2), i_16(3)>
if (i_4 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [2.65%]:
_1 = list;
_2 = _1->item;
_100 = _2->parents;
h_101 = reduce_heads (_100);
_102 = _2->parents;
orig_cnt_103 = commit_list_count (_102);
cnt_104 = commit_list_count (h_101);
po_105 = _2->parents;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [15.01%]:
if (pn_106 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [10.51%]:
_108 = po_107->item;
_109 = pn_106->item;
if (_108 == _109)
  goto <bb 8>; [30.00%]
else
  goto <bb 9>; [70.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [3.15%]:
pn_110 = pn_106->next;
i_112 = i_111 + 1;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [11.86%]:
_113 = po_107->item;
_114 = _113->object.flags;
_115 = po_107->item;
_116 = _114 | 16;
_115->object.flags = _116;
marked_118 = marked_117 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [15.01%]:
# i_123 = PHI <i_112(8), i_111(9)>
# marked_124 = PHI <marked_117(8), marked_118(9)>
# pn_125 = PHI <pn_110(8), pn_106(9)>
po_119 = po_107->next;

=======is loop:1=========

 bb index 11 
<bb 11> [17.66%]:
# i_111 = PHI <0(5), i_123(10)>
# marked_117 = PHI <0(5), marked_124(10)>
# po_107 = PHI <po_105(5), po_119(10)>
# pn_106 = PHI <h_101(5), pn_125(10)>
if (po_107 != 0B)
  goto <bb 6>; [85.00%]
else
  goto <bb 12>; [15.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [2.65%]:
if (cnt_104 != i_111)
  goto <bb 14>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 13 
<bb 13> [2.65%]:
_120 = cnt_104 + marked_117;
if (orig_cnt_103 != _120)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [0.00%]:
_121 = __printf_chk (1, "mark_redundant_parents %d", orig_cnt_103);
exit (1);

=======is loop:0=========

 bb index 15 
<bb 15> [2.65%]:
free_commit_list (h_101);
_122 = marked_117;
_143 = marked_117;
_3 = list;
free_commit_list (_3);
parents = 0B;
goto <bb 29>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [15.00%]:
_28 = in.buf;
_30 = (sizetype) pos_29;
p_31 = _28 + _30;
newline_32 = strchr (p_31, 10);
if (newline_32 != 0B)
  goto <bb 17>; [70.00%]
else
  goto <bb 18>; [30.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [10.50%]:
_33 = (long int) newline_32;
_34 = (long int) p_31;
_35 = _33 - _34;
_36 = (int) _35;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [4.50%]:
_37 = strlen (p_31);
_38 = (int) _37;

=======is loop:1=========

 bb index 19 
<bb 19> [15.00%]:
# _41 = PHI <_36(17), _38(18)>
_39 = newline_32 != 0B;
_40 = (int) _39;
_42 = _40 + _41;
pos_43 = pos_29 + _42;
if (_41 <= 42)
  goto <bb 23>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [7.50%]:
_44 = get_oid_hex (p_31, &oid);
if (_44 != 0)
  goto <bb 23>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [5.03%]:
_45 = MEM[(char *)p_31 + 40B];
if (_45 != 9)
  goto <bb 23>; [48.88%]
else
  goto <bb 22>; [51.12%]

=======is loop:1=========

 bb index 22 
<bb 22> [2.57%]:
_46 = MEM[(char *)p_31 + 41B];
if (_46 != 9)
  goto <bb 23>; [66.00%]
else
  goto <bb 24>; [34.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [14.13%]:
// predicted unlikely by continue predictor.
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [0.87%]:
_47 = parse_object (&oid);
_48 = (long int) _47;
obj_49 = (struct object *) _48;
_50 = peel_to_type (0B, 0, obj_49, 1);
_51 = (long int) _50;
parent_52 = (struct commit *) _51;
if (_50 == 0)
  goto <bb 25>; [50.00%]
else
  goto <bb 26>; [50.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [0.44%]:
// predicted unlikely by continue predictor.
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [0.44%]:
commit_list_insert (parent_52, &parents);
_53 = &parent_52->object.oid;
_54 = &obj_49->oid;
add_merge_parent (&result, _54, _53);
oid ={v} {CLOBBER};
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [14.56%]:
oid ={v} {CLOBBER};

=======is loop:1=========

 bb index 28 
<bb 28> [15.00%]:
# pos_98 = PHI <pos_43(26), pos_43(27)>

=======is loop:1=========

 bb index 29 
<bb 29> [17.65%]:
# pos_29 = PHI <0(15), pos_98(28)>
_55 = (long unsigned int) pos_29;
_56 = in.len;
if (_55 < _56)
  goto <bb 16>; [85.00%]
else
  goto <bb 30>; [15.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [2.65%]:
_57 = lookup_commit (&head);
_58 = (long int) _57;
head_commit_59 = (struct commit *) _58;
if (_57 != 0)
  goto <bb 31>; [33.00%]
else
  goto <bb 32>; [67.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [0.87%]:
commit_list_insert (head_commit_59, &parents);

=======is loop:0=========

 bb index 32 
<bb 32> [2.65%]:
_60 = parents;
_61 = reduce_heads (_60);
parents = _61;
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [15.00%]:
_62 = pop_commit (&parents);
_63 = (long int) _62;
cmit_64 = (struct commit *) _63;
goto <bb 37>; [100.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [85.00%]:
_65 = &cmit_64->object.oid;
_66 = result.item;
_68 = (long unsigned int) i_67;
_69 = _68 * 41;
_70 = _66 + _69;
_71 = &_70->commit;
_72 = oidcmp (_71, _65);
if (_72 == 0)
  goto <bb 35>; [50.00%]
else
  goto <bb 36>; [50.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [42.50%]:
_73 = result.item;
_74 = (long unsigned int) i_67;
_75 = _74 * 41;
_76 = _73 + _75;
_76->used = 1;

=======is loop:1=========

 bb index 36 
<bb 36> [85.00%]:
i_77 = i_67 + 1;

=======is loop:1=========

 bb index 37 
<bb 37> [100.00%]:
# i_67 = PHI <0(33), i_77(36)>
_78 = result.nr;
if (i_67 < _78)
  goto <bb 34>; [85.00%]
else
  goto <bb 38>; [15.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [17.65%]:
_79 = parents;
if (_79 != 0B)
  goto <bb 33>; [85.00%]
else
  goto <bb 44>; [15.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [15.00%]:
_80 = result.item;
_82 = (long unsigned int) i_81;
_83 = _82 * 41;
_84 = _80 + _83;
_85 = _84->used;
if (_85 != 0)
  goto <bb 40>; [50.00%]
else
  goto <bb 43>; [50.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [7.50%]:
if (i_81 != j_86)
  goto <bb 41>; [66.00%]
else
  goto <bb 42>; [34.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [4.95%]:
_87 = result.item;
_88 = (long unsigned int) i_81;
_89 = _88 * 41;
_90 = _87 + _89;
_91 = result.item;
_92 = (long unsigned int) j_86;
_93 = _92 * 41;
_94 = _91 + _93;
*_94 = *_90;

=======is loop:1=========

 bb index 42 
<bb 42> [7.50%]:
j_95 = j_86 + 1;

=======is loop:1=========

 bb index 43 
<bb 43> [15.00%]:
# j_99 = PHI <j_86(39), j_95(42)>
i_96 = i_81 + 1;

=======is loop:1=========

 bb index 44 
<bb 44> [17.65%]:
# i_81 = PHI <0(38), i_96(43)>
# j_86 = PHI <0(38), j_99(43)>
_97 = result.nr;
if (i_81 < _97)
  goto <bb 39>; [85.00%]
else
  goto <bb 45>; [15.00%]

=======is loop:0=========

 bb index 45 
<bb 45> [2.65%]:
result.nr = j_86;
parents ={v} {CLOBBER};
result ={v} {CLOBBER};
in ={v} {CLOBBER};
head ={v} {CLOBBER};
list ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 23 [0m
[40;34m    used_stmt array stack totalsize of : 12112 [0m
[40;34m    collect time: : 0.001043 s [0m
[40;34m    algorithm time: 0.142517 s [0m
[40;34m    gimple stmt count : : 335 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccpXQbhE.ltrans0.ltrans.o: in function `reduce_heads':
<artificial>:(.text+0x13b): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0x16c): undefined reference to `parse_commit'
/usr/bin/ld: <artificial>:(.text+0x1d2): undefined reference to `paint_down_to_common'
/usr/bin/ld: <artificial>:(.text+0x24c): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0x33f): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x367): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x381): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x3b4): undefined reference to `clear_commit_marks'
/usr/bin/ld: <artificial>:(.text+0x3ca): undefined reference to `st_mult'
/usr/bin/ld: /tmp/ccpXQbhE.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x485): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x494): undefined reference to `commit_list_count'
/usr/bin/ld: <artificial>:(.text+0x505): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x514): undefined reference to `free_commit_list'
/usr/bin/ld: <artificial>:(.text+0x58b): undefined reference to `get_oid_hex'
/usr/bin/ld: <artificial>:(.text+0x5a5): undefined reference to `parse_object'
/usr/bin/ld: <artificial>:(.text+0x5c4): undefined reference to `peel_to_type'
/usr/bin/ld: <artificial>:(.text+0x5f8): undefined reference to `add_merge_parent'
/usr/bin/ld: <artificial>:(.text+0x649): undefined reference to `lookup_commit'
/usr/bin/ld: <artificial>:(.text+0x676): undefined reference to `pop_commit'
/usr/bin/ld: <artificial>:(.text+0x6c6): undefined reference to `oidcmp'
collect2: error: ld returned 1 exit status
