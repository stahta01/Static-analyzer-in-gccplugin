In file included from ./benchmarks/git/leak_2/git_leak_2.c:10:0:
./benchmarks/git/leak_2/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_2/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/leak_2/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/leak_2/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_2/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/leak_2/../git.h: In function ‘move_array’:
./benchmarks/git/leak_2/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/leak_2/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/leak_2/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_2/git_leak_2.c:9:0:
./benchmarks/git/leak_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_2/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/leak_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_2/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/leak_2/git_leak_2.c:10:0:
./benchmarks/git/leak_2/../git.h: At top level:
./benchmarks/git/leak_2/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/leak_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_2/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_2/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_2/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_2/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_2/git_leak_2.c: In function ‘best_bisection’:
./benchmarks/git/leak_2/git_leak_2.c:51:14: warning: implicit declaration of function ‘weight’ [-Wimplicit-function-declaration]
   distance = weight(p);
              ^~~~~~
./benchmarks/git/leak_2/git_leak_2.c: In function ‘best_bisection_sorted’:
./benchmarks/git/leak_2/git_leak_2.c:86:3: warning: implicit declaration of function ‘strbuf_reset’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
   strbuf_reset(&buf);
   ^~~~~~~~~~~~
   strbuf_swap
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: implicit declaration of function ‘strbuf_addf’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^~~~~~~~~~~
   strbuf_swap
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: implicit declaration of function ‘add_name_decoration’ [-Wimplicit-function-declaration]
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_2/git_leak_2.c:96:2: warning: implicit declaration of function ‘strbuf_release’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
  strbuf_release(&buf);
  ^~~~~~~~~~~~~~
  strbuf_swap
./benchmarks/git/leak_2/git_leak_2.c: In function ‘do_find_bisection’:
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: implicit declaration of function ‘count_interesting_parents’ [-Wimplicit-function-declaration]
   switch (count_interesting_parents(commit)) {
           ^~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: implicit declaration of function ‘weight_set’ [-Wimplicit-function-declaration]
     weight_set(p, 1);
     ^~~~~~~~~~
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: implicit declaration of function ‘show_list’ [-Wimplicit-function-declaration]
     show_list("bisection 2 count one",
     ^~~~~~~~~
./benchmarks/git/leak_2/git_leak_2.c:159:17: warning: implicit declaration of function ‘count_distance’; did you mean ‘commit_list_insert’? [-Wimplicit-function-declaration]
   weight_set(p, count_distance(p));
                 ^~~~~~~~~~~~~~
                 commit_list_insert
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: implicit declaration of function ‘clear_distance’ [-Wimplicit-function-declaration]
   clear_distance(list);
   ^~~~~~~~~~~~~~
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: implicit declaration of function ‘halfway’ [-Wimplicit-function-declaration]
   if (!find_all && halfway(p, nr))
                    ^~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 15
succs:= 15
--------GIMPLE Cond -------
succs:= 20
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 22
succs:= 22
succs:= 23
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 24
succs:= 24
succs:= 25
--------GIMPLE Cond -------
succs:= 26
--------GIMPLE Cond -------
succs:= 27
succs:= 26
succs:= 27
succs:= 23
succs:= 25
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 33
succs:= 33
succs:= 34
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 36
succs:= 36
succs:= 37
--------GIMPLE Cond -------
succs:= 37
succs:= 38
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 38
succs:= 40
--------GIMPLE Cond -------
succs:= 41
succs:= 41
succs:= 42
--------GIMPLE Cond -------
succs:= 43
succs:= 43
--------GIMPLE Cond -------
succs:= 46
--------GIMPLE Cond -------
succs:= 47
succs:= 34
succs:= 42
succs:= 46
succs:= 47
--------GIMPLE Cond -------
succs:= 50
--------GIMPLE Cond -------
succs:= 51
--------GIMPLE Cond -------
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 54
succs:= 54
succs:= 55
--------GIMPLE Cond -------
succs:= 56
--------GIMPLE Cond -------
succs:= 56
succs:= 58
succs:= 55
succs:= 58
--------GIMPLE Cond -------
succs:= 61
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 64
succs:= 64
succs:= 65
--------GIMPLE Cond -------
succs:= 66
succs:= 66
succs:= 65
--------GIMPLE Cond -------
succs:= 70
--------GIMPLE Cond -------
succs:= 71
succs:= 71
--------GIMPLE Cond -------
succs:= 74
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 76
succs:= 77
succs:= 8
succs:= 77
succs:= 76
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);
# .MEM_197 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _24);
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
# .MEM_234 = VDEF <.MEM_233>
clear_distance (list_41);
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
# .MEM_222 = VDEF <.MEM_190>
distance_120 = weight (p_114);
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
# .MEM_218 = VDEF <.MEM_192>
distance_139 = weight (p_133);
# .MEM_214 = VDEF <.MEM_193>
strbuf_reset (&buf);
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
# .MEM_210 = VDEF <.MEM_209>
strbuf_release (&buf);
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:free_commit_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path free_commit_list  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_commit_list========= [0m
[40;42m =======start_check_funciton:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_commit_list  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:free_commit_list========= [0m
[40;42m =======start_check_funciton:free_commit_list========= [0m
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:weight========= [0m
[40;33m =======POP node_fun stack:weight========= [0m
[40;42m =======pre add _ fucntion:strbuf_release========= [0m
[40;33m =======POP node_fun stack:strbuf_release========= [0m
[40;42m =======pre add _ fucntion:add_name_decoration========= [0m
[40;33m =======POP node_fun stack:add_name_decoration========= [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;33m =======POP node_fun stack:show_list========= [0m
[40;42m =======pre add _ fucntion:halfway========= [0m
[40;33m =======POP node_fun stack:halfway========= [0m
[40;42m =======pre add _ fucntion:weight_set========= [0m
[40;33m =======POP node_fun stack:weight_set========= [0m
[40;42m =======pre add _ fucntion:clear_distance========= [0m
[40;33m =======POP node_fun stack:clear_distance========= [0m
[40;42m =======pre add _ fucntion:count_distance========= [0m
[40;33m =======POP node_fun stack:count_distance========= [0m
[40;42m =======pre add _ fucntion:count_interesting_parents========= [0m
[40;33m =======POP node_fun stack:count_interesting_parents========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_262 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
In function ‘main’:
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_262 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_262 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_262 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_262 = new_list_21;
./benchmarks/git/leak_2/git_leak_2.c:35:10: warning: use location
  *list_p = new_list;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_255 = PHI <list_256(D)(2), list_262(3)>
bb index := 4
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_255;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_255;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_255;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_255;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = list_255;
./benchmarks/git/leak_2/git_leak_2.c:34:19: warning: use location
  new_list->next = *list_p;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_252 = VDEF <.MEM_251>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21->next = _22;
./benchmarks/git/leak_2/git_leak_2.c:34:17: warning: use location
  new_list->next = *list_p;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = list_255;
bb index := 5
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = list_255;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_25 = list_255;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================
p_25 = list_255;
./benchmarks/git/leak_2/git_leak_2.c:227:40: warning: use location
  for (nr = on_list = 0, last = NULL, p = *commit_list;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = PHI <p_25(5), p_49(11)>
bb index := 12
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = PHI <p_25(5), p_49(11)>
bb index := 12
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = PHI <p_25(5), p_49(11)>
bb index := 12
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = PHI <p_25(5), p_49(11)>
bb index := 12
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_26->next = last_33;
./benchmarks/git/leak_2/git_leak_2.c:237:11: warning: use location
   p->next = last;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_176>
next_30 = p_26->next;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_30 = p_26->next;
./benchmarks/git/leak_2/git_leak_2.c:232:8: warning: use location
   next = p->next;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_49 = PHI <next_30(7), next_30(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_50 = PHI <last_33(7), p_26(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_41 = last_33;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_41 = last_33;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
list_41 = last_33;
./benchmarks/git/leak_2/git_leak_2.c:243:7: warning: use location
  list = last;
       ^
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
clear_distance (list_41);
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: use location
   clear_distance(list);
   ^
this stmt is child function---clear_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:clear_distance 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_221 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_221 = best_127;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_107 = _221;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^
if (best_44 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
Cond in fucntion main basic block 76
 ================== possible direct basic block ================= 
from main basic block 77
 ================== possible direct basic block ================= 
from main basic block 80
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_128 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_120 > _121)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
Cond in fucntion main basic block 56
 ================== possible direct basic block ================= 
from main basic block 57
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = _116 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^
if (_118 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 54
 ================== possible direct basic block ================= 
from main basic block 55
 ================== possible direct basic block ================= 
from main basic block 56
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _135 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_139 > _140)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
Cond in fucntion main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== possible direct basic block ================= 
from main basic block 68
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_213 = list_41;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_213 = list_41;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_108 = _213;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
Cond in fucntion main basic block 47
 ================== possible direct basic block ================= 
from main basic block 48
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_180>
p_80 = p_68->next;
bb index := 30
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
this stmt is child function---count_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:count_distance 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^
if (_74 != -2)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_77 = p_68;
bb index := 28
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 80

======================================================================
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^
if (nr_37 > counted_106)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
Cond in fucntion main basic block 51
 ================== possible direct basic block ================= 
from main basic block 52
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nr_47 = PHI <nr_37(7), nr_46(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _83 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = p_81;
bb index := 48
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 48 ,possiable got to succ := 80

======================================================================
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_177>
p_67 = p_51->next;
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_60 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
commit_52 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^
this stmt is child function---count_interesting_parents-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:count_interesting_parents 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _53 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_54 = (unsigned int) _53;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_176>
_27 = p_26->item;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = p_26->item;
./benchmarks/git/leak_2/git_leak_2.c:230:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_176>
_28 = _27->object.flags;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = _27->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:230:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _28 & 2;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = _28 & 2;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = (unsigned int) _31;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = (unsigned int) _31;
./benchmarks/git/leak_2/git_leak_2.c:233:13: warning: use location
   if (flags & UNINTERESTING) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_29 = (unsigned int) _28;
bb index := 6
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_29 = (unsigned int) _28;
./benchmarks/git/leak_2/git_leak_2.c:230:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_34 = p_26;
./benchmarks/git/leak_2/git_leak_2.c:238:8: warning: use location
   last = p;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_255;
bb index := 5
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_255;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_255;
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================
_24 = list_255;
./benchmarks/git/leak_2/git_leak_2.c:221:2: warning: use location
  show_list("bisection 2 entry", 0, 0, *commit_list);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_197 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _24);
bb index := 5
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_197 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _24);
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_197 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _24);
bb index := 5
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 entry", 0, 0, _24);
./benchmarks/git/leak_2/git_leak_2.c:221:2: warning: use location
  show_list("bisection 2 entry", 0, 0, *commit_list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_251 = VDEF <.MEM_250>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_251 = VDEF <.MEM_250>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_251 = VDEF <.MEM_250>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_251 = VDEF <.MEM_250>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21->item = 0B;
./benchmarks/git/leak_2/git_leak_2.c:33:17: warning: use location
  new_list->item = item;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_254 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_254 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_254 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_254 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_254 = new_list_21;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = new_list_21;
./benchmarks/git/leak_2/git_leak_2.c:36:9: warning: use location
  return new_list;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
 }
 ^
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_2>
return;
./benchmarks/git/leak_2/git_leak_2.c:28:1: warning: use location
beacuse in succ := 9 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 9

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_250 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21 = malloc (16);
./benchmarks/git/leak_2/git_leak_2.c:32:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list)); /* allocation site */
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cb0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cad7e0 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f0886ce3138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
list_255 = PHI <list_256(D)(2), list_262(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_26 = PHI <p_25(5), p_49(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# .MEM_248 = VDEF <.MEM_176>
p_26->next = last_33;
./benchmarks/git/leak_2/git_leak_2.c:237:11: warning: use location
   p->next = last;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_248 = VDEF <.MEM_176>
p_26->next = last_33;
./benchmarks/git/leak_2/git_leak_2.c:237:11: warning: use location
   p->next = last;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_49 = PHI <next_30(7), next_30(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
last_50 = PHI <last_33(7), p_26(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
list_41 = last_33;
./benchmarks/git/leak_2/git_leak_2.c:243:7: warning: use location
  list = last;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_41 = last_33;
./benchmarks/git/leak_2/git_leak_2.c:243:7: warning: use location
  list = last;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_234 = VDEF <.MEM_233>
clear_distance (list_41);
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: use location
   clear_distance(list);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_234 = VDEF <.MEM_233>
clear_distance (list_41);
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: use location
   clear_distance(list);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_221 = best_127;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_221 = best_127;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_189>
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_189>
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_222 = VDEF <.MEM_190>
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_222 = VDEF <.MEM_190>
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_118 = _116 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_118 = _116 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_191>
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_191>
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_137 = _135 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_137 = _135 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_218>
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_218>
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_218 = VDEF <.MEM_192>
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_218 = VDEF <.MEM_192>
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
# VUSE <.MEM_177>
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_177>
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_63 = _53 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_63 = _53 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
last_34 = p_26;
./benchmarks/git/leak_2/git_leak_2.c:238:8: warning: use location
   last = p;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
last_34 = p_26;
./benchmarks/git/leak_2/git_leak_2.c:238:8: warning: use location
   last = p;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :4 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cb89d8
    type <pointer_type 0x7f0887180a80
        type <integer_type 0x7f08871795e8 int public SI
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f08871795e8 precision 32 min <integer_cst 0x7f0887165de0 -2147483648> max <integer_cst 0x7f0887165df8 2147483647>
            pointer_to_this <pointer_type 0x7f0887180a80>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cb77e0 weights>
    def_stmt weights_43 = calloc (_42, 4);
    version 43
    ptr-info 0x7f0886ce3240>
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
weights_43 = calloc (_42, 4);
./benchmarks/git/leak_2/git_leak_2.c:247:10: warning: use location
  weights = xcalloc(on_list, sizeof(*weights));
          ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb89d8
    type <pointer_type 0x7f0887180a80
        type <integer_type 0x7f08871795e8 int public SI
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f08871795e8 precision 32 min <integer_cst 0x7f0887165de0 -2147483648> max <integer_cst 0x7f0887165df8 2147483647>
            pointer_to_this <pointer_type 0x7f0887180a80>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cb77e0 weights>
    def_stmt weights_43 = calloc (_42, 4);
    version 43
    ptr-info 0x7f0886ce3240>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_61 = weights_43 + _59;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = weights_43 + _59;
./benchmarks/git/leak_2/git_leak_2.c:115:19: warning: use location
   p->item->util = &weights[n++];
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cb89d8
    type <pointer_type 0x7f0887180a80
        type <integer_type 0x7f08871795e8 int public SI
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f08871795e8 precision 32 min <integer_cst 0x7f0887165de0 -2147483648> max <integer_cst 0x7f0887165df8 2147483647>
            pointer_to_this <pointer_type 0x7f0887180a80>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cb77e0 weights>
    def_stmt weights_43 = calloc (_42, 4);
    version 43
    ptr-info 0x7f0886ce3240>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
./benchmarks/git/leak_2/git_leak_2.c:247:10: warning: use location
  weights = xcalloc(on_list, sizeof(*weights));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_61 = weights_43 + _59;
./benchmarks/git/leak_2/git_leak_2.c:115:19: warning: use location
   p->item->util = &weights[n++];
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with array ========= [0m
[40;36m ======= relate stmt argument:array ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cdaab0
    type <pointer_type 0x7f0886c9c888
        type <record_type 0x7f0886c9c7e0 commit_dist TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c7e0 fields <field_decl 0x7f0886c9a428 commit> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9c888> chain <type_decl 0x7f0886c9a4c0 D.4043>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cd7f30 array>
    def_stmt array_132 = calloc (_131, 16);
    version 132
    ptr-info 0x7f0886ce3540>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0886c92ed0 type <integer_type 0x7f08871797e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <addr_expr 0x7f0886c83f60
    type <pointer_type 0x7f0886c98930
        type <array_type 0x7f0886c98888 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c923a8 constant 144>
            unit size <integer_cst 0x7f0886c92390 constant 18>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c987e0>
            pointer_to_this <pointer_type 0x7f0886c98930>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0886caefc8 type <array_type 0x7f0886c98888>
        readonly constant static "bisection 2 entry\000">
    ./benchmarks/git/leak_2/git_leak_2.c:221:12 start: ./benchmarks/git/leak_2/git_leak_2.c:221:12 finish: ./benchmarks/git/leak_2/git_leak_2.c:221:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886c83c60
    type <pointer_type 0x7f0886c98bd0
        type <array_type 0x7f0886c98b28 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c923c0 constant 152>
            unit size <integer_cst 0x7f0886c921b0 constant 19>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c98a80>
            pointer_to_this <pointer_type 0x7f0886c98bd0>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0886cb3050 type <array_type 0x7f0886c98b28>
        readonly constant static "bisection 2 sorted\000">
    ./benchmarks/git/leak_2/git_leak_2.c:244:12 start: ./benchmarks/git/leak_2/git_leak_2.c:244:12 finish: ./benchmarks/git/leak_2/git_leak_2.c:244:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cb8990
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _42 = (long unsigned int) on_list_39;
    version 42>
_42 = (long unsigned int) on_list_39;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
weights_43 = calloc (_42, 4);
./benchmarks/git/leak_2/git_leak_2.c:247:10: warning: use location
  weights = xcalloc(on_list, sizeof(*weights));
          ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8990
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _42 = (long unsigned int) on_list_39;
    version 42>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_61 = weights_43 + _59;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = weights_43 + _59;
./benchmarks/git/leak_2/git_leak_2.c:115:19: warning: use location
   p->item->util = &weights[n++];
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cb8990
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _42 = (long unsigned int) on_list_39;
    version 42>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_200 = VDEF <.MEM_198>
weights_43 = calloc (_42, 4);
./benchmarks/git/leak_2/git_leak_2.c:247:10: warning: use location
  weights = xcalloc(on_list, sizeof(*weights));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_61 = weights_43 + _59;
./benchmarks/git/leak_2/git_leak_2.c:115:19: warning: use location
   p->item->util = &weights[n++];
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cc7a20
    type <pointer_type 0x7f0886c8f2a0
        type <record_type 0x7f0886c8f348 commit BLK
            size <integer_cst 0x7f0887181030 constant 512>
            unit size <integer_cst 0x7f088721ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f348 fields <field_decl 0x7f0886c91da8 object> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f2a0> chain <type_decl 0x7f0886c91e40 D.4008>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cc2f30 commit>
    def_stmt commit_52 = p_51->item;
    version 52
    ptr-info 0x7f0886ce32b8>
# VUSE <.MEM_178>
commit_52 = p_51->item;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^
this stmt is child function---count_interesting_parents-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7a20
    type <pointer_type 0x7f0886c8f2a0
        type <record_type 0x7f0886c8f348 commit BLK
            size <integer_cst 0x7f0887181030 constant 512>
            unit size <integer_cst 0x7f088721ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f348 fields <field_decl 0x7f0886c91da8 object> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f2a0> chain <type_decl 0x7f0886c91e40 D.4008>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cc2f30 commit>
    def_stmt commit_52 = p_51->item;
    version 52
    ptr-info 0x7f0886ce32b8>
trace fucntion name:count_interesting_parents 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _53 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_63 == 0)
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
    if (!(flags & TREESAME)) {
       ^
if (_63 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_54 = (unsigned int) _53;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cc7a20
    type <pointer_type 0x7f0886c8f2a0
        type <record_type 0x7f0886c8f348 commit BLK
            size <integer_cst 0x7f0887181030 constant 512>
            unit size <integer_cst 0x7f088721ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f348 fields <field_decl 0x7f0886c91da8 object> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f2a0> chain <type_decl 0x7f0886c91e40 D.4008>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0886cc2f30 commit>
    def_stmt commit_52 = p_51->item;
    version 52
    ptr-info 0x7f0886ce32b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_63 = _53 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_63 == 0)
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
    if (!(flags & TREESAME)) {
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f088716d6c0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_51 = PHI <list_41(13), p_67(19)>
    version 51
    ptr-info 0x7f0886ce32a0>
p_51 = PHI <list_41(13), p_67(19)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_177>
p_67 = p_51->next;
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :weight_set
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :weight_set
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f088716d6c0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_51 = PHI <list_41(13), p_67(19)>
    version 51
    ptr-info 0x7f0886ce32a0>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_60 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
commit_52 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^
this stmt is child function---count_interesting_parents-----

 ================== trace ================== 
 <ssa_name 0x7f088716d6c0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_51 = PHI <list_41(13), p_67(19)>
    version 51
    ptr-info 0x7f0886ce32a0>
trace fucntion name:count_interesting_parents 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _53 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_63 == 0)
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
    if (!(flags & TREESAME)) {
       ^
if (_63 == 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_54 = (unsigned int) _53;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (p_51 != 0B)
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (p_51 != 0B)
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (p_51 != 0B)
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (p_51 != 0B)
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_51 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:111:2: warning: use location
  for (n = 0, p = list; p; p = p->next) {
  ^
if (p_51 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:111:2: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f088716d6c0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_51 = PHI <list_41(13), p_67(19)>
    version 51
    ptr-info 0x7f0886ce32a0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_177>
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_63 = _53 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_63 == 0)
./benchmarks/git/leak_2/git_leak_2.c:118:7: warning: use location
    if (!(flags & TREESAME)) {
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (p_51 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:111:2: warning: use location
  for (n = 0, p = list; p; p = p->next) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cba6a0
    type <pointer_type 0x7f0886c98f18
        type <array_type 0x7f0886c98e70 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c92408 constant 176>
            unit size <integer_cst 0x7f0886c923f0 constant 22>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c98dc8>
            pointer_to_this <pointer_type 0x7f0886c98f18>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0887164d50 type <array_type 0x7f0886c98e70>
        readonly constant static "bisection 2 count one\000">
    ./benchmarks/git/leak_2/git_leak_2.c:121:15 start: ./benchmarks/git/leak_2/git_leak_2.c:121:15 finish: ./benchmarks/git/leak_2/git_leak_2.c:121:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cba7a0
    type <pointer_type 0x7f0886c9c150
        type <array_type 0x7f0886c9c0a8 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c92438 constant 184>
            unit size <integer_cst 0x7f0886c92420 constant 23>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c9c000>
            pointer_to_this <pointer_type 0x7f0886c9c150>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0887164db0 type <array_type 0x7f0886c9c0a8>
        readonly constant static "bisection 2 initialize\000">
    ./benchmarks/git/leak_2/git_leak_2.c:138:12 start: ./benchmarks/git/leak_2/git_leak_2.c:138:12 finish: ./benchmarks/git/leak_2/git_leak_2.c:138:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
p_68 = PHI <list_41(21), p_80(30)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_180>
p_80 = p_68->next;
bb index := 30
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_68 = PHI <list_41(21), p_80(30)>
bb index := 31
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_68 = PHI <list_41(21), p_80(30)>
bb index := 31
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 != 0)
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
   if (!find_all && halfway(p, nr))
                 ^
if (_76 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^
if (_92 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^
if (q_88 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _83 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = p_81;
bb index := 48
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 48 ,possiable got to succ := 80

======================================================================
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^
if (nr_37 > counted_106)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
Cond in fucntion main basic block 51
 ================== possible direct basic block ================= 
from main basic block 52
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:1 
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
nr_47 = PHI <nr_37(7), nr_46(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
this stmt is child function---count_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:count_distance 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^
if (_74 != -2)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_77 = p_68;
bb index := 28
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 80

======================================================================
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_76 != 0)
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
   if (!find_all && halfway(p, nr))
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
p_68 = PHI <list_41(21), p_80(30)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_180>
p_80 = p_68->next;
bb index := 30
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_68 = PHI <list_41(21), p_80(30)>
bb index := 31
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_68 = PHI <list_41(21), p_80(30)>
bb index := 31
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_76 != 0)
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
   if (!find_all && halfway(p, nr))
                 ^
if (_76 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^
if (_92 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^
if (q_88 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _83 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = p_81;
bb index := 48
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 48 ,possiable got to succ := 80

======================================================================
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^
if (nr_37 > counted_106)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
Cond in fucntion main basic block 51
 ================== possible direct basic block ================= 
from main basic block 52
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:1 
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
nr_47 = PHI <nr_37(7), nr_46(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
this stmt is child function---count_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:count_distance 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^
if (_74 != -2)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_77 = p_68;
bb index := 28
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 80

======================================================================
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cc7ea0
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_68 = PHI <list_41(21), p_80(30)>
    version 68
    ptr-info 0x7f0886ce3318>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_68 = PHI <list_41(21), p_80(30)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_76 != 0)
./benchmarks/git/leak_2/git_leak_2.c:163:17: warning: use location
   if (!find_all && halfway(p, nr))
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
list_41 = last_33;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_234 = VDEF <.MEM_233>
clear_distance (list_41);
clear_distance (list_41);
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: use location
   clear_distance(list);
   ^
this stmt is child function---clear_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:clear_distance 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate stmt argument:list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_221 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_221 = best_127;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_107 = _221;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate stmt argument:list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^
if (best_44 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
Cond in fucntion main basic block 76
 ================== possible direct basic block ================= 
from main basic block 77
 ================== possible direct basic block ================= 
from main basic block 80
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_128 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_120 > _121)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
Cond in fucntion main basic block 56
 ================== possible direct basic block ================= 
from main basic block 57
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = _116 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^
if (_118 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 54
 ================== possible direct basic block ================= 
from main basic block 55
 ================== possible direct basic block ================= 
from main basic block 56
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _135 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_139 > _140)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
Cond in fucntion main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== possible direct basic block ================= 
from main basic block 68
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_213 = list_41;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_213 = list_41;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_108 = _213;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
Cond in fucntion main basic block 47
 ================== possible direct basic block ================= 
from main basic block 48
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_180>
p_80 = p_68->next;
bb index := 30
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
this stmt is child function---count_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:count_distance 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^
if (_74 != -2)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_77 = p_68;
bb index := 28
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 80

======================================================================
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^
if (nr_37 > counted_106)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
Cond in fucntion main basic block 51
 ================== possible direct basic block ================= 
from main basic block 52
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nr_47 = PHI <nr_37(7), nr_46(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _83 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = p_81;
bb index := 48
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 48 ,possiable got to succ := 80

======================================================================
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_51 = PHI <list_41(13), p_67(19)>
bb index := 20
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_177>
p_67 = p_51->next;
bb index := 19
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_60 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
commit_52 = p_51->item;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^
this stmt is child function---count_interesting_parents-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
trace fucntion name:count_interesting_parents 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = _53 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_54 = (unsigned int) _53;
bb index := 14
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cb8948
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7510 list>
    def_stmt list_41 = last_33;
    version 41
    ptr-info 0x7f0886ce3228>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_234 = VDEF <.MEM_233>
clear_distance (list_41);
./benchmarks/git/leak_2/git_leak_2.c:160:3: warning: use location
   clear_distance(list);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_168 = PHI <list_41(70), p_174(73)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_221 = best_127;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_189>
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_222 = VDEF <.MEM_190>
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_118 = _116 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_191>
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_137 = _135 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_218>
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_218 = VDEF <.MEM_192>
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_213 = list_41;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_108 = _213;
./benchmarks/git/leak_2/git_leak_2.c:211:10: warning: use location
   return best_bisection_sorted(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_51 = PHI <list_41(13), p_67(19)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_177>
p_67 = p_51->next;
./benchmarks/git/leak_2/git_leak_2.c:111:29: warning: use location
  for (n = 0, p = list; p; p = p->next) {
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_247 = VDEF <.MEM_243>
weight_set (p_51, -2);
./benchmarks/git/leak_2/git_leak_2.c:133:4: warning: use location
    weight_set(p, -2);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_244 = VDEF <.MEM_243>
weight_set (p_51, -1);
./benchmarks/git/leak_2/git_leak_2.c:130:4: warning: use location
    weight_set(p, -1);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_245 = VDEF <.MEM_243>
weight_set (p_51, 1);
./benchmarks/git/leak_2/git_leak_2.c:119:5: warning: use location
     weight_set(p, 1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_60 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:115:4: warning: use location
   p->item->util = &weights[n++];
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_242 = VDEF <.MEM_178>
_60->util = _61;
./benchmarks/git/leak_2/git_leak_2.c:115:17: warning: use location
   p->item->util = &weights[n++];
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
commit_52 = p_51->item;
./benchmarks/git/leak_2/git_leak_2.c:112:18: warning: use location
   struct commit *commit = p->item;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_243 = VDEF <.MEM_242>
_62 = count_interesting_parents (commit_52);
./benchmarks/git/leak_2/git_leak_2.c:116:11: warning: use location
   switch (count_interesting_parents(commit)) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_178>
_53 = commit_52->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:113:34: warning: use location
   unsigned flags = commit->object.flags;
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_63 = _53 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_64 = (unsigned int) _63;
./benchmarks/git/leak_2/git_leak_2.c:118:16: warning: use location
    if (!(flags & TREESAME)) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_54 = (unsigned int) _53;
./benchmarks/git/leak_2/git_leak_2.c:113:12: warning: use location
   unsigned flags = commit->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cba960
    type <pointer_type 0x7f0886c9c348
        type <array_type 0x7f0886c9c2a0 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c92480 constant 216>
            unit size <integer_cst 0x7f0886c92468 constant 27>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c9c1f8>
            pointer_to_this <pointer_type 0x7f0886c9c348>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0887164ea0 type <array_type 0x7f0886c9c2a0>
        readonly constant static "bisection 2 count_distance\000">
    ./benchmarks/git/leak_2/git_leak_2.c:168:12 start: ./benchmarks/git/leak_2/git_leak_2.c:168:12 finish: ./benchmarks/git/leak_2/git_leak_2.c:168:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
p_81 = PHI <p_105(49), list_41(52)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
Cond in fucntion main basic block 47
 ================== possible direct basic block ================= 
from main basic block 48
 ================== possible direct basic block ================= 
from main basic block 49
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^
this stmt is child function---halfway-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:halfway 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_180>
p_80 = p_68->next;
bb index := 30
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 30 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
this stmt is child function---count_distance-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:count_distance 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^
if (_74 != -2)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^
if (best_44 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
Cond in fucntion main basic block 76
 ================== possible direct basic block ================= 
from main basic block 77
 ================== possible direct basic block ================= 
from main basic block 80
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_77 = p_68;
bb index := 28
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 80

======================================================================
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
bb index := 21
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
all_257 = nr_37;
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
bb index := 13
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 80

======================================================================
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^
if (nr_37 > counted_106)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
Cond in fucntion main basic block 51
 ================== possible direct basic block ================= 
from main basic block 52
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:1 
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
nr_47 = PHI <nr_37(7), nr_46(10)>
bb index := 11
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^
if (_92 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_96 = _83 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = p_81;
bb index := 48
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 48 ,possiable got to succ := 80

======================================================================
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886ccb288
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2d80 p>
    def_stmt p_81 = PHI <p_105(49), list_41(52)>
    version 81
    ptr-info 0x7f0886ce3378>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_186>
p_105 = p_81->next;
./benchmarks/git/leak_2/git_leak_2.c:171:23: warning: use location
   for (p = list; p; p = p->next) {
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_81 = PHI <p_105(49), list_41(52)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_230 = VDEF <.MEM_185>
_103 = halfway (p_81, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:201:21: warning: use location
    if (!find_all && halfway(p, nr))
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_103 != 0)
./benchmarks/git/leak_2/git_leak_2.c:201:18: warning: use location
    if (!find_all && halfway(p, nr))
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_203 = VDEF <.MEM_188>
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:206:2: warning: use location
  show_list("bisection 2 counted all", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_229 = VDEF <.MEM_228>
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:194:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_202 = VDEF <.MEM_181>
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:168:2: warning: use location
  show_list("bisection 2 count_distance", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_235 = VDEF <.MEM_234>
_76 = halfway (p_68, nr_37);
./benchmarks/git/leak_2/git_leak_2.c:163:20: warning: use location
   if (!find_all && halfway(p, nr))
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_180>
p_80 = p_68->next;
./benchmarks/git/leak_2/git_leak_2.c:154:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_233 = VDEF <.MEM_232>
weight_set (p_68, _75);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_232 = VDEF <.MEM_231>
_75 = count_distance (p_68);
./benchmarks/git/leak_2/git_leak_2.c:159:3: warning: use location
   weight_set(p, count_distance(p));
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_231 = VDEF <.MEM_181>
_74 = weight (p_68);
./benchmarks/git/leak_2/git_leak_2.c:157:7: warning: use location
   if (weight(p) != -2)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_74 != -2)
./benchmarks/git/leak_2/git_leak_2.c:157:6: warning: use location
   if (weight(p) != -2)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_69 = p_68->item;
./benchmarks/git/leak_2/git_leak_2.c:155:8: warning: use location
   if (p->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_181>
_70 = _69->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:155:22: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_71 = (unsigned int) _70;
./benchmarks/git/leak_2/git_leak_2.c:155:29: warning: use location
   if (p->item->object.flags & UNINTERESTING)
                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_77 = p_68;
./benchmarks/git/leak_2/git_leak_2.c:164:11: warning: use location
    return p;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_201 = VDEF <.MEM_178>
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:138:2: warning: use location
  show_list("bisection 2 initialize", counted, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_246 = VDEF <.MEM_245>
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:121:5: warning: use location
     show_list("bisection 2 count one",
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
all_257 = nr_37;
./benchmarks/git/leak_2/git_leak_2.c:246:7: warning: use location
  *all = nr;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_198 = VDEF <.MEM_176>
show_list ("bisection 2 sorted", 0, nr_37, list_41);
./benchmarks/git/leak_2/git_leak_2.c:244:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (nr_37 > counted_106)
./benchmarks/git/leak_2/git_leak_2.c:170:8: warning: use location
  while (counted < nr) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_131 = (long unsigned int) nr_37;
./benchmarks/git/leak_2/git_leak_2.c:66:30: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_47 = PHI <nr_37(7), nr_46(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
nr_46 = PHI <nr_37(8), nr_38(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
_86 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:177:14: warning: use location
    for (q = p->item->parents; q; q = q->next) {
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_223>
q_87 = _86->parents;
./benchmarks/git/leak_2/git_leak_2.c:177:11: warning: use location
    for (q = p->item->parents; q; q = q->next) {
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_82 = p_81->item;
./benchmarks/git/leak_2/git_leak_2.c:173:22: warning: use location
    unsigned flags = p->item->object.flags;
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_187>
_83 = _82->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:173:36: warning: use location
    unsigned flags = p->item->object.flags;
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_96 = _83 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
flags_84 = (unsigned int) _83;
./benchmarks/git/leak_2/git_leak_2.c:173:13: warning: use location
    unsigned flags = p->item->object.flags;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_223 = VDEF <.MEM_187>
_85 = weight (p_81);
./benchmarks/git/leak_2/git_leak_2.c:175:13: warning: use location
    if (0 <= weight(p))
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_104 = p_81;
./benchmarks/git/leak_2/git_leak_2.c:202:12: warning: use location
     return p;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
q_88 = PHI <q_87(35), q_95(39)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_94 >= 0)
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
     if (0 <= weight(q))
        ^
if (_94 >= 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^
if (_92 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^
if (q_88 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_94 >= 0)
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
     if (0 <= weight(q))
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
q_88 = PHI <q_87(35), q_95(39)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^
this stmt is child function---weight_set-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight_set 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_94 >= 0)
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
     if (0 <= weight(q))
        ^
if (_94 >= 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 41
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = _90 & 2;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^
if (_92 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
Cond in fucntion main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== possible direct basic block ================= 
from main basic block 38
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^
if (q_88 == 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886ccb480
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cc2e10 q>
    def_stmt q_88 = PHI <q_87(35), q_95(39)>
    version 88
    ptr-info 0x7f0886ce33d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_225 = VDEF <.MEM_184>
_102 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_226 = VDEF <.MEM_225>
weight_set (p_81, _102);
./benchmarks/git/leak_2/git_leak_2.c:198:5: warning: use location
     weight_set(p, weight(q));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_227 = VDEF <.MEM_184>
_98 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:192:19: warning: use location
     weight_set(p, weight(q)+1);
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_99 = _98 + 1;
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_228 = VDEF <.MEM_227>
weight_set (p_81, _99);
./benchmarks/git/leak_2/git_leak_2.c:192:5: warning: use location
     weight_set(p, weight(q)+1);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_182>
q_95 = q_88->next;
./benchmarks/git/leak_2/git_leak_2.c:177:36: warning: use location
    for (q = p->item->parents; q; q = q->next) {
                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
q_88 = PHI <q_87(35), q_95(39)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_224 = VDEF <.MEM_183>
_94 = weight (q_88);
./benchmarks/git/leak_2/git_leak_2.c:180:14: warning: use location
     if (0 <= weight(q))
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (_94 >= 0)
./benchmarks/git/leak_2/git_leak_2.c:180:8: warning: use location
     if (0 <= weight(q))
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_89 = q_88->item;
./benchmarks/git/leak_2/git_leak_2.c:178:10: warning: use location
     if (q->item->object.flags & UNINTERESTING)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_183>
_90 = _89->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:178:24: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_92 = _90 & 2;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_92 != 0)
./benchmarks/git/leak_2/git_leak_2.c:178:8: warning: use location
     if (q->item->object.flags & UNINTERESTING)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_93 = (unsigned int) _92;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_91 = (unsigned int) _90;
./benchmarks/git/leak_2/git_leak_2.c:178:31: warning: use location
     if (q->item->object.flags & UNINTERESTING)
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (q_88 == 0B)
./benchmarks/git/leak_2/git_leak_2.c:183:7: warning: use location
    if (!q)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cbaae0
    type <pointer_type 0x7f0886c98f18
        type <array_type 0x7f0886c98e70 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f0886c92408 constant 176>
            unit size <integer_cst 0x7f0886c923f0 constant 22>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c98dc8>
            pointer_to_this <pointer_type 0x7f0886c98f18>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0886cc5060 type <array_type 0x7f0886c98e70>
        readonly constant static "bisection 2 count one\000">
    ./benchmarks/git/leak_2/git_leak_2.c:194:15 start: ./benchmarks/git/leak_2/git_leak_2.c:194:15 finish: ./benchmarks/git/leak_2/git_leak_2.c:194:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cbac20
    type <pointer_type 0x7f0886c9c540
        type <array_type 0x7f0886c9c498 type <integer_type 0x7f0886c983f0 char>
            BLK
            size <integer_cst 0x7f08871810a8 constant 192>
            unit size <integer_cst 0x7f0887181078 constant 24>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f0886c9c3f0>
            pointer_to_this <pointer_type 0x7f0886c9c540>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f0886cc50c0 type <array_type 0x7f0886c9c498>
        readonly constant static "bisection 2 counted all\000">
    ./benchmarks/git/leak_2/git_leak_2.c:206:12 start: ./benchmarks/git/leak_2/git_leak_2.c:206:12 finish: ./benchmarks/git/leak_2/git_leak_2.c:206:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f088716d750
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7090 p>
    def_stmt p_114 = PHI <list_41(53), p_126(60)>
    version 114
    ptr-info 0x7f0886ce3498>
p_114 = PHI <list_41(53), p_126(60)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f088716d750
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7090 p>
    def_stmt p_114 = PHI <list_41(53), p_126(60)>
    version 114
    ptr-info 0x7f0886ce3498>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_120 > _121)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
Cond in fucntion main basic block 56
 ================== possible direct basic block ================= 
from main basic block 57
 ================== possible direct basic block ================= 
from main basic block 58
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_118 = _116 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^
if (_118 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 54
 ================== possible direct basic block ================= 
from main basic block 55
 ================== possible direct basic block ================= 
from main basic block 56
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_221 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_221 = best_127;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_107 = _221;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_236 = _109;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
_236 = _109;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
best_44 = _236;
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f088716d750
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7090 p>
    def_stmt p_114 = PHI <list_41(53), p_126(60)>
    version 114
    ptr-info 0x7f0886ce3498>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f088716d750
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7090 p>
    def_stmt p_114 = PHI <list_41(53), p_126(60)>
    version 114
    ptr-info 0x7f0886ce3498>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^
if (best_44 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
Cond in fucntion main basic block 76
 ================== possible direct basic block ================= 
from main basic block 77
 ================== possible direct basic block ================= 
from main basic block 80
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_128 = best_127;
bb index := 62
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 62 ,possiable got to succ := 80

======================================================================
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f088716d750
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7090 p>
    def_stmt p_114 = PHI <list_41(53), p_126(60)>
    version 114
    ptr-info 0x7f0886ce3498>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_189>
p_126 = p_114->next;
./benchmarks/git/leak_2/git_leak_2.c:45:22: warning: use location
  for (p = list; p; p = p->next) {
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_114 = PHI <list_41(53), p_126(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_222 = VDEF <.MEM_190>
distance_120 = weight (p_114);
./benchmarks/git/leak_2/git_leak_2.c:51:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_120 > _121)
./benchmarks/git/leak_2/git_leak_2.c:52:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_124 = PHI <distance_120(56), distance_122(57)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_distance_123 = PHI <-1(53), best_distance_130(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_122 = nr_37 - distance_120;
./benchmarks/git/leak_2/git_leak_2.c:53:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_115 = p_114->item;
./benchmarks/git/leak_2/git_leak_2.c:47:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_190>
_116 = _115->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:47:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_118 = _116 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_118 != 0)
./benchmarks/git/leak_2/git_leak_2.c:49:6: warning: use location
   if (flags & TREESAME)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_119 = (unsigned int) _118;
./benchmarks/git/leak_2/git_leak_2.c:49:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_117 = (unsigned int) _116;
./benchmarks/git/leak_2/git_leak_2.c:47:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_129 = PHI <best_127(55), best_127(58), p_114(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
best_127 = PHI <list_41(53), best_129(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_221 = best_127;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
_107 = _221;
./benchmarks/git/leak_2/git_leak_2.c:209:10: warning: use location
   return best_bisection(list, nr);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: Use after free error!: free location 
     free_commit_list(list);
     ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_236 = _109;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
best_44 = _236;
./benchmarks/git/leak_2/git_leak_2.c:250:7: warning: use location
  best = do_find_bisection(list, nr, weights, find_all);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_128 = best_127;
./benchmarks/git/leak_2/git_leak_2.c:60:9: warning: use location
  return best;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
best_125 = p_114;
./benchmarks/git/leak_2/git_leak_2.c:55:9: warning: use location
    best = p;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
_131 = (long unsigned int) nr_37;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f088716d708
    type <integer_type 0x7f08871797e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0887179738 precision 64 min <integer_cst 0x7f0887165eb8 0> max <integer_cst 0x7f0887167500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f08871859d8>>
   
    def_stmt _131 = (long unsigned int) nr_37;
    version 131>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_204 = VDEF <.MEM_203>
array_132 = calloc (_131, 16);
./benchmarks/git/leak_2/git_leak_2.c:66:22: warning: use location
  struct commit_dist *array = xcalloc(nr, sizeof(*array));
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_166 = array_132 + _165;
./benchmarks/git/leak_2/git_leak_2.c:90:18: warning: use location
   p->item = array[i].commit;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_161 = array_132 + _160;
./benchmarks/git/leak_2/git_leak_2.c:87:37: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
                                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_156 = array_132 + _155;
./benchmarks/git/leak_2/git_leak_2.c:84:31: warning: use location
   struct object *obj = &(array[i].commit->object);
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_145 = array_132 + _144;
./benchmarks/git/leak_2/git_leak_2.c:79:8: warning: use location
   array[cnt].commit = p->item;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
p_133 = PHI <list_41(63), p_152(69)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^
this stmt is child function---add_name_decoration-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
trace fucntion name:add_name_decoration 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_193>
_172 = p_168->next;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with p ========= [0m
[40;36m ======= relate stmt argument:p ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = _135 & 4;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_137 != 0)
./benchmarks/git/leak_2/git_leak_2.c:74:6: warning: use location
   if (flags & TREESAME)
      ^
if (_137 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:74:6: warning: use location
Cond in fucntion main basic block 64
 ================== possible direct basic block ================= 
from main basic block 65
 ================== possible direct basic block ================= 
from main basic block 66
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^
if (distance_139 > _140)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
Cond in fucntion main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== possible direct basic block ================= 
from main basic block 68
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_133 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:70:2: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
  ^
if (p_133 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:70:2: warning: use location
Cond in fucntion main basic block 70
 ================== possible direct basic block ================= 
from main basic block 64
 ================== possible direct basic block ================= 
from main basic block 74
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cdaaf8
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cd7ea0 p>
    def_stmt p_133 = PHI <list_41(63), p_152(69)>
    version 133
    ptr-info 0x7f0886ce3558>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_191>
p_152 = p_133->next;
./benchmarks/git/leak_2/git_leak_2.c:70:31: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_133 = PHI <list_41(63), p_152(69)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_218>
_146 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:79:24: warning: use location
   array[cnt].commit = p->item;
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_219 = VDEF <.MEM_218>
_145->commit = _146;
./benchmarks/git/leak_2/git_leak_2.c:79:21: warning: use location
   array[cnt].commit = p->item;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_157 = _156->commit;
./benchmarks/git/leak_2/git_leak_2.c:84:34: warning: use location
   struct object *obj = &(array[i].commit->object);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
obj_158 = &_157->object;
./benchmarks/git/leak_2/git_leak_2.c:84:18: warning: use location
   struct object *obj = &(array[i].commit->object);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_216 = VDEF <.MEM_215>
add_name_decoration (0, _163, obj_158);
./benchmarks/git/leak_2/git_leak_2.c:88:3: warning: use location
   add_name_decoration(DECORATION_NONE, buf.buf, obj);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_216>
_167 = _166->commit;
./benchmarks/git/leak_2/git_leak_2.c:90:21: warning: use location
   p->item = array[i].commit;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_217 = VDEF <.MEM_216>
p_168->item = _167;
./benchmarks/git/leak_2/git_leak_2.c:90:11: warning: use location
   p->item = array[i].commit;
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_217>
p_170 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:92:6: warning: use location
    p = p->next;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
p_174 = PHI <p_168(71), p_170(72)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_193>
_172 = p_168->next;
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_209 = VDEF <.MEM_208>
p_168->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:95:10: warning: use location
  p->next = NULL;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_134 = p_133->item;
./benchmarks/git/leak_2/git_leak_2.c:72:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_192>
_135 = _134->object.flags;
./benchmarks/git/leak_2/git_leak_2.c:72:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_137 = _135 & 4;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
if (_137 != 0)
./benchmarks/git/leak_2/git_leak_2.c:74:6: warning: use location
   if (flags & TREESAME)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_138 = (unsigned int) _137;
./benchmarks/git/leak_2/git_leak_2.c:74:13: warning: use location
   if (flags & TREESAME)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
flags_136 = (unsigned int) _135;
./benchmarks/git/leak_2/git_leak_2.c:72:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_218 = VDEF <.MEM_192>
distance_139 = weight (p_133);
./benchmarks/git/leak_2/git_leak_2.c:76:12: warning: use location
   distance = weight(p);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (distance_139 > _140)
./benchmarks/git/leak_2/git_leak_2.c:77:6: warning: use location
   if (nr - distance < distance)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: Use after free error!: free location 
  free_commit_list(p->next);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
distance_150 = PHI <distance_139(66), distance_141(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_220 = VDEF <.MEM_219>
_149->distance = distance_150;
./benchmarks/git/leak_2/git_leak_2.c:80:23: warning: use location
   array[cnt].distance = distance;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# VUSE <.MEM_214>
_162 = _161->distance;
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_215 = VDEF <.MEM_214>
strbuf_addf (&buf, "dist=%d", _162);
./benchmarks/git/leak_2/git_leak_2.c:87:3: warning: use location
   strbuf_addf(&buf, "dist=%d", array[i].distance);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
distance_141 = nr_37 - distance_139;
./benchmarks/git/leak_2/git_leak_2.c:78:13: warning: use location
    distance = nr - distance;
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (p_133 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:70:2: warning: use location
  for (p = list, cnt = 0; p; p = p->next) {
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cdf0c0
    type <pointer_type 0x7f0886c9ca80
        type <record_type 0x7f0886c9c738 strbuf BLK
            size <integer_cst 0x7f08871810a8 constant 192>
            unit size <integer_cst 0x7f0887181078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c738 fields <field_decl 0x7f0886c9a260 alloc> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9ca80> chain <type_decl 0x7f0886c9a2f8 D.4040>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f0886cdd000 buf type <record_type 0x7f0886c9c738 strbuf>
        addressable used BLK file ./benchmarks/git/leak_2/git_leak_2.c line 67 col 16 size <integer_cst 0x7f08871810a8 192> unit size <integer_cst 0x7f0887181078 24>
        align 128 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd7630 buf>
        chain <var_decl 0x7f0886cdd090 cnt type <integer_type 0x7f08871795e8 int>
            used SI file ./benchmarks/git/leak_2/git_leak_2.c line 68 col 6
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd75a0 cnt> chain <var_decl 0x7f0886cdd120 i>>>
    ./benchmarks/git/leak_2/git_leak_2.c:86:3 start: ./benchmarks/git/leak_2/git_leak_2.c:86:3 finish: ./benchmarks/git/leak_2/git_leak_2.c:86:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cdf160
    type <pointer_type 0x7f0886c9ca80
        type <record_type 0x7f0886c9c738 strbuf BLK
            size <integer_cst 0x7f08871810a8 constant 192>
            unit size <integer_cst 0x7f0887181078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c738 fields <field_decl 0x7f0886c9a260 alloc> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9ca80> chain <type_decl 0x7f0886c9a2f8 D.4040>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f0886cdd000 buf type <record_type 0x7f0886c9c738 strbuf>
        addressable used BLK file ./benchmarks/git/leak_2/git_leak_2.c line 67 col 16 size <integer_cst 0x7f08871810a8 192> unit size <integer_cst 0x7f0887181078 24>
        align 128 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd7630 buf>
        chain <var_decl 0x7f0886cdd090 cnt type <integer_type 0x7f08871795e8 int>
            used SI file ./benchmarks/git/leak_2/git_leak_2.c line 68 col 6
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd75a0 cnt> chain <var_decl 0x7f0886cdd120 i>>>
    ./benchmarks/git/leak_2/git_leak_2.c:87:3 start: ./benchmarks/git/leak_2/git_leak_2.c:87:3 finish: ./benchmarks/git/leak_2/git_leak_2.c:87:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f0887165f78 type <integer_type 0x7f08871795e8 int> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7f0886ce0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
   
    def_stmt _172 = p_168->next;
    version 172
    ptr-info 0x7f0886ce36c0>
# VUSE <.MEM_193>
_172 = p_168->next;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ce0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
   
    def_stmt _172 = p_168->next;
    version 172
    ptr-info 0x7f0886ce36c0>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
bb index := 75
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 75 ,possiable got to succ := 80

======================================================================
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886ce0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
   
    def_stmt _172 = p_168->next;
    version 172
    ptr-info 0x7f0886ce36c0>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886ce0630
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
   
    def_stmt _172 = p_168->next;
    version 172
    ptr-info 0x7f0886ce36c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_208 = VDEF <.MEM_193>
free_commit_list (_172);
./benchmarks/git/leak_2/git_leak_2.c:94:2: warning: use location
  free_commit_list(p->next);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f0886cdf280
    type <pointer_type 0x7f0886c9ca80
        type <record_type 0x7f0886c9c738 strbuf BLK
            size <integer_cst 0x7f08871810a8 constant 192>
            unit size <integer_cst 0x7f0887181078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c9c738 fields <field_decl 0x7f0886c9a260 alloc> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c9ca80> chain <type_decl 0x7f0886c9a2f8 D.4040>>
        unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f0886cdd000 buf type <record_type 0x7f0886c9c738 strbuf>
        addressable used BLK file ./benchmarks/git/leak_2/git_leak_2.c line 67 col 16 size <integer_cst 0x7f08871810a8 192> unit size <integer_cst 0x7f0887181078 24>
        align 128 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd7630 buf>
        chain <var_decl 0x7f0886cdd090 cnt type <integer_type 0x7f08871795e8 int>
            used SI file ./benchmarks/git/leak_2/git_leak_2.c line 68 col 6
            size <integer_cst 0x7f0887165e28 constant 32>
            unit size <integer_cst 0x7f0887165e40 constant 4>
            align 32 context <function_decl 0x7f0886c90b00 main> abstract_origin <var_decl 0x7f0886cd75a0 cnt> chain <var_decl 0x7f0886cdd120 i>>>
    ./benchmarks/git/leak_2/git_leak_2.c:96:2 start: ./benchmarks/git/leak_2/git_leak_2.c:96:2 finish: ./benchmarks/git/leak_2/git_leak_2.c:96:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0886cb8a20
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7630 best>
    def_stmt best_44 = _236;
    version 44
    ptr-info 0x7f0886ce3258>
best_44 = _236;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_259 = best_44;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_259;
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
bb index := 80
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 80 ,possiable got to succ := 80

======================================================================
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
this stmt is child function---free_commit_list-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8a20
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7630 best>
    def_stmt best_44 = _236;
    version 44
    ptr-info 0x7f0886ce3258>
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_2>
free (top_5);
./benchmarks/git/leak_2/git_leak_2.c:19:3: warning: use location
   free(top);
   ^
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with best ========= [0m
[40;36m ======= relate stmt argument:best ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^
this stmt is child function---weight-----

 ================== trace ================== 
 <ssa_name 0x7f0886cb8a20
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7630 best>
    def_stmt best_44 = _236;
    version 44
    ptr-info 0x7f0886ce3258>
trace fucntion name:weight 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
reaches_258 = _45;
bb index := 79
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 79 ,possiable got to succ := 80

======================================================================
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (best_44 != 0B)
bb index := 76
# VUSE <.MEM_16>
return 0;
lto1: warning: use location
beacuse in succ := 80 have return or exit
gimple stmt in succ := 76 ,possiable got to succ := 80

======================================================================
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^
if (best_44 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
Cond in fucntion main basic block 76
 ================== possible direct basic block ================= 
from main basic block 77
 ================== possible direct basic block ================= 
from main basic block 80
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f0886cb8a20
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
    var <var_decl 0x7f0886cb7630 best>
    def_stmt best_44 = _236;
    version 44
    ptr-info 0x7f0886ce3258>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: use location
    free(p);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: use location
  free(array);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: use location
  free(weights);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
list_259 = best_44;
./benchmarks/git/leak_2/git_leak_2.c:257:15: warning: use location
  *commit_list = best;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
_1 = list_259;
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_240 = VDEF <.MEM_196>
free (weights_43);
./benchmarks/git/leak_2/git_leak_2.c:256:2: warning: Use after free error!: free location 
  free(weights);
  ^
# .MEM_16 = VDEF <.MEM_240>
free_commit_list (_1);
./benchmarks/git/leak_2/git_leak_2.c:268:5: warning: use location
     free_commit_list(list);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_238 = VDEF <.MEM_195>
_45 = weight (best_44);
./benchmarks/git/leak_2/git_leak_2.c:254:14: warning: use location
   *reaches = weight(best);
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
reaches_258 = _45;
./benchmarks/git/leak_2/git_leak_2.c:254:12: warning: use location
   *reaches = weight(best);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
# .MEM_237 = VDEF <.MEM_194>
best_44->next = 0B;
./benchmarks/git/leak_2/git_leak_2.c:253:15: warning: use location
    best->next = NULL;              /* memory leak */
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_249 = VDEF <.MEM_176>
free (p_26);
./benchmarks/git/leak_2/git_leak_2.c:234:4: warning: Use after free error!: free location 
    free(p);
    ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_211 = VDEF <.MEM_210>
free (array_132);
./benchmarks/git/leak_2/git_leak_2.c:97:2: warning: Use after free error!: free location 
  free(array);
  ^
if (best_44 != 0B)
./benchmarks/git/leak_2/git_leak_2.c:251:5: warning: use location
  if (best) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f088716d870
    type <pointer_type 0x7f0886c8f0a8
        type <record_type 0x7f0886c8f1f8 commit_list TI
            size <integer_cst 0x7f0887165c30 constant 128>
            unit size <integer_cst 0x7f0887165c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0886c8f1f8 fields <field_decl 0x7f0886c91a18 item> context <translation_unit_decl 0x7f0887170168 ./benchmarks/git/leak_2/git_leak_2.c>
            pointer_to_this <pointer_type 0x7f0886c8f0a8> chain <type_decl 0x7f0886c91ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f0887165be8 constant 64>
        unit size <integer_cst 0x7f0887165c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0886c8f3f0>>
   
    def_stmt _1 = list_259;
    version 1
    ptr-info 0x7f0886ce3120>
_1 = list_259;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:free_commit_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
top_5 = list_14;
if (top_5 != 0B)
  goto <bb 4>; [95.93%]
else
  goto <bb 5>; [4.07%]

=======is loop:1=========

 bb index 4 
<bb 4> [81.54%]:
_6 = top_5->item;

=======is loop:1=========

 bb index 5 
<bb 5> [85.00%]:
# _8 = PHI <0B(3), _6(4)>
if (top_5 != 0B)
  goto <bb 6>; [57.44%]
else
  goto <bb 7>; [42.56%]

=======is loop:1=========

 bb index 6 
<bb 6> [48.82%]:
_7 = top_5->next;
list_16 = _7;
free (top_5);

=======is loop:1=========

 bb index 7 
<bb 7> [85.00%]:
# list_13 = PHI <list_14(5), list_16(6)>
_12 = _8;

=======is loop:1=========

 bb index 8 
<bb 8> [100.00%]:
# list_14 = PHI <list_15(D)(2), list_13(7)>
_1 = list_14;
if (_1 != 0B)
  goto <bb 3>; [85.00%]
else
  goto <bb 9>; [15.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [15.00%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [0.46%]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [4.60%]:
new_list_21 = malloc (16);
new_list_21->item = 0B;
_22 = list_255;
new_list_21->next = _22;
list_262 = new_list_21;
_23 = new_list_21;
_254 = new_list_21;
i_12 = i_2 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [5.06%]:
# i_2 = PHI <0(2), i_12(3)>
# list_255 = PHI <list_256(D)(2), list_262(3)>
if (i_2 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.46%]:
_24 = list_255;
show_list ("bisection 2 entry", 0, 0, _24);
p_25 = list_255;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [2.61%]:
_27 = p_26->item;
_28 = _27->object.flags;
flags_29 = (unsigned int) _28;
next_30 = p_26->next;
_31 = _28 & 2;
_32 = (unsigned int) _31;
if (_31 != 0)
  goto <bb 7>; [19.52%]
else
  goto <bb 8>; [80.48%]

=======is loop:1=========

 bb index 7 
<bb 7> [0.51%]:
free (p_26);
// predicted unlikely by continue predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [2.10%]:
p_26->next = last_33;
last_34 = p_26;
_35 = _28 & 4;
_36 = (unsigned int) _35;
if (_35 == 0)
  goto <bb 9>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [1.05%]:
nr_38 = nr_37 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [2.10%]:
# nr_46 = PHI <nr_37(8), nr_38(9)>
on_list_40 = on_list_39 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [2.61%]:
# nr_47 = PHI <nr_37(7), nr_46(10)>
# on_list_48 = PHI <on_list_39(7), on_list_40(10)>
# p_49 = PHI <next_30(7), next_30(10)>
# last_50 = PHI <last_33(7), p_26(10)>

=======is loop:1=========

 bb index 12 
<bb 12> [3.07%]:
# nr_37 = PHI <0(5), nr_47(11)>
# on_list_39 = PHI <0(5), on_list_48(11)>
# p_26 = PHI <p_25(5), p_49(11)>
# last_33 = PHI <0B(5), last_50(11)>
if (p_26 != 0B)
  goto <bb 6>; [85.00%]
else
  goto <bb 13>; [15.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [0.46%]:
list_41 = last_33;
show_list ("bisection 2 sorted", 0, nr_37, list_41);
all_257 = nr_37;
_42 = (long unsigned int) on_list_39;
weights_43 = calloc (_42, 4);
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [2.60%]:
commit_52 = p_51->item;
_53 = commit_52->object.flags;
flags_54 = (unsigned int) _53;
_56 = n_55;
n_57 = n_55 + 1;
_58 = (long unsigned int) n_55;
_59 = _58 * 4;
_60 = p_51->item;
_61 = weights_43 + _59;
_60->util = _61;
_62 = count_interesting_parents (commit_52);
switch (_62) <default: <L2> [33.33%], case 0: <L0> [33.33%], case 1: <L1> [33.33%]>

=======is loop:1=========

 bb index 15 
<L0> [0.87%]:
_63 = _53 & 4;
_64 = (unsigned int) _63;
if (_63 == 0)
  goto <bb 16>; [33.00%]
else
  goto <bb 19>; [67.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [0.29%]:
weight_set (p_51, 1);
counted_66 = counted_65 + 1;
show_list ("bisection 2 count one", counted_66, nr_37, list_41);
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 17 
<L1> [0.87%]:
weight_set (p_51, -1);
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 18 
<L2> [0.87%]:
weight_set (p_51, -2);

=======is loop:1=========

 bb index 19 
<bb 19> [2.60%]:
# counted_110 = PHI <counted_65(15), counted_66(16), counted_65(17), counted_65(18)>
p_67 = p_51->next;

=======is loop:1=========

 bb index 20 
<bb 20> [3.06%]:
# n_55 = PHI <0(13), n_57(19)>
# counted_65 = PHI <0(13), counted_110(19)>
# p_51 = PHI <list_41(13), p_67(19)>
if (p_51 != 0B)
  goto <bb 14>; [85.00%]
else
  goto <bb 21>; [15.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [0.46%]:
show_list ("bisection 2 initialize", counted_65, nr_37, list_41);
goto <bb 31>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [5.39%]:
_69 = p_68->item;
_70 = _69->object.flags;
_71 = (unsigned int) _70;
_72 = _70 & 2;
_73 = (unsigned int) _72;
if (_72 != 0)
  goto <bb 23>; [50.00%]
else
  goto <bb 24>; [50.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [2.69%]:
// predicted unlikely by continue predictor.
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [2.69%]:
_74 = weight (p_68);
if (_74 != -2)
  goto <bb 25>; [66.00%]
else
  goto <bb 26>; [34.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [1.78%]:
// predicted unlikely by continue predictor.
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [0.92%]:
_75 = count_distance (p_68);
weight_set (p_68, _75);
clear_distance (list_41);
if (find_all_5(D) == 0)
  goto <bb 27>; [33.00%]
else
  goto <bb 29>; [67.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [0.30%]:
_76 = halfway (p_68, nr_37);
if (_76 != 0)
  goto <bb 28>; [7.50%]
else
  goto <bb 29>; [92.50%]

=======is loop:0=========

 bb index 28 
<bb 28> [0.02%]:
_77 = p_68;
goto <bb 76>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [0.89%]:
counted_79 = counted_78 + 1;

=======is loop:1=========

 bb index 30 
<bb 30> [5.37%]:
# counted_111 = PHI <counted_78(23), counted_78(25), counted_79(29)>
p_80 = p_68->next;

=======is loop:1=========

 bb index 31 
<bb 31> [5.83%]:
# counted_78 = PHI <counted_65(21), counted_111(30)>
# p_68 = PHI <list_41(21), p_80(30)>
if (p_68 != 0B)
  goto <bb 22>; [92.50%]
else
  goto <bb 32>; [7.50%]

=======is loop:0=========

 bb index 32 
<bb 32> [0.44%]:
show_list ("bisection 2 count_distance", counted_78, nr_37, list_41);
goto <bb 51>; [100.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [29.61%]:
_82 = p_81->item;
_83 = _82->object.flags;
flags_84 = (unsigned int) _83;
_85 = weight (p_81);
if (_85 >= 0)
  goto <bb 34>; [62.96%]
else
  goto <bb 35>; [37.04%]

=======is loop:1=========

 bb index 34 
<bb 34> [18.64%]:
// predicted unlikely by continue predictor.
goto <bb 49>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [10.97%]:
_86 = p_81->item;
q_87 = _86->parents;
goto <bb 40>; [100.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [92.50%]:
_89 = q_88->item;
_90 = _89->object.flags;
_91 = (unsigned int) _90;
_92 = _90 & 2;
_93 = (unsigned int) _92;
if (_92 != 0)
  goto <bb 37>; [50.00%]
else
  goto <bb 38>; [50.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [46.25%]:
// predicted unlikely by continue predictor.
goto <bb 39>; [100.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [46.25%]:
_94 = weight (q_88);
if (_94 >= 0)
  goto <bb 41>; [7.50%]
else
  goto <bb 39>; [92.50%]

=======is loop:1=========

 bb index 39 
<bb 39> [89.03%]:
q_95 = q_88->next;

=======is loop:1=========

 bb index 40 
<bb 40> [100.00%]:
# q_88 = PHI <q_87(35), q_95(39)>
if (q_88 != 0B)
  goto <bb 36>; [92.50%]
else
  goto <bb 41>; [7.50%]

=======is loop:1=========

 bb index 41 
<bb 41> [10.97%]:
if (q_88 == 0B)
  goto <bb 42>; [17.43%]
else
  goto <bb 43>; [82.57%]

=======is loop:1=========

 bb index 42 
<bb 42> [1.91%]:
// predicted unlikely by continue predictor.
goto <bb 49>; [100.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [9.06%]:
_96 = _83 & 4;
_97 = (unsigned int) _96;
if (_96 == 0)
  goto <bb 44>; [50.00%]
else
  goto <bb 45>; [50.00%]

=======is loop:1=========

 bb index 44 
<bb 44> [4.53%]:
_98 = weight (q_88);
_99 = _98 + 1;
weight_set (p_81, _99);
counted_101 = counted_100 + 1;
show_list ("bisection 2 count one", counted_101, nr_37, list_41);
goto <bb 46>; [100.00%]

=======is loop:1=========

 bb index 45 
<bb 45> [4.53%]:
_102 = weight (q_88);
weight_set (p_81, _102);

=======is loop:1=========

 bb index 46 
<bb 46> [9.06%]:
# counted_112 = PHI <counted_101(44), counted_100(45)>
if (find_all_5(D) == 0)
  goto <bb 47>; [33.00%]
else
  goto <bb 49>; [67.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [2.99%]:
_103 = halfway (p_81, nr_37);
if (_103 != 0)
  goto <bb 48>; [7.50%]
else
  goto <bb 49>; [92.50%]

=======is loop:0=========

 bb index 48 
<bb 48> [0.22%]:
_104 = p_81;
goto <bb 76>; [100.00%]

=======is loop:1=========

 bb index 49 
<bb 49> [29.39%]:
# counted_113 = PHI <counted_100(34), counted_100(42), counted_112(46), counted_112(47)>
p_105 = p_81->next;

=======is loop:1=========

 bb index 50 
<bb 50> [32.01%]:
# counted_100 = PHI <counted_113(49), counted_106(52)>
# p_81 = PHI <p_105(49), list_41(52)>
if (p_81 != 0B)
  goto <bb 33>; [92.50%]
else
  goto <bb 51>; [7.50%]

=======is loop:1=========

 bb index 51 
<bb 51> [2.84%]:
# counted_106 = PHI <counted_78(32), counted_100(50)>
if (nr_37 > counted_106)
  goto <bb 52>; [92.50%]
else
  goto <bb 53>; [7.50%]

=======is loop:1=========

 bb index 52 
<bb 52> [2.63%]:
goto <bb 50>; [100.00%]

=======is loop:0=========

 bb index 53 
<bb 53> [0.21%]:
show_list ("bisection 2 counted all", counted_106, nr_37, list_41);
if (find_all_5(D) == 0)
  goto <bb 61>; [46.00%]
else
  goto <bb 63>; [54.00%]

=======is loop:1=========

 bb index 54 
<bb 54> [0.55%]:
_115 = p_114->item;
_116 = _115->object.flags;
flags_117 = (unsigned int) _116;
_118 = _116 & 4;
_119 = (unsigned int) _118;
if (_118 != 0)
  goto <bb 55>; [50.00%]
else
  goto <bb 56>; [50.00%]

=======is loop:1=========

 bb index 55 
<bb 55> [0.28%]:
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 56 
<bb 56> [0.28%]:
distance_120 = weight (p_114);
_121 = nr_37 - distance_120;
if (distance_120 > _121)
  goto <bb 57>; [50.00%]
else
  goto <bb 58>; [50.00%]

=======is loop:1=========

 bb index 57 
<bb 57> [0.14%]:
distance_122 = nr_37 - distance_120;

=======is loop:1=========

 bb index 58 
<bb 58> [0.28%]:
# distance_124 = PHI <distance_120(56), distance_122(57)>
if (best_distance_123 < distance_124)
  goto <bb 59>; [50.00%]
else
  goto <bb 60>; [50.00%]

=======is loop:1=========

 bb index 59 
<bb 59> [0.14%]:
best_125 = p_114;

=======is loop:1=========

 bb index 60 
<bb 60> [0.55%]:
# best_129 = PHI <best_127(55), best_127(58), p_114(59)>
# best_distance_130 = PHI <best_distance_123(55), best_distance_123(58), distance_124(59)>
p_126 = p_114->next;

=======is loop:1=========

 bb index 61 
<bb 61> [0.65%]:
# p_114 = PHI <list_41(53), p_126(60)>
# best_127 = PHI <list_41(53), best_129(60)>
# best_distance_123 = PHI <-1(53), best_distance_130(60)>
if (p_114 != 0B)
  goto <bb 54>; [85.00%]
else
  goto <bb 62>; [15.00%]

=======is loop:0=========

 bb index 62 
<bb 62> [0.10%]:
_128 = best_127;
_221 = best_127;
_107 = _221;
goto <bb 76>; [100.00%]

=======is loop:0=========

 bb index 63 
<bb 63> [0.11%]:
_131 = (long unsigned int) nr_37;
array_132 = calloc (_131, 16);
buf.alloc = 0;
buf.len = 0;
buf.buf = &strbuf_slopbuf;
goto <bb 70>; [100.00%]

=======is loop:1=========

 bb index 64 
<bb 64> [0.65%]:
_134 = p_133->item;
_135 = _134->object.flags;
flags_136 = (unsigned int) _135;
_137 = _135 & 4;
_138 = (unsigned int) _137;
if (_137 != 0)
  goto <bb 65>; [50.00%]
else
  goto <bb 66>; [50.00%]

=======is loop:1=========

 bb index 65 
<bb 65> [0.33%]:
// predicted unlikely by continue predictor.
goto <bb 69>; [100.00%]

=======is loop:1=========

 bb index 66 
<bb 66> [0.33%]:
distance_139 = weight (p_133);
_140 = nr_37 - distance_139;
if (distance_139 > _140)
  goto <bb 67>; [50.00%]
else
  goto <bb 68>; [50.00%]

=======is loop:1=========

 bb index 67 
<bb 67> [0.16%]:
distance_141 = nr_37 - distance_139;

=======is loop:1=========

 bb index 68 
<bb 68> [0.33%]:
# distance_150 = PHI <distance_139(66), distance_141(67)>
_143 = (long unsigned int) cnt_142;
_144 = _143 * 16;
_145 = array_132 + _144;
_146 = p_133->item;
_145->commit = _146;
_147 = (long unsigned int) cnt_142;
_148 = _147 * 16;
_149 = array_132 + _148;
_149->distance = distance_150;
cnt_151 = cnt_142 + 1;

=======is loop:1=========

 bb index 69 
<bb 69> [0.65%]:
# cnt_173 = PHI <cnt_142(65), cnt_151(68)>
p_152 = p_133->next;

=======is loop:1=========

 bb index 70 
<bb 70> [0.77%]:
# p_133 = PHI <list_41(63), p_152(69)>
# cnt_142 = PHI <0(63), cnt_173(69)>
if (p_133 != 0B)
  goto <bb 64>; [85.00%]
else
  goto <bb 74>; [15.00%]

=======is loop:1=========

 bb index 71 
<bb 71> [0.65%]:
_154 = (long unsigned int) i_153;
_155 = _154 * 16;
_156 = array_132 + _155;
_157 = _156->commit;
obj_158 = &_157->object;
strbuf_reset (&buf);
_159 = (long unsigned int) i_153;
_160 = _159 * 16;
_161 = array_132 + _160;
_162 = _161->distance;
strbuf_addf (&buf, "dist=%d", _162);
_163 = buf.buf;
add_name_decoration (0, _163, obj_158);
_164 = (long unsigned int) i_153;
_165 = _164 * 16;
_166 = array_132 + _165;
_167 = _166->commit;
p_168->item = _167;
_169 = cnt_142 + -1;
if (i_153 < _169)
  goto <bb 72>; [98.00%]
else
  goto <bb 73>; [2.00%]

=======is loop:1=========

 bb index 72 
<bb 72> [0.64%]:
p_170 = p_168->next;

=======is loop:1=========

 bb index 73 
<bb 73> [0.65%]:
# p_174 = PHI <p_168(71), p_170(72)>
i_171 = i_153 + 1;

=======is loop:1=========

 bb index 74 
<bb 74> [0.77%]:
# p_168 = PHI <list_41(70), p_174(73)>
# i_153 = PHI <0(70), i_171(73)>
if (cnt_142 > i_153)
  goto <bb 71>; [85.00%]
else
  goto <bb 75>; [15.00%]

=======is loop:0=========

 bb index 75 
<bb 75> [0.11%]:
_172 = p_168->next;
free_commit_list (_172);
p_168->next = 0B;
strbuf_release (&buf);
free (array_132);
buf ={v} {CLOBBER};
_213 = list_41;
_108 = _213;

=======is loop:0=========

 bb index 76 
<bb 76> [0.46%]:
# _109 = PHI <p_68(28), p_81(48), _107(62), _108(75)>
_236 = _109;
best_44 = _236;
if (best_44 != 0B)
  goto <bb 77>; [73.26%]
else
  goto <bb 80>; [26.74%]

=======is loop:0=========

 bb index 77 
<bb 77> [0.34%]:
if (find_all_5(D) == 0)
  goto <bb 78>; [50.00%]
else
  goto <bb 79>; [50.00%]

=======is loop:0=========

 bb index 78 
<bb 78> [0.17%]:
best_44->next = 0B;

=======is loop:0=========

 bb index 79 
<bb 79> [0.34%]:
_45 = weight (best_44);
reaches_258 = _45;

=======is loop:0=========

 bb index 80 
<bb 80> [0.46%]:
free (weights_43);
list_259 = best_44;
_1 = list_259;
free_commit_list (_1);
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 20208 [0m
[40;34m    collect time: : 0.002504 s [0m
[40;34m    algorithm time: 0.187491 s [0m
[40;34m    gimple stmt count : : 221 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccwirBPM.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x77): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0xea): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x12c): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x14a): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x15e): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x19a): undefined reference to `count_interesting_parents'
/usr/bin/ld: <artificial>:(.text+0x1b9): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x1e1): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x1f3): undefined reference to `count_distance'
/usr/bin/ld: <artificial>:(.text+0x202): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x20f): undefined reference to `clear_distance'
/usr/bin/ld: <artificial>:(.text+0x21f): undefined reference to `halfway'
/usr/bin/ld: <artificial>:(.text+0x249): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x269): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x279): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x297): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x2a7): undefined reference to `halfway'
/usr/bin/ld: <artificial>:(.text+0x2d7): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x2fb): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x30a): undefined reference to `weight_set'
/usr/bin/ld: <artificial>:(.text+0x33e): undefined reference to `weight'
/usr/bin/ld: <artificial>:(.text+0x37b): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x3af): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x3cf): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x3f8): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x42a): undefined reference to `show_list'
/usr/bin/ld: /tmp/ccwirBPM.ltrans0.ltrans.o:<artificial>:(.text+0x44a): more undefined references to `show_list' follow
/usr/bin/ld: /tmp/ccwirBPM.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x494): undefined reference to `weight'
collect2: error: ld returned 1 exit status
