In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:0:
./benchmarks/git/use_after_free_2/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_2/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/use_after_free_2/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_2/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/use_after_free_2/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_2/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/use_after_free_2/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:10:0:
./benchmarks/git/use_after_free_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_2/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_2/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:0:
./benchmarks/git/use_after_free_2/../git.h: At top level:
./benchmarks/git/use_after_free_2/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_2/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_2/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_2/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_2/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:2: warning: implicit declaration of function ‘strbuf_addstr’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
  strbuf_addstr(err, "Starting a child failed:");
  ^~~~~~~~~~~~~
  strbuf_swap
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:3: warning: implicit declaration of function ‘strbuf_addf’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
   strbuf_addf(err, " %s", cp->argv[i]);
   ^~~~~~~~~~~
   strbuf_swap
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:7: warning: implicit declaration of function ‘online_cpus’ [-Wimplicit-function-declaration]
   n = online_cpus();
       ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:2: warning: implicit declaration of function ‘trace_printf’; did you mean ‘dprintf’? [-Wimplicit-function-declaration]
  trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
  ^~~~~~~~~~~~
  dprintf
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:2: warning: implicit declaration of function ‘strbuf_init’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
  strbuf_init(&pp->buffered_output, 0);
  ^~~~~~~~~~~
  strbuf_swap
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:3: warning: implicit declaration of function ‘child_process_init’ [-Wimplicit-function-declaration]
   child_process_init(&pp->children[i].process);
   ^~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:3: warning: implicit declaration of function ‘strbuf_addbuf’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
   strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
   ^~~~~~~~~~~~~
   strbuf_swap
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:3: warning: implicit declaration of function ‘strbuf_reset’; did you mean ‘strbuf_swap’? [-Wimplicit-function-declaration]
   strbuf_reset(&pp->children[i].err);
   ^~~~~~~~~~~~
   strbuf_swap
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:6: warning: implicit declaration of function ‘start_command’ [-Wimplicit-function-declaration]
  if (start_command(&pp->children[i].process)) {
      ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: implicit declaration of function ‘kill’ [-Wimplicit-function-declaration]
    kill(pp->children[i].process.pid, signo);
    ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:10: warning: implicit declaration of function ‘finish_command’ [-Wimplicit-function-declaration]
   code = finish_command(&pp->children[i].process);
          ^~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: implicit declaration of function ‘wait_or_whine’ [-Wimplicit-function-declaration]
     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
               ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: implicit declaration of function ‘child_process_clear’ [-Wimplicit-function-declaration]
     child_process_clear(cmd);
     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: At top level:
./benchmarks/git/use_after_free_2/git_uaf_2.c:326:6: warning: conflicting types for ‘child_process_clear’
 void child_process_clear(struct child_process *child)
      ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: note: previous implicit declaration of ‘child_process_clear’ was here
     child_process_clear(cmd);
     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:2: warning: implicit declaration of function ‘argv_array_clear’ [-Wimplicit-function-declaration]
  argv_array_clear(&child->args);
  ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3: warning: implicit declaration of function ‘pp_buffer_stderr’ [-Wimplicit-function-declaration]
   pp_buffer_stderr(&pp, output_timeout);
   ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3: warning: implicit declaration of function ‘pp_output’ [-Wimplicit-function-declaration]
   pp_output(&pp);
   ^~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2: warning: implicit declaration of function ‘pp_cleanup’ [-Wimplicit-function-declaration]
  pp_cleanup(&pp);
  ^~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:2: warning: implicit declaration of function ‘argv_array_pushv’ [-Wimplicit-function-declaration]
  argv_array_pushv(&cp->args, d->argv);
  ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:7: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  if (!strcmp(argv[1], "start-command-ENOENT")) {
       ^~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:8: warning: implicit declaration of function ‘run_command’; did you mean ‘finish_command’? [-Wimplicit-function-declaration]
   exit(run_command(&proc));
        ^~~~~~~~~~~
        finish_command
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 2
succs:= 6
--------GIMPLE Cond -------
succs:= 2
succs:= 5
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 16
succs:= 18
--------GIMPLE Cond -------
succs:= 19
succs:= 19
--------GIMPLE Cond -------
succs:= 21
succs:= 21
--------GIMPLE Cond -------
succs:= 23
--------GIMPLE Cond -------
succs:= 24
succs:= 23
succs:= 24
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 27
succs:= 28
--------GIMPLE Cond -------
succs:= 27
succs:= 29
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
succs:= 32
--------GIMPLE Cond -------
succs:= 29
succs:= 31
succs:= 32
succs:= 33
--------GIMPLE Cond -------
succs:= 34
--------GIMPLE Cond -------
succs:= 36
--------GIMPLE Cond -------
succs:= 36
succs:= 38
--------GIMPLE Cond -------
succs:= 39
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 40
succs:= 42
--------GIMPLE Cond -------
succs:= 43
succs:= 43
--------GIMPLE Cond -------
succs:= 46
--------GIMPLE Cond -------
succs:= 46
succs:= 48
--------GIMPLE Cond -------
succs:= 39
succs:= 42
succs:= 51
--------GIMPLE Cond -------
succs:= 53
succs:= 53
--------GIMPLE Cond -------
succs:= 54
succs:= 54
succs:= 34
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 51
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 3
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 13
succs:= 13
succs:= 2
succs:= 5
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
# .MEM_337 = VDEF <.MEM_287>
_49 = __printf_chk (1, "BUG: you need to specify a get_next_task function%s", "");
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
# .MEM_314 = VDEF <.MEM_31>
_86 = __printf_chk (1, "BUG: bookkeeping is hard%s", "");
# .MEM_311 = VDEF <.MEM_299>
strbuf_addbuf (_110, _109);
# .MEM_312 = VDEF <.MEM_311>
strbuf_reset (_115);
# .MEM_303 = VDEF <.MEM_302>
_133 = start_command (_132);
# .MEM_308 = VDEF <.MEM_307>
strbuf_addbuf (_157, _156);
# .MEM_309 = VDEF <.MEM_308>
strbuf_reset (_162);
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
# .MEM_40 = VDEF <.MEM_32>
pp_buffer_stderr (&pp, 100);
# .MEM_41 = VDEF <.MEM_40>
pp_output (&pp);
# .MEM_316 = VDEF <.MEM_282>
ret_275 = wait_or_whine (_274, _273, 0);
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_276);
# .MEM_318 = VDEF <.MEM_317>
argv_array_clear (_277);
# .MEM_324 = VDEF <.MEM_323>
child_process_init (_227);
# .MEM_330 = VDEF <.MEM_324>
strbuf_addbuf (_234, _233);
# .MEM_331 = VDEF <.MEM_330>
strbuf_reset (_239);
# .MEM_325 = VDEF <.MEM_324>
fputs (_245, _240);
# .MEM_326 = VDEF <.MEM_325>
strbuf_reset (_250);
# .MEM_327 = VDEF <.MEM_326>
fputs (_252, _251);
# .MEM_328 = VDEF <.MEM_327>
strbuf_reset (_253);
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
# .MEM_45 = VDEF <.MEM_32>
pp_cleanup (&pp);
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
# .MEM_65 = VDEF <.MEM_53>
_4 = start_command (&proc);
_5 = __errno_location ();
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
# .MEM_63 = VDEF <.MEM_53>
_11 = run_command (&proc);
# .MEM_54 = VDEF <.MEM_53>
_45 = strtol (_12, 0B, 10);
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_46, no_job, 0B, task_finished, &proc);
# .MEM_56 = VDEF <.MEM_55>
_47 = __fprintf_chk (_23, 1, "check usage\n");
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:kill_children========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
    kill(pp->children[i].process.pid, signo);
    ^
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;44m =======node_fun:default_task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:default_task_finished========= [0m
[40;42m =======start_check_funciton:default_task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_22>
return 0;
In function ‘default_task_finished’:
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:2: warning: use location
  strbuf_addf(err, "A child failed with return code %d:", result);
  ^
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:3: warning: use location
   strbuf_addf(err, " %s", cp->argv[i]);
   ^
=======================Path Constaint===========================

=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:2: warning: use location
  strbuf_addf(err, "A child failed with return code %d:", result);
  ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:2: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:3: warning: use location
   strbuf_addf(err, " %s", cp->argv[i]);
   ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:3: warning: use location
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:2: warning: use location
  strbuf_addf(err, "A child failed with return code %d:", result);
  ^
=======================Path Constaint===========================

=succs:= 2
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:5: warning: use location
  if (!result)
     ^
	relate logic:= 0
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:3: warning: use location
   strbuf_addf(err, " %s", cp->argv[i]);
   ^
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:2: warning: use location
  strbuf_addf(err, "A child failed with return code %d:", result);
  ^
=======================Path Constaint===========================

=succs:= 2
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:5: warning: use location
  if (!result)
     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd101318
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef680 err>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f97dd0f97b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:default_task_finished========= [0m
[40;44m =======node_fun:default_start_failure========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_start_failure  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:strbuf_addstr========= [0m
[40;33m =======POP node_fun stack:strbuf_addstr========= [0m
[40;42m =======pre_check_funciton:default_start_failure========= [0m
[40;42m =======start_check_funciton:default_start_failure========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:3: warning: use location
   strbuf_addf(err, " %s", cp->argv[i]);
   ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:2: warning: use location
  strbuf_addstr(err, "Starting a child failed:");
  ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:2: warning: use location
  strbuf_addstr(err, "Starting a child failed:");
  ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:3: warning: use location
   strbuf_addf(err, " %s", cp->argv[i]);
   ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:2: warning: use location
  strbuf_addstr(err, "Starting a child failed:");
  ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
bb index := 2
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:2: warning: use location
  strbuf_addstr(err, "Starting a child failed:");
  ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd1018b8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd0ef880 err>
    def_stmt GIMPLE_NOP
    version 14
    ptr-info 0x7f97dd0f9870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:default_start_failure========= [0m
[40;44m =======node_fun:run_processes_parallel========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
    kill(pp->children[i].process.pid, signo);
    ^
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();

 ================== trace ptable================== 
trace fucntion name:online_cpus 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---online_cpus-----
this other function ------online_cpus-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
n_48 = PHI <n_15(D)(2), n_47(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:20: warning: use location
  pp->max_processes = n;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_58)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:2: warning: use location
  for (i = 0; i < n; i++) {
  ^
if (n_48 > i_58)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:2: warning: use location
Cond in fucntion run_processes_parallel basic block 12
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 11
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_54 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_52 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:2: warning: use location
  trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
  ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
n_47 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:5: warning: use location
   n = online_cpus();
     ^
this stmt is child function---online_cpus-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd10d300
    type <pointer_type 0x7f97dd0ea2a0
        type <array_type 0x7f97dd0ea1f8 type <integer_type 0x7f97dd0d7738 char>
            BLK
            size <integer_cst 0x7f97dd0da558 constant 448>
            unit size <integer_cst 0x7f97dd0da828 constant 56>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f97dd0ea150>
            pointer_to_this <pointer_type 0x7f97dd0ea2a0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f97dd0eef00 type <array_type 0x7f97dd0ea1f8>
        readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f97dd5adf90 type <integer_type 0x7f97dd5c15e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>
_52 = (long unsigned int) n_48;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>
_54 = (long unsigned int) n_48;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
_56 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
strbuf_init (_56, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:2: warning: use location
  strbuf_init(&pp->buffered_output, 0);
  ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
strbuf_init (_56, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:2: warning: use location
  strbuf_init(&pp->buffered_output, 0);
  ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
_62 = &_61->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
strbuf_init (_62, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:3: warning: use location
   strbuf_init(&pp->children[i].err, 0);
   ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
strbuf_init (_62, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:3: warning: use location
   strbuf_init(&pp->children[i].err, 0);
   ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
_67 = &_66->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
child_process_init (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
child_process_init (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
_110 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_299>
strbuf_addbuf (_110, _109);
strbuf_addbuf (_110, _109);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:3: warning: use location
   strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
   ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_299>
strbuf_addbuf (_110, _109);
strbuf_addbuf (_110, _109);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:3: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
_115 = &_114->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_312 = VDEF <.MEM_311>
strbuf_reset (_115);
strbuf_reset (_115);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:3: warning: use location
   strbuf_reset(&pp->children[i].err);
   ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_312 = VDEF <.MEM_311>
strbuf_reset (_115);
strbuf_reset (_115);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:3: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>
_132 = &_131->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_133 = start_command (_132);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:6: warning: use location
  if (start_command(&pp->children[i].process)) {
      ^
this stmt is child function---start_command-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_133 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:5: warning: use location
  if (start_command(&pp->children[i].process)) {
     ^
if (_133 != 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:5: warning: use location
Cond in fucntion run_processes_parallel basic block 23
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 24
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
_157 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_addbuf (_157, _156);
strbuf_addbuf (_157, _156);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:3: warning: use location
   strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
   ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_addbuf (_157, _156);
strbuf_addbuf (_157, _156);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:3: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
_162 = &_161->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_309 = VDEF <.MEM_308>
strbuf_reset (_162);
strbuf_reset (_162);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:3: warning: use location
   strbuf_reset(&pp->children[i].err);
   ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_309 = VDEF <.MEM_308>
strbuf_reset (_162);
strbuf_reset (_162);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:3: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbda0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbde0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbe20
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>
# VUSE <.MEM_282>
_274 = _193->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_275 = wait_or_whine (_274, _273, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:9: warning: use location
     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
         ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_319 = ret_275;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_194 = _319;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:8: warning: use location
   code = finish_command(&pp->children[i].process);
        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
_276 = &_193->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_276);
argv_array_clear (_276);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:2: warning: use location
  argv_array_clear(&child->args);
  ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_276);
argv_array_clear (_276);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:2: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
_277 = &_193->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_318 = VDEF <.MEM_317>
argv_array_clear (_277);
argv_array_clear (_277);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:2: warning: use location
  argv_array_clear(&child->env_array);
  ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_318 = VDEF <.MEM_317>
argv_array_clear (_277);
argv_array_clear (_277);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:2: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
_227 = &_226->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
child_process_init (_227);
child_process_init (_227);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
child_process_init (_227);
child_process_init (_227);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:3: warning: use location
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
_234 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_324>
strbuf_addbuf (_234, _233);
strbuf_addbuf (_234, _233);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:4: warning: use location
    strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
    ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_324>
strbuf_addbuf (_234, _233);
strbuf_addbuf (_234, _233);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:4: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
_239 = &_238->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_331 = VDEF <.MEM_330>
strbuf_reset (_239);
strbuf_reset (_239);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:4: warning: use location
    strbuf_reset(&pp->children[i].err);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_331 = VDEF <.MEM_330>
strbuf_reset (_239);
strbuf_reset (_239);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
# VUSE <.MEM_324>
_245 = _244->err.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
fputs (_245, _240);
fputs (_245, _240);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:4: warning: use location
    fputs(pp->children[i].err.buf, stderr);
    ^
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
fputs (_245, _240);
fputs (_245, _240);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:4: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
_250 = &_249->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
strbuf_reset (_250);
strbuf_reset (_250);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:4: warning: use location
    strbuf_reset(&pp->children[i].err);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
strbuf_reset (_250);
strbuf_reset (_250);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
# VUSE <.MEM_326>
_252 = pp.buffered_output.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
fputs (_252, _251);
fputs (_252, _251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:4: warning: use location
    fputs(pp->buffered_output.buf, stderr);
    ^
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
fputs (_252, _251);
fputs (_252, _251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:4: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
_253 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_328 = VDEF <.MEM_327>
strbuf_reset (_253);
strbuf_reset (_253);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:4: warning: use location
    strbuf_reset(&pp->buffered_output);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_328 = VDEF <.MEM_327>
strbuf_reset (_253);
strbuf_reset (_253);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbea0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbee0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;44m =======node_fun:no_job========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path no_job  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:no_job========= [0m
[40;42m =======start_check_funciton:no_job========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd13bee8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138200 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3c0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
In function ‘no_job’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:2: warning: use location
  strbuf_addf(err, "no further jobs available\n");
  ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13bee8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138200 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3c0>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:2: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13bee8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138200 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3c0>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13bee8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138200 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:no_job========= [0m
[40;44m =======node_fun:task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:task_finished========= [0m
[40;42m =======start_check_funciton:task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e000
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138480 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
In function ‘task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:2: warning: use location
  strbuf_addf(err, "asking for a quick stop\n");
  ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e000
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138480 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3d8>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:2: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e000
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138480 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3d8>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e000
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138480 err>
    def_stmt GIMPLE_NOP
    version 2
    ptr-info 0x7f97dd14b3d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:task_finished========= [0m
[40;44m =======node_fun:parallel_next========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path parallel_next  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:argv_array_pushv========= [0m
[40;33m =======POP node_fun stack:argv_array_pushv========= [0m
[40;42m =======pre_check_funciton:parallel_next========= [0m
[40;42m =======start_check_funciton:parallel_next========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e1b0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version 3
    ptr-info 0x7f97dd14b408>
_3 = &cp_10(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
In function ‘parallel_next’:
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:2: warning: use location
  argv_array_pushv(&cp->args, d->argv);
  ^
this stmt is child function---argv_array_pushv-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e1b0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version 3
    ptr-info 0x7f97dd14b408>
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:2: warning: use location
this stmt is child function---argv_array_pushv-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e1b0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version 3
    ptr-info 0x7f97dd14b408>
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e1b0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version 3
    ptr-info 0x7f97dd14b408>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e360
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138680 err>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f97dd14b450>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:2: warning: use location
  strbuf_addf(err, "preloaded output of a child\n");
  ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e360
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138680 err>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f97dd14b450>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:2: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e360
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138680 err>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f97dd14b450>
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e360
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f97dd138680 err>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f97dd14b450>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:parallel_next========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__fprintf_chk========= [0m
[40;33m =======POP node_fun stack:__fprintf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:run_processes_parallel========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 17 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
    kill(pp->children[i].process.pid, signo);
    ^
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:4: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd5b5cf0
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _10 = _9->process.pid;
    version 10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f708
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _53 = calloc (_52, 120);
    version 53
    ptr-info 0x7f97dd0f9930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f798
    type <pointer_type 0x7f97dd5c80a8
        type <void_type 0x7f97dd5c1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f97dd5c80a8>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0d79d8>>
   
    def_stmt _55 = calloc (_54, 8);
    version 55
    ptr-info 0x7f97dd0f9948>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();

 ================== trace ptable================== 
trace fucntion name:online_cpus 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---online_cpus-----
this other function ------online_cpus-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_48 = PHI <n_15(D)(2), n_47(3)>
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
n_48 = PHI <n_15(D)(2), n_47(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_285 = VDEF <.MEM_278>
pp.max_processes = n_48;
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:20: warning: use location
  pp->max_processes = n;
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_48 > i_58)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_58)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:2: warning: use location
  for (i = 0; i < n; i++) {
  ^
if (n_48 > i_58)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:2: warning: use location
Cond in fucntion run_processes_parallel basic block 12
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 11
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_54 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_54 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = (long unsigned int) n_48;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_52 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_286 = VDEF <.MEM_285>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
bb index := 4
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:2: warning: use location
  trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
  ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
 }
 ^
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
  return 0;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_284 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
n_47 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:5: warning: use location
   n = online_cpus();
     ^
this stmt is child function---online_cpus-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f558
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
    var <var_decl 0x7f97de342e10 n>
    def_stmt n_47 = online_cpus ();
    version 47>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd10d300
    type <pointer_type 0x7f97dd0ea2a0
        type <array_type 0x7f97dd0ea1f8 type <integer_type 0x7f97dd0d7738 char>
            BLK
            size <integer_cst 0x7f97dd0da558 constant 448>
            unit size <integer_cst 0x7f97dd0da828 constant 56>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f97dd0ea150>
            pointer_to_this <pointer_type 0x7f97dd0ea2a0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f97dd0eef00 type <array_type 0x7f97dd0ea1f8>
        readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f97dd5adf90 type <integer_type 0x7f97dd5c15e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>
_52 = (long unsigned int) n_48;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_294 = VDEF <.MEM_293>
_53 = calloc (_52, 120);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_53 = calloc (_52, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:17: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
                 ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_295 = VDEF <.MEM_294>
pp.children = _53;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.children = _53;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:15: warning: use location
  pp->children = xcalloc(n, sizeof(*pp->children));
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f6c0
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _52 = (long unsigned int) n_48;
    version 52>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>
_54 = (long unsigned int) n_48;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_296 = VDEF <.MEM_295>
_55 = calloc (_54, 8);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_55 = calloc (_54, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:12: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
            ^
this stmt is child function---calloc-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>
trace fucntion name:calloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_297 = VDEF <.MEM_296>
pp.pfd = _55;
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
pp.pfd = _55;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:10: warning: use location
  pp->pfd = xcalloc(n, sizeof(*pp->pfd));
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f750
    type <integer_type 0x7f97dd5c17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f97dd5c1738 precision 64 min <integer_cst 0x7f97dd5adeb8 0> max <integer_cst 0x7f97dd5af500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f97dd5cd9d8>>
   
    def_stmt _54 = (long unsigned int) n_48;
    version 54>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
_56 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
strbuf_init (_56, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:2: warning: use location
  strbuf_init(&pp->buffered_output, 0);
  ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
# .MEM_298 = VDEF <.MEM_297>
strbuf_init (_56, 0);
strbuf_init (_56, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:2: warning: use location
  strbuf_init(&pp->buffered_output, 0);
  ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f7e0
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _56 = &pp.buffered_output;
    version 56
    ptr-info 0x7f97dd0f9960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
_62 = &_61->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
strbuf_init (_62, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:3: warning: use location
   strbuf_init(&pp->children[i].err, 0);
   ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_279>
strbuf_init (_62, 0);
strbuf_init (_62, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:3: warning: use location
   strbuf_init(&pp->children[i].err, 0);
   ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10f990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _62 = &_61->err;
    version 62
    ptr-info 0x7f97dd0f99a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
_67 = &_66->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
child_process_init (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_334 = VDEF <.MEM_333>
child_process_init (_67);
child_process_init (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd10faf8
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _67 = &_66->process;
    version 67
    ptr-info 0x7f97dd0f99f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
_110 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_299>
strbuf_addbuf (_110, _109);
strbuf_addbuf (_110, _109);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:3: warning: use location
   strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
   ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_299>
strbuf_addbuf (_110, _109);
strbuf_addbuf (_110, _109);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:3: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd11d990
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _110 = &pp.buffered_output;
    version 110
    ptr-info 0x7f97dd0f9be8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
_115 = &_114->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_312 = VDEF <.MEM_311>
strbuf_reset (_115);
strbuf_reset (_115);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:3: warning: use location
   strbuf_reset(&pp->children[i].err);
   ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_312 = VDEF <.MEM_311>
strbuf_reset (_115);
strbuf_reset (_115);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:3: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd11daf8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _115 = &_114->err;
    version 115
    ptr-info 0x7f97dd0f9c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>
_132 = &_131->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_133 = start_command (_132);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:6: warning: use location
  if (start_command(&pp->children[i].process)) {
      ^
this stmt is child function---start_command-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_133 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:5: warning: use location
  if (start_command(&pp->children[i].process)) {
     ^
if (_133 != 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:5: warning: use location
Cond in fucntion run_processes_parallel basic block 23
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 24
 ================== possible direct basic block ================= 
from run_processes_parallel basic block 26
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123000
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _132 = &_131->process;
    version 132
    ptr-info 0x7f97dd0f9d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
_157 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_addbuf (_157, _156);
strbuf_addbuf (_157, _156);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:3: warning: use location
   strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
   ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_addbuf (_157, _156);
strbuf_addbuf (_157, _156);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:3: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123708
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _157 = &pp.buffered_output;
    version 157
    ptr-info 0x7f97dd0f9e70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
_162 = &_161->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_309 = VDEF <.MEM_308>
strbuf_reset (_162);
strbuf_reset (_162);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:3: warning: use location
   strbuf_reset(&pp->children[i].err);
   ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_309 = VDEF <.MEM_308>
strbuf_reset (_162);
strbuf_reset (_162);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:3: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd123870
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _162 = &_161->err;
    version 162
    ptr-info 0x7f97dd0f9eb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbda0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbde0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbe20
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>
# VUSE <.MEM_282>
_274 = _193->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ret_275 = wait_or_whine (_274, _273, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:9: warning: use location
     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
         ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_319 = ret_275;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_194 = _319;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:8: warning: use location
   code = finish_command(&pp->children[i].process);
        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133a68
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _274 = _193->pid;
    version 274>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
_276 = &_193->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_276);
argv_array_clear (_276);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:2: warning: use location
  argv_array_clear(&child->args);
  ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_276);
argv_array_clear (_276);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:2: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd5b5870
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _276 = &_193->args;
    version 276
    ptr-info 0x7f97dd14b390>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
_277 = &_193->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_318 = VDEF <.MEM_317>
argv_array_clear (_277);
argv_array_clear (_277);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:2: warning: use location
  argv_array_clear(&child->env_array);
  ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_318 = VDEF <.MEM_317>
argv_array_clear (_277);
argv_array_clear (_277);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:2: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133cf0
    type <pointer_type 0x7f97dd0e9498
        type <record_type 0x7f97dd0d72a0 argv_array TI
            size <integer_cst 0x7f97dd5adc30 constant 128>
            unit size <integer_cst 0x7f97dd5adc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d72a0 fields <field_decl 0x7f97dd0d9688 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e9498> chain <type_decl 0x7f97dd0d9720 D.3996>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _277 = &_193->env_array;
    version 277
    ptr-info 0x7f97dd14b3a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
_227 = &_226->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
child_process_init (_227);
child_process_init (_227);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:3: warning: use location
   child_process_init(&pp->children[i].process);
   ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
child_process_init (_227);
child_process_init (_227);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:3: warning: use location
this stmt is child function---child_process_init-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130ab0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _227 = &_226->process;
    version 227
    ptr-info 0x7f97dd14b180>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
_234 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_324>
strbuf_addbuf (_234, _233);
strbuf_addbuf (_234, _233);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:4: warning: use location
    strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
    ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_324>
strbuf_addbuf (_234, _233);
strbuf_addbuf (_234, _233);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:4: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130ca8
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _234 = &pp.buffered_output;
    version 234
    ptr-info 0x7f97dd14b1e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
_239 = &_238->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_331 = VDEF <.MEM_330>
strbuf_reset (_239);
strbuf_reset (_239);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:4: warning: use location
    strbuf_reset(&pp->children[i].err);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_331 = VDEF <.MEM_330>
strbuf_reset (_239);
strbuf_reset (_239);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd130e10
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _239 = &_238->err;
    version 239
    ptr-info 0x7f97dd14b228>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
# VUSE <.MEM_324>
_245 = _244->err.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
fputs (_245, _240);
fputs (_245, _240);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:4: warning: use location
    fputs(pp->children[i].err.buf, stderr);
    ^
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
fputs (_245, _240);
fputs (_245, _240);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:4: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133000
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _245 = _244->err.buf;
    version 245
    ptr-info 0x7f97dd14b288>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
_250 = &_249->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
strbuf_reset (_250);
strbuf_reset (_250);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:4: warning: use location
    strbuf_reset(&pp->children[i].err);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
strbuf_reset (_250);
strbuf_reset (_250);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133168
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _250 = &_249->err;
    version 250
    ptr-info 0x7f97dd14b2d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
# VUSE <.MEM_326>
_252 = pp.buffered_output.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
fputs (_252, _251);
fputs (_252, _251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:4: warning: use location
    fputs(pp->buffered_output.buf, stderr);
    ^
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
fputs (_252, _251);
fputs (_252, _251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:4: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd1331f8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _252 = pp.buffered_output.buf;
    version 252
    ptr-info 0x7f97dd14b300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
_253 = &pp.buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_328 = VDEF <.MEM_327>
strbuf_reset (_253);
strbuf_reset (_253);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:4: warning: use location
    strbuf_reset(&pp->buffered_output);
    ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_328 = VDEF <.MEM_327>
strbuf_reset (_253);
strbuf_reset (_253);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:4: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd133240
    type <pointer_type 0x7f97dd0d7bd0
        type <record_type 0x7f97dd0d7b28 strbuf BLK
            size <integer_cst 0x7f97dd5c90a8 constant 192>
            unit size <integer_cst 0x7f97dd5c9078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7b28 fields <field_decl 0x7f97dd0d9390 alloc> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d7bd0> chain <type_decl 0x7f97dd0d9428 D.3991>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _253 = &pp.buffered_output;
    version 253
    ptr-info 0x7f97dd14b318>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbea0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd0cbee0
    type <pointer_type 0x7f97dd0e07e0
        type <record_type 0x7f97dd0e0738 parallel_processes BLK
            size <integer_cst 0x7f97dd0da3d8 constant 704>
            unit size <integer_cst 0x7f97dd0da408 constant 88>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e0738 fields <field_decl 0x7f97dd0e1260 data> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e07e0> chain <type_decl 0x7f97dd0e12f8 D.4045>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0ea5e8>>
   
    arg 0 <var_decl 0x7f97dd0f6480 pp type <record_type 0x7f97dd0e0738 parallel_processes>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 342 col 28 size <integer_cst 0x7f97dd0da3d8 704> unit size <integer_cst 0x7f97dd0da408 88>
        align 128 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>
        chain <function_decl 0x7f97dd103700 pp_cleanup type <function_type 0x7f97dd0e3c78>
            addressable public external QI file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 371 col 2 align 8 context <function_decl 0x7f97dd0d8f00 run_processes_parallel>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:strtol========= [0m
[40;33m =======POP node_fun stack:strtol========= [0m
[40;42m =======pre add _ fucntion:run_command========= [0m
[40;33m =======POP node_fun stack:run_command========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e5a0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version 2
    ptr-info 0x7f97dd14b480>
# VUSE <.MEM_53>
_2 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:7: warning: use location
  if (!strcmp(argv[1], "start-command-ENOENT")) {
       ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e5a0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version 2
    ptr-info 0x7f97dd14b480>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:5: warning: use location
  if (!strcmp(argv[1], "start-command-ENOENT")) {
     ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:5: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e5a0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version 2
    ptr-info 0x7f97dd14b480>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd13a4c0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f97de342cf0 proc type <record_type 0x7f97dd0d7348 child_process>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 412 col 23 size <integer_cst 0x7f97dd666c30 640> unit size <integer_cst 0x7f97dd0da2d0 80>
        align 128 context <function_decl 0x7f97dd0d8b00 main>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e678
    type <pointer_type 0x7f97dd5c8a80
        type <integer_type 0x7f97dd5c15e8 int public SI
            size <integer_cst 0x7f97dd5ade28 constant 32>
            unit size <integer_cst 0x7f97dd5ade40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
            pointer_to_this <pointer_type 0x7f97dd5c8a80>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7f97dd14b498>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_65>
_6 = *_5;
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_6 = *_5;
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:35: warning: use location
   if (start_command(&proc) < 0 && errno == ENOENT)
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
if (_6 == 2)
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:32: warning: use location
   if (start_command(&proc) < 0 && errno == ENOENT)
                                ^
if (_6 == 2)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:32: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================
_5 = __errno_location ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:35: warning: use location
   if (start_command(&proc) < 0 && errno == ENOENT)
                                   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e678
    type <pointer_type 0x7f97dd5c8a80
        type <integer_type 0x7f97dd5c15e8 int public SI
            size <integer_cst 0x7f97dd5ade28 constant 32>
            unit size <integer_cst 0x7f97dd5ade40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
            pointer_to_this <pointer_type 0x7f97dd5c8a80>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7f97dd14b498>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e678
    type <pointer_type 0x7f97dd5c8a80
        type <integer_type 0x7f97dd5c15e8 int public SI
            size <integer_cst 0x7f97dd5ade28 constant 32>
            unit size <integer_cst 0x7f97dd5ade40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
            pointer_to_this <pointer_type 0x7f97dd5c8a80>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7f97dd14b498>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e750
    type <pointer_type 0x7f97dd0e37e0
        type <record_type 0x7f97dd0e3738 FILE BLK
            size <integer_cst 0x7f97dd0da420 constant 1728>
            unit size <integer_cst 0x7f97dd0da540 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e35e8 fields <field_decl 0x7f97dd0e4850 _flags> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e37e0> chain <type_decl 0x7f97dd0e48e8 D.4089>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0e8690>>
   
    def_stmt _8 = stderr;
    version 8
    ptr-info 0x7f97dd14b4c8>
# VUSE <.MEM_65>
_8 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e750
    type <pointer_type 0x7f97dd0e37e0
        type <record_type 0x7f97dd0e3738 FILE BLK
            size <integer_cst 0x7f97dd0da420 constant 1728>
            unit size <integer_cst 0x7f97dd0da540 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e35e8 fields <field_decl 0x7f97dd0e4850 _flags> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e37e0> chain <type_decl 0x7f97dd0e48e8 D.4089>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0e8690>>
   
    def_stmt _8 = stderr;
    version 8
    ptr-info 0x7f97dd14b4c8>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_67>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
this stmt is child function---__fprintf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e750
    type <pointer_type 0x7f97dd0e37e0
        type <record_type 0x7f97dd0e3738 FILE BLK
            size <integer_cst 0x7f97dd0da420 constant 1728>
            unit size <integer_cst 0x7f97dd0da540 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e35e8 fields <field_decl 0x7f97dd0e4850 _flags> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e37e0> chain <type_decl 0x7f97dd0e48e8 D.4089>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0e8690>>
   
    def_stmt _8 = stderr;
    version 8
    ptr-info 0x7f97dd14b4c8>
trace fucntion name:__fprintf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e750
    type <pointer_type 0x7f97dd0e37e0
        type <record_type 0x7f97dd0e3738 FILE BLK
            size <integer_cst 0x7f97dd0da420 constant 1728>
            unit size <integer_cst 0x7f97dd0da540 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e35e8 fields <field_decl 0x7f97dd0e4850 _flags> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e37e0> chain <type_decl 0x7f97dd0e48e8 D.4089>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0e8690>>
   
    def_stmt _8 = stderr;
    version 8
    ptr-info 0x7f97dd14b4c8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e798
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version 9
    ptr-info 0x7f97dd14b4e0>
# VUSE <.MEM_53>
_9 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:7: warning: use location
  if (!strcmp(argv[1], "run-command"))
       ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e798
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version 9
    ptr-info 0x7f97dd14b4e0>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 56

======================================================================
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:5: warning: use location
  if (!strcmp(argv[1], "run-command"))
     ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e798
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version 9
    ptr-info 0x7f97dd14b4e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f97dd13a5e0
    type <pointer_type 0x7f97dd0d73f0
        type <record_type 0x7f97dd0d7348 child_process BLK
            size <integer_cst 0x7f97dd666c30 constant 640>
            unit size <integer_cst 0x7f97dd0da2d0 constant 80>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0d7348 fields <field_decl 0x7f97dd0de260 argv> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0d73f0> chain <type_decl 0x7f97dd0de2f8 D.4015>>
        public unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f97de342cf0 proc type <record_type 0x7f97dd0d7348 child_process>
        addressable BLK file ./benchmarks/git/use_after_free_2/git_uaf_2.c line 412 col 23 size <integer_cst 0x7f97dd666c30 640> unit size <integer_cst 0x7f97dd0da2d0 80>
        align 128 context <function_decl 0x7f97dd0d8b00 main>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
# VUSE <.MEM_53>
_12 = MEM[(char * *)argv_31(D) + 16B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
_45 = strtol (_12, 0B, 10);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
_45 = strtol (_12, 0B, 10);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_53>
_45 = strtol (_12, 0B, 10);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================
_45 = strtol (_12, 0B, 10);
this stmt is child function---strtol-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:strtol 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_46 = (int) _45;
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_46 = (int) _45;
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_46 = (int) _45;
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================
_46 = (int) _45;
_22 = run_processes_parallel (_46, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:3: warning: use location
   exit(run_processes_parallel(jobs, no_job,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:3: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_59>
exit (_19);
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
exit (_16);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e870
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version 12
    ptr-info 0x7f97dd14b4f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e900
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version 14
    ptr-info 0x7f97dd14b528>
# VUSE <.MEM_55>
_14 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:7: warning: use location
  if (!strcmp(argv[1], "run-command-parallel"))
       ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e900
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version 14
    ptr-info 0x7f97dd14b528>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 56

======================================================================
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:5: warning: use location
  if (!strcmp(argv[1], "run-command-parallel"))
     ^
if (_15 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:5: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e900
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version 14
    ptr-info 0x7f97dd14b528>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
_46 = (int) _45;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_22 = run_processes_parallel (_46, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:3: warning: use location
   exit(run_processes_parallel(jobs, no_job,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:3: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_59>
exit (_19);
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 56

======================================================================
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
exit (_16);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 56

======================================================================
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:3: warning: use location
   exit(run_processes_parallel(jobs, parallel_next,
   ^
this stmt is child function---exit-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13ed38
    type <integer_type 0x7f97dd5c15e8 int public SI
        size <integer_cst 0x7f97dd5ade28 constant 32>
        unit size <integer_cst 0x7f97dd5ade40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f97dd5c15e8 precision 32 min <integer_cst 0x7f97dd5adde0 -2147483648> max <integer_cst 0x7f97dd5addf8 2147483647>
        pointer_to_this <pointer_type 0x7f97dd5c8a80>>
   
    def_stmt _46 = (int) _45;
    version 46>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13e9d8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version 17
    ptr-info 0x7f97dd14b540>
# VUSE <.MEM_55>
_17 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:7: warning: use location
  if (!strcmp(argv[1], "run-command-abort"))
       ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13e9d8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version 17
    ptr-info 0x7f97dd14b540>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_18 == 0)
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_18 == 0)
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_18 == 0)
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
beacuse in succ := 56 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 56

======================================================================
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:5: warning: use location
  if (!strcmp(argv[1], "run-command-abort"))
     ^
if (_18 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:5: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13e9d8
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version 17
    ptr-info 0x7f97dd14b540>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13eab0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version 20
    ptr-info 0x7f97dd14b558>
# VUSE <.MEM_55>
_20 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");
bb index := 13
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 56

======================================================================
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:7: warning: use location
  if (!strcmp(argv[1], "run-command-no-jobs"))
       ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f97dd13eab0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version 20
    ptr-info 0x7f97dd14b558>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 13
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:9: warning: use location
  return 0;
         ^
beacuse in succ := 56 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 56

======================================================================
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:5: warning: use location
  if (!strcmp(argv[1], "run-command-no-jobs"))
     ^
if (_21 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:5: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f97dd13eab0
    type <pointer_type 0x7f97dd0d77e0
        type <integer_type 0x7f97dd0d7738 char public string-flag QI
            size <integer_cst 0x7f97dd5adcd8 constant 8>
            unit size <integer_cst 0x7f97dd5adcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f97dd5c13f0 precision 8 min <integer_cst 0x7f97dd0da180 -128> max <integer_cst 0x7f97dd0da168 127>
            pointer_to_this <pointer_type 0x7f97dd0d77e0>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f97dd0d7888>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version 20
    ptr-info 0x7f97dd14b558>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f97dd13eb88
    type <pointer_type 0x7f97dd0e37e0
        type <record_type 0x7f97dd0e3738 FILE BLK
            size <integer_cst 0x7f97dd0da420 constant 1728>
            unit size <integer_cst 0x7f97dd0da540 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f97dd0e35e8 fields <field_decl 0x7f97dd0e4850 _flags> context <translation_unit_decl 0x7f97dd5b8168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f97dd0e37e0> chain <type_decl 0x7f97dd0e48e8 D.4089>>
        unsigned DI
        size <integer_cst 0x7f97dd5adbe8 constant 64>
        unit size <integer_cst 0x7f97dd5adc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f97dd0e8690>>
   
    def_stmt _23 = stderr;
    version 23
    ptr-info 0x7f97dd14b570>
# VUSE <.MEM_55>
_23 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:kill_children=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
n_16 = pp_15(D)->max_processes;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_1 = pp_15(D)->children;
_2 = (long unsigned int) i_11;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 1)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:1=========

 bb index 4 
<bb 4> [17.20%]:
_6 = pp_15(D)->children;
_7 = (long unsigned int) i_11;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = _9->process.pid;
kill (_10, signo_17(D));

=======is loop:1=========

 bb index 5 
<bb 5> [85.00%]:
i_19 = i_11 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [100.00%]:
# i_11 = PHI <0(2), i_19(5)>
if (i_11 < n_16)
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [15.00%]:
return;

=======Mapping node_fun:default_task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [40.94%]:
if (result_14(D) == 0)
  goto <bb 6>; [63.36%]
else
  goto <bb 3>; [36.64%]

=======is loop:0=========

 bb index 3 
<bb 3> [15.00%]:
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [85.00%]:
_1 = cp_18(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_16(D), " %s", _5);
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [100.00%]:
# i_11 = PHI <0(3), i_20(4)>
_6 = cp_18(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 4>; [85.00%]
else
  goto <bb 6>; [15.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [40.94%]:
return 0;

=======Mapping node_fun:default_start_failure=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
strbuf_addstr (err_14(D), "Starting a child failed:");
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [85.00%]:
_1 = cp_16(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_14(D), " %s", _5);
i_18 = i_11 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [100.00%]:
# i_11 = PHI <0(2), i_18(3)>
_6 = cp_16(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 3>; [85.00%]
else
  goto <bb 5>; [15.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [15.00%]:
return 0;

=======Mapping node_fun:run_processes_parallel=========
=======is loop:0=========

 bb index 2 
<bb 2> [0.18%]:
if (n_15(D) <= 0)
  goto <bb 3>; [21.69%]
else
  goto <bb 4>; [78.31%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
n_47 = online_cpus ();

=======is loop:0=========

 bb index 4 
<bb 4> [0.18%]:
# n_48 = PHI <n_15(D)(2), n_47(3)>
pp.max_processes = n_48;
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
pp.data = pp_cb_19(D);
if (get_next_task_16(D) == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.00%]:
_49 = __printf_chk (1, "BUG: you need to specify a get_next_task function%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [0.18%]:
pp.get_next_task = get_next_task_16(D);
if (start_failure_17(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.05%]:

=======is loop:0=========

 bb index 8 
<bb 8> [0.18%]:
# _50 = PHI <start_failure_17(D)(6), default_start_failure(7)>
pp.start_failure = _50;
if (task_finished_18(D) != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [0.05%]:

=======is loop:0=========

 bb index 10 
<bb 10> [0.18%]:
# _51 = PHI <task_finished_18(D)(8), default_task_finished(9)>
pp.task_finished = _51;
pp.nr_processes = 0;
pp.output_owner = 0;
pp.shutdown = 0;
_52 = (long unsigned int) n_48;
_53 = calloc (_52, 120);
pp.children = _53;
_54 = (long unsigned int) n_48;
_55 = calloc (_54, 8);
pp.pfd = _55;
_56 = &pp.buffered_output;
strbuf_init (_56, 0);
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [1.00%]:
_57 = pp.children;
_59 = (long unsigned int) i_58;
_60 = _59 * 120;
_61 = _57 + _60;
_62 = &_61->err;
strbuf_init (_62, 0);
_63 = pp.children;
_64 = (long unsigned int) i_58;
_65 = _64 * 120;
_66 = _63 + _65;
_67 = &_66->process;
child_process_init (_67);
_68 = pp.pfd;
_69 = (long unsigned int) i_58;
_70 = _69 * 8;
_71 = _68 + _70;
_71->events = 17;
_72 = pp.pfd;
_73 = (long unsigned int) i_58;
_74 = _73 * 8;
_75 = _72 + _74;
_75->fd = -1;
i_76 = i_58 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [1.18%]:
# i_58 = PHI <0(10), i_76(11)>
if (n_48 > i_58)
  goto <bb 11>; [85.00%]
else
  goto <bb 13>; [15.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [0.19%]:

=======is loop:1=========

 bb index 14 
<bb 14> [0.34%]:

=======is loop:1=========

 bb index 15 
<bb 15> [2.34%]:
goto <bb 31>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [14.73%]:
_77 = pp.children;
_79 = (long unsigned int) i_78;
_80 = _79 * 120;
_81 = _77 + _80;
_82 = _81->state;
if (_82 == 0)
  goto <bb 19>; [7.50%]
else
  goto <bb 17>; [92.50%]

=======is loop:1=========

 bb index 17 
<bb 17> [13.63%]:
i_83 = i_78 + 1;

=======is loop:1=========

 bb index 18 
<bb 18> [15.93%]:
# i_78 = PHI <0(33), i_83(17)>
_84 = pp.max_processes;
if (i_78 < _84)
  goto <bb 16>; [92.50%]
else
  goto <bb 19>; [7.50%]

=======is loop:1=========

 bb index 19 
<bb 19> [2.30%]:
_85 = pp.max_processes;
if (i_78 == _85)
  goto <bb 20>; [0.04%]
else
  goto <bb 21>; [99.96%]

=======is loop:0=========

 bb index 20 
<bb 20> [0.00%]:
_86 = __printf_chk (1, "BUG: bookkeeping is hard%s", "");
exit (1);

=======is loop:1=========

 bb index 21 
<bb 21> [2.30%]:
_87 = pp.get_next_task;
_88 = pp.children;
_89 = (long unsigned int) i_78;
_90 = _89 * 120;
_91 = _88 + _90;
_92 = &_91->data;
_93 = pp.data;
_94 = pp.children;
_95 = (long unsigned int) i_78;
_96 = _95 * 120;
_97 = _94 + _96;
_98 = &_97->err;
_99 = pp.children;
_100 = (long unsigned int) i_78;
_101 = _100 * 120;
_102 = _99 + _101;
_103 = &_102->process;
code_104 = _87 (_103, _98, _93, _92);
if (code_104 == 0)
  goto <bb 22>; [46.00%]
else
  goto <bb 23>; [54.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [1.06%]:
_105 = pp.children;
_106 = (long unsigned int) i_78;
_107 = _106 * 120;
_108 = _105 + _107;
_109 = &_108->err;
_110 = &pp.buffered_output;
strbuf_addbuf (_110, _109);
_111 = pp.children;
_112 = (long unsigned int) i_78;
_113 = _112 * 120;
_114 = _111 + _113;
_115 = &_114->err;
strbuf_reset (_115);
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [1.24%]:
_116 = pp.children;
_117 = (long unsigned int) i_78;
_118 = _117 * 120;
_119 = _116 + _118;
_119->process.err = -1;
_120 = pp.children;
_121 = (long unsigned int) i_78;
_122 = _121 * 120;
_123 = _120 + _122;
_123->process.stdout_to_stderr = 1;
_124 = pp.children;
_125 = (long unsigned int) i_78;
_126 = _125 * 120;
_127 = _124 + _126;
_127->process.no_stdin = 1;
_128 = pp.children;
_129 = (long unsigned int) i_78;
_130 = _129 * 120;
_131 = _128 + _130;
_132 = &_131->process;
_133 = start_command (_132);
if (_133 != 0)
  goto <bb 24>; [86.00%]
else
  goto <bb 26>; [14.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [1.07%]:
_134 = pp.start_failure;
_135 = pp.children;
_136 = (long unsigned int) i_78;
_137 = _136 * 120;
_138 = _135 + _137;
_139 = &_138->data;
_140 = pp.data;
_141 = pp.children;
_142 = (long unsigned int) i_78;
_143 = _142 * 120;
_144 = _141 + _143;
_145 = &_144->err;
_146 = pp.children;
_147 = (long unsigned int) i_78;
_148 = _147 * 120;
_149 = _146 + _148;
_150 = &_149->process;
code_151 = _134 (_150, _145, _140, _139);
_152 = pp.children;
_153 = (long unsigned int) i_78;
_154 = _153 * 120;
_155 = _152 + _154;
_156 = &_155->err;
_157 = &pp.buffered_output;
strbuf_addbuf (_157, _156);
_158 = pp.children;
_159 = (long unsigned int) i_78;
_160 = _159 * 120;
_161 = _158 + _160;
_162 = &_161->err;
strbuf_reset (_162);
if (code_151 != 0)
  goto <bb 25>; [50.00%]
else
  goto <bb 27>; [50.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [0.53%]:
pp.shutdown = 1;
goto <bb 27>; [100.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [0.17%]:
_163 = pp.nr_processes;
_164 = _163 + 1;
pp.nr_processes = _164;
_165 = pp.children;
_166 = (long unsigned int) i_78;
_167 = _166 * 120;
_168 = _165 + _167;
_168->state = 1;
_169 = pp.children;
_170 = (long unsigned int) i_78;
_171 = _170 * 120;
_172 = _169 + _171;
_173 = pp.pfd;
_174 = (long unsigned int) i_78;
_175 = _174 * 8;
_176 = _173 + _175;
_177 = _172->process.err;
_176->fd = _177;

=======is loop:1=========

 bb index 27 
<bb 27> [2.30%]:
# _178 = PHI <1(22), code_151(24), code_151(25), 0(26)>
_313 = _178;
code_22 = _313;
if (code_22 == 0)
  goto <bb 28>; [33.00%]
else
  goto <bb 29>; [67.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [0.76%]:
// predicted unlikely by continue predictor.
i_25 = i_8 + 1;
goto <bb 31>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [1.54%]:
if (code_22 < 0)
  goto <bb 30>; [21.69%]
else
  goto <bb 34>; [78.31%]

=======is loop:1=========

 bb index 30 
<bb 30> [0.33%]:
pp.shutdown = 1;
_1 = -code_22;
kill_children (&pp, _1);
goto <bb 34>; [100.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [3.10%]:
# i_8 = PHI <0(15), i_25(28)>
if (i_8 <= 3)
  goto <bb 32>; [80.00%]
else
  goto <bb 34>; [20.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [2.48%]:
_2 = BIT_FIELD_REF <pp, 8, 448>;
_3 = _2 & 1;
if (_3 == 0)
  goto <bb 33>; [96.25%]
else
  goto <bb 34>; [3.75%]

=======is loop:1=========

 bb index 33 
<bb 33> [2.39%]:
_4 = pp.nr_processes;
_5 = pp.max_processes;
if (_4 < _5)
  goto <bb 18>; [96.25%]
else
  goto <bb 34>; [3.75%]

=======is loop:1=========

 bb index 34 
<bb 34> [2.34%]:
_6 = pp.nr_processes;
if (_6 == 0)
  goto <bb 56>; [7.50%]
else
  goto <bb 35>; [92.50%]

=======is loop:1=========

 bb index 35 
<bb 35> [2.17%]:
pp_buffer_stderr (&pp, 100);
pp_output (&pp);
n_179 = pp.max_processes;
goto <bb 51>; [100.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [92.50%]:
_180 = pp.children;
_182 = (long unsigned int) i_181;
_183 = _182 * 120;
_184 = _180 + _183;
_185 = _184->state;
if (_185 == 2)
  goto <bb 39>; [7.50%]
else
  goto <bb 37>; [92.50%]

=======is loop:1=========

 bb index 37 
<bb 37> [85.56%]:
i_186 = i_181 + 1;

=======is loop:1=========

 bb index 38 
<bb 38> [100.00%]:
# i_181 = PHI <i_186(37), 0(52)>
_187 = pp.max_processes;
if (i_181 < _187)
  goto <bb 36>; [92.50%]
else
  goto <bb 39>; [7.50%]

=======is loop:1=========

 bb index 39 
<bb 39> [14.44%]:
_188 = pp.max_processes;
if (i_181 == _188)
  goto <bb 53>; [5.00%]
else
  goto <bb 40>; [95.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [13.72%]:
_189 = pp.children;
_190 = (long unsigned int) i_181;
_191 = _190 * 120;
_192 = _189 + _191;
_193 = &_192->process;
_272 = _193->argv;
_273 = *_272;
_274 = _193->pid;
ret_275 = wait_or_whine (_274, _273, 0);
_276 = &_193->args;
argv_array_clear (_276);
_277 = &_193->env_array;
argv_array_clear (_277);
_319 = ret_275;
code_194 = _319;
_195 = pp.task_finished;
_196 = pp.children;
_197 = (long unsigned int) i_181;
_198 = _197 * 120;
_199 = _196 + _198;
_200 = &_199->data;
_201 = pp.data;
_202 = pp.children;
_203 = (long unsigned int) i_181;
_204 = _203 * 120;
_205 = _202 + _204;
_206 = &_205->err;
_207 = pp.children;
_208 = (long unsigned int) i_181;
_209 = _208 * 120;
_210 = _207 + _209;
_211 = &_210->process;
code_212 = _195 (code_194, _211, _206, _201, _200);
if (code_212 != 0)
  goto <bb 41>; [50.00%]
else
  goto <bb 42>; [50.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [6.86%]:

=======is loop:1=========

 bb index 42 
<bb 42> [13.72%]:
# result_269 = PHI <result_270(40), code_212(41)>
if (code_212 < 0)
  goto <bb 53>; [5.00%]
else
  goto <bb 43>; [95.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [13.03%]:
_213 = pp.nr_processes;
_214 = _213 + -1;
pp.nr_processes = _214;
_215 = pp.children;
_216 = (long unsigned int) i_181;
_217 = _216 * 120;
_218 = _215 + _217;
_218->state = 0;
_219 = pp.pfd;
_220 = (long unsigned int) i_181;
_221 = _220 * 8;
_222 = _219 + _221;
_222->fd = -1;
_223 = pp.children;
_224 = (long unsigned int) i_181;
_225 = _224 * 120;
_226 = _223 + _225;
_227 = &_226->process;
child_process_init (_227);
_228 = pp.output_owner;
if (i_181 != _228)
  goto <bb 44>; [79.03%]
else
  goto <bb 45>; [20.97%]

=======is loop:1=========

 bb index 44 
<bb 44> [10.30%]:
_229 = pp.children;
_230 = (long unsigned int) i_181;
_231 = _230 * 120;
_232 = _229 + _231;
_233 = &_232->err;
_234 = &pp.buffered_output;
strbuf_addbuf (_234, _233);
_235 = pp.children;
_236 = (long unsigned int) i_181;
_237 = _236 * 120;
_238 = _235 + _237;
_239 = &_238->err;
strbuf_reset (_239);
goto <bb 50>; [100.00%]

=======is loop:1=========

 bb index 45 
<bb 45> [2.73%]:
_240 = stderr;
_241 = pp.children;
_242 = (long unsigned int) i_181;
_243 = _242 * 120;
_244 = _241 + _243;
_245 = _244->err.buf;
fputs (_245, _240);
_246 = pp.children;
_247 = (long unsigned int) i_181;
_248 = _247 * 120;
_249 = _246 + _248;
_250 = &_249->err;
strbuf_reset (_250);
_251 = stderr;
_252 = pp.buffered_output.buf;
fputs (_252, _251);
_253 = &pp.buffered_output;
strbuf_reset (_253);
goto <bb 48>; [100.00%]

=======is loop:1=========

 bb index 46 
<bb 46> [17.51%]:
_254 = pp.children;
_255 = pp.output_owner;
_257 = _255 + i_256;
_258 = _257 % n_179;
_259 = (long unsigned int) _258;
_260 = _259 * 120;
_261 = _254 + _260;
_262 = _261->state;
if (_262 == 1)
  goto <bb 49>; [7.50%]
else
  goto <bb 47>; [92.50%]

=======is loop:1=========

 bb index 47 
<bb 47> [16.19%]:
i_263 = i_256 + 1;

=======is loop:1=========

 bb index 48 
<bb 48> [18.93%]:
# i_256 = PHI <0(45), i_263(47)>
if (n_179 > i_256)
  goto <bb 46>; [92.50%]
else
  goto <bb 49>; [7.50%]

=======is loop:1=========

 bb index 49 
<bb 49> [2.73%]:
_264 = pp.output_owner;
_265 = i_256 + _264;
_266 = _265 % n_179;
pp.output_owner = _266;

=======is loop:1=========

 bb index 50 
<bb 50> [13.03%]:
# result_271 = PHI <result_269(44), result_269(49)>

=======is loop:1=========

 bb index 51 
<bb 51> [15.20%]:
# result_270 = PHI <0(35), result_271(50)>
_267 = pp.nr_processes;
if (_267 > 0)
  goto <bb 52>; [95.00%]
else
  goto <bb 53>; [5.00%]

=======is loop:1=========

 bb index 52 
<bb 52> [14.44%]:
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 53 
<bb 53> [2.17%]:
# result_268 = PHI <result_270(39), result_269(42), result_270(51)>
_332 = result_268;
code_29 = _332;
if (code_29 != 0)
  goto <bb 54>; [7.50%]
else
  goto <bb 15>; [92.50%]

=======is loop:1=========

 bb index 54 
<bb 54> [0.16%]:
pp.shutdown = 1;
if (code_29 < 0)
  goto <bb 55>; [7.50%]
else
  goto <bb 14>; [92.50%]

=======is loop:1=========

 bb index 55 
<bb 55> [0.01%]:
_7 = -code_29;
kill_children (&pp, _7);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 56 
<bb 56> [0.18%]:
pp_cleanup (&pp);
pp ={v} {CLOBBER};
return 0;

=======Mapping node_fun:no_job=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
strbuf_addf (err_2(D), "no further jobs available\n");
return 0;

=======Mapping node_fun:task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
strbuf_addf (err_2(D), "asking for a quick stop\n");
return 1;

=======Mapping node_fun:parallel_next=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = number_callbacks;
if (_1 > 3)
  goto <bb 4>; [63.36%]
else
  goto <bb 3>; [36.64%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
_2 = MEM[(struct child_process *)cb_8(D)].argv;
_3 = &cp_10(D)->args;
argv_array_pushv (_3, _2);
strbuf_addf (err_12(D), "preloaded output of a child\n");
_4 = number_callbacks;
_5 = _4 + 1;
number_callbacks = _5;

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _6 = PHI <0(2), 1(3)>
return _6;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
proc = {};
proc.args.argv = &empty_argv;
proc.env_array.argv = &empty_argv;
if (argc_30(D) <= 2)
  goto <bb 16>; [46.00%]
else
  goto <bb 3>; [54.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [54.00%]:
_1 = argv_31(D) + 16;
proc.argv = _1;
_2 = MEM[(char * *)argv_31(D) + 8B];
_3 = strcmp (_2, "start-command-ENOENT");
if (_3 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [17.82%]:
_4 = start_command (&proc);
if (_4 < 0)
  goto <bb 5>; [57.28%]
else
  goto <bb 6>; [42.72%]

=======is loop:0=========

 bb index 5 
<bb 5> [10.21%]:
_5 = __errno_location ();
_6 = *_5;
if (_6 == 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [14.35%]:
_7 = MEM[(char * *)argv_31(D) + 8B];
_8 = stderr;
_44 = __fprintf_chk (_8, 1, "FAIL %s\n", _7);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [36.18%]:
_9 = MEM[(char * *)argv_31(D) + 8B];
_10 = strcmp (_9, "run-command");
if (_10 == 0)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [0.01%]:
_11 = run_command (&proc);
exit (_11);

=======is loop:0=========

 bb index 9 
<bb 9> [36.17%]:
_12 = MEM[(char * *)argv_31(D) + 16B];
_45 = strtol (_12, 0B, 10);
_46 = (int) _45;
_13 = argv_31(D) + 24;
proc.argv = _13;
_14 = MEM[(char * *)argv_31(D) + 8B];
_15 = strcmp (_14, "run-command-parallel");
if (_15 == 0)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [0.01%]:
_16 = run_processes_parallel (_46, parallel_next, 0B, 0B, &proc);
exit (_16);

=======is loop:0=========

 bb index 11 
<bb 11> [36.15%]:
_17 = MEM[(char * *)argv_31(D) + 8B];
_18 = strcmp (_17, "run-command-abort");
if (_18 == 0)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [0.01%]:
_19 = run_processes_parallel (_46, parallel_next, 0B, task_finished, &proc);
exit (_19);

=======is loop:0=========

 bb index 13 
<bb 13> [36.14%]:
_20 = MEM[(char * *)argv_31(D) + 8B];
_21 = strcmp (_20, "run-command-no-jobs");
if (_21 == 0)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [0.01%]:
_22 = run_processes_parallel (_46, no_job, 0B, task_finished, &proc);
exit (_22);

=======is loop:0=========

 bb index 15 
<bb 15> [36.12%]:
_23 = stderr;
_47 = __fprintf_chk (_23, 1, "check usage\n");

=======is loop:0=========

 bb index 16 
<bb 16> [99.94%]:
# _24 = PHI <1(2), 0(5), 1(6), 1(15)>
proc ={v} {CLOBBER};
return _24;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 39 [0m
[40;34m    used_stmt array stack totalsize of : 1800 [0m
[40;34m    collect time: : 0.000173 s [0m
[40;34m    algorithm time: 0.097059 s [0m
[40;34m    gimple stmt count : : 419 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: warning: relocation against `empty_argv' in read-only section `.text'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `default_task_finished':
<artificial>:(.text+0x2a): undefined reference to `strbuf_addf'
/usr/bin/ld: <artificial>:(.text+0x63): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `no_job':
<artificial>:(.text+0x98): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `task_finished':
<artificial>:(.text+0xba): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `parallel_next':
<artificial>:(.text+0xe4): undefined reference to `argv_array_pushv'
/usr/bin/ld: <artificial>:(.text+0xf8): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `default_start_failure':
<artificial>:(.text+0x128): undefined reference to `strbuf_addstr'
/usr/bin/ld: <artificial>:(.text+0x161): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `run_processes_parallel':
<artificial>:(.text+0x1fb): undefined reference to `online_cpus'
/usr/bin/ld: <artificial>:(.text+0x211): undefined reference to `trace_printf'
/usr/bin/ld: <artificial>:(.text+0x2b3): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x308): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x31b): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x3ad): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x3c0): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x3da): undefined reference to `pp_buffer_stderr'
/usr/bin/ld: <artificial>:(.text+0x3e4): undefined reference to `pp_output'
/usr/bin/ld: <artificial>:(.text+0x42b): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x466): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x479): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x50f): undefined reference to `wait_or_whine'
/usr/bin/ld: <artificial>:(.text+0x51e): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x529): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x587): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x5a9): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x5bc): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x5ed): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x60a): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x677): undefined reference to `pp_cleanup'
/usr/bin/ld: /tmp/ccNZ4A5o.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x713): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x800): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x842): undefined reference to `run_command'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
collect2: error: ld returned 1 exit status
